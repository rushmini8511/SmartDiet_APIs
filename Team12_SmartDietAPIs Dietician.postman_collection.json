{
	"info": {
		"_postman_id": "b18eebdf-b220-4b9b-a478-10a5bbac82c6",
		"name": "Team12_SmartDietAPIs Dietician",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37335494",
		"_collection_link": "https://team12-api-hackathon.postman.co/workspace/Team12_SmartDiet-APIs_Postman-H~642872c2-9787-4e43-8117-f254f6d07eba/collection/37335494-b18eebdf-b220-4b9b-a478-10a5bbac82c6?action=share&source=collection_link&creator=37335494"
	},
	"item": [
		{
			"name": "PATIENT MODULE R",
			"item": [
				{
					"name": "data driven",
					"item": [
						{
							"name": "create dietician login Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" var jsonData = pm.response.json();\r",
											" pm.environment.set(\"dietToken\",jsonData.token);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJSZWluYV9SdWVja2VyOTdAeWFob28uY29tIiwiaWF0IjoxNzIyNDU5OTM1LCJleHAiOjE3MjI0ODg3MzV9.CwkEh3-Q7SGg3owo6ZlApiq...",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"Funny09\",\r\n  \"userLoginEmail\": \"Reina_Ruecker97@yahoo.com\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Patient",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const allergies = [ \"Soy\", \"Almond\",  \"Walnut\", \"Pistachio\", \"Sesame\",  \"Pecan\", \"Cashew\",\"Peanuts\",\"Egg\", \"Milk\"];\r",
											"function getRandomItem(array) {\r",
											"    const randomIndex = Math.floor(Math.random() * array.length);\r",
											"    return array[randomIndex];\r",
											"}\r",
											"pm.variables.set(\"Allergy\", getRandomItem(allergies));\r",
											"\r",
											"const cuisine_category = [ \"indian\", \"south indian\", \"rajasthani\", \"punjabi\", \"bengali\", \"orissa\", \"gujarati\", \"maharashtrian\", \"andhra\", \"kerala\", \"goan\", \"kashmiri\", \"himachali\",\"tamil nadu\", \"karnataka\", \"sindhi\", \"chhattisgarhi\", \"madhya pradesh\", \"assamese\", \"manipuri\", \"tripuri\", \"sikkimese\", \"mizo\", \"arunachali\", \"uttarakhand\", \"haryanvi\", \"awadhi\", \"bihari\", \"uttar pradesh\", \"delhi\", \"north indian\", \"italian\", \"french\", \"arabic\",\"lebanese\", \"thai\", \"mexican\", \"american\" ];\r",
											"\r",
											"function getRandomItem(array) {\r",
											"    const randomIndex = Math.floor(Math.random() * array.length);\r",
											"    return array[randomIndex];\r",
											"}\r",
											"pm.variables.set(\"CuisineCategory\", getRandomItem(cuisine_category));\r",
											"\r",
											"const Food_Preference = [ \"Vegan\", \"Vegetarian\", \"Jain\", \"Eggetarian\", \"NonVeg\" ];\r",
											"//Eggetarian is a bug to be logged\r",
											"function getRandomItem(array) {\r",
											"    const randomIndex = Math.floor(Math.random() * array.length);\r",
											"    return array[randomIndex];\r",
											"}\r",
											"pm.variables.set(\"FoodPreference\", getRandomItem(Food_Preference));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Renamed the 'jsonBody' variable to 'responseBody' \r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Check Status Text\",()=>{\r",
											"    pm.response.to.have.status('Created');\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type Header is present\",()=>{\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type Header is application/json\",()=>{\r",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json');\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\",()=>{\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"let responsebody=pm.response.json();\r",
											"pm.test(\"Get Patients data type of response\",()=>{\r",
											"    pm.expect(responsebody.patientId).to.be.a(\"number\");\r",
											"    pm.expect(responsebody.FirstName).to.be.a(\"string\");\r",
											"    pm.expect(responsebody.LastName).to.be.a(\"string\");\r",
											"    pm.expect(responsebody.ContactNumber).to.be.a(\"string\");\r",
											"    pm.expect(responsebody.Email).to.be.a(\"string\");\r",
											"    pm.expect(responsebody.Allergy).to.be.a(\"string\");\r",
											"    pm.expect(responsebody.FoodPreference).to.be.a(\"string\");\r",
											"    pm.expect(responsebody.CuisineCategory).to.be.a(\"string\");\r",
											"    pm.expect(responsebody.DateOfBirth).to.be.a(\"string\");\r",
											"    pm.expect(responsebody.DieticianId).to.be.a(\"number\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify the values are not null\", function () {\r",
											"    pm.expect(responsebody.FirstName).to.not.null;\r",
											"    pm.expect(responsebody.LastName).to.not.null;\r",
											"    pm.expect(responsebody.ContactNumber).to.not.null;\r",
											"    pm.expect(responsebody.Email).to.not.null;\r",
											"    pm.expect(responsebody.DateOfBirth).to.not.null;\r",
											"    pm.expect(responsebody.Allergy).to.not.null;\r",
											"    pm.expect(responsebody.CuisineCategory).to.not.null;\r",
											"});\r",
											"pm.environment.set(\"patientEmail\", responsebody.Email);\r",
											"\r",
											"pm.environment.set(\"patientId\", responsebody.patientId);\r",
											"\r",
											"const fileID = Object.keys(responsebody.FileMorbidity)[0];\r",
											"pm.environment.set(\"patient_fileID\",Â fileID);\r",
											"\r",
											"var schema={\r",
											"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"    \"type\": \"object\",\r",
											"    \"properties\": {\r",
											"        \"patientId\": {\r",
											"            \"type\": \"integer\"\r",
											"        },\r",
											"        \"FirstName\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"LastName\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"ContactNumber\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"Email\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"Allergy\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"FoodPreference\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"CuisineCategory\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"FileMorbidity\": {\r",
											"            \"type\": \"object\",\r",
											"            \"properties\": {\r",
											"                \"66ad69134717cf471aaad177\": {\r",
											"                    \"type\": \"object\",\r",
											"                    \"properties\": {\r",
											"                        \"HbA1c\": {\r",
											"                            \"type\": \"string\"\r",
											"                        },\r",
											"                        \"Average Glucose\": {\r",
											"                            \"type\": \"string\"\r",
											"                        }\r",
											"                    },\r",
											"                    \"required\": [\r",
											"                        \"HbA1c\",\r",
											"                        \"Average Glucose\"\r",
											"                    ]\r",
											"                },\r",
											"                \"66ad66be4717cf471aaad16f\": {\r",
											"                    \"type\": \"object\",\r",
											"                    \"properties\": {\r",
											"                        \"HbA1c\": {\r",
											"                            \"type\": \"string\"\r",
											"                        },\r",
											"                        \"Average Glucose\": {\r",
											"                            \"type\": \"string\"\r",
											"                        }\r",
											"                    },\r",
											"                    \"required\": [\r",
											"                        \"HbA1c\",\r",
											"                        \"Average Glucose\"\r",
											"                    ]\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"66ad69134717cf471aaad177\",\r",
											"                \"66ad66be4717cf471aaad16f\"\r",
											"            ]\r",
											"        },\r",
											"        \"FileMorbidityCondition\": {\r",
											"            \"type\": \"object\",\r",
											"            \"properties\": {\r",
											"                \"66ad69134717cf471aaad177\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"66ad66be4717cf471aaad16f\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"66ad69134717cf471aaad177\",\r",
											"                \"66ad66be4717cf471aaad16f\"\r",
											"            ]\r",
											"        },\r",
											"        \"DateOfBirth\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"DieticianId\": {\r",
											"            \"type\": \"integer\"\r",
											"        },\r",
											"        \"Vitals\": {\r",
											"            \"type\": \"object\",\r",
											"            \"properties\": {\r",
											"                \"66ad69134717cf471aaad177\": {\r",
											"                    \"type\": \"object\",\r",
											"                    \"properties\": {\r",
											"                        \"Weight\": {\r",
											"                            \"type\": \"number\"\r",
											"                        },\r",
											"                        \"Height\": {\r",
											"                            \"type\": \"number\"\r",
											"                        },\r",
											"                        \"Temperature\": {\r",
											"                            \"type\": \"number\"\r",
											"                        },\r",
											"                        \"SP\": {\r",
											"                            \"type\": \"integer\"\r",
											"                        },\r",
											"                        \"DP\": {\r",
											"                            \"type\": \"integer\"\r",
											"                        }\r",
											"                    },\r",
											"                    \"required\": [\r",
											"                        \"Weight\",\r",
											"                        \"Height\",\r",
											"                        \"Temperature\",\r",
											"                        \"SP\",\r",
											"                        \"DP\"\r",
											"                    ]\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"66ad69134717cf471aaad177\"\r",
											"            ]\r",
											"        },\r",
											"        \"LastVisitDate\": {\r",
											"            \"type\": \"string\"\r",
											"        }\r",
											"    },\r",
											"    \"required\": [\r",
											"        \"patientId\",\r",
											"        \"FirstName\",\r",
											"        \"LastName\",\r",
											"        \"ContactNumber\",\r",
											"        \"Email\",\r",
											"        \"Allergy\",\r",
											"        \"FoodPreference\",\r",
											"        \"CuisineCategory\",\r",
											"        \"FileMorbidity\",\r",
											"        \"FileMorbidityCondition\",\r",
											"        \"DateOfBirth\",\r",
											"        \"DieticianId\",\r",
											"        \"Vitals\",\r",
											"        \"LastVisitDate\"\r",
											"    ]\r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', () =>{\r",
											"    pm.expect(responsebody).to.have.jsonSchema(schema);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": "{{Patient_file1}}"
										}
									]
								},
								"url": {
									"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
									"protocol": "https",
									"host": [
										"dietician-july-api-hackathon-80f2590665cc",
										"herokuapp",
										"com"
									],
									"path": [
										"dietician",
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "New Request L",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345983\",\n\"Email\": \"smartdiet@gmail.com\",\n\"Allergy\": \"soy\",\n\"FoodPreference\": \"jain\",\n\"CuisineCategory\":\"indian\",\n\"DateOfBirth\": \"1986-02-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722460648&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=7lDaY9ld6NskRFkFKPQXQoWPgxqbgHVpV4uFMUWegdY%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722460648&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=7lDaY9ld6NskRFkFKPQXQoWPgxqbgHVpV4uFMUWegdY%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 31 Jul 2024 21:17:29 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345983\",\n    \"Email\": \"smartdiet@gmail.com\",\n    \"Allergy\": \"soy\",\n    \"FoodPreference\": \"jain\",\n    \"CuisineCategory\": \"indian\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\"\n    },\n    \"DateOfBirth\": \"1986-02-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								},
								{
									"name": "Create Patient",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"mall\",\n\"LastName\": \"mall\",\n\"ContactNumber\": \"9968345983\",\n\"Email\": \"smart@gmail.com\",\n\"Allergy\": \"soy\",\n\"FoodPreference\": \"jain\",\n\"CuisineCategory\":\"indian\",\n\"DateOfBirth\": \"1986-02-24\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "{{Patient_file1}}"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722612549&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=tc3vfZY%2FW9ZO0V4eF0eTYI1CIyOWjq1%2BrZ9ilkaqm3o%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722612549&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=tc3vfZY%2FW9ZO0V4eF0eTYI1CIyOWjq1%2BrZ9ilkaqm3o%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 15:29:09 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 348,\n    \"FirstName\": \"mall\",\n    \"LastName\": \"mall\",\n    \"ContactNumber\": \"9968345983\",\n    \"Email\": \"smart@gmail.com\",\n    \"Allergy\": \"soy\",\n    \"FoodPreference\": \"jain\",\n    \"CuisineCategory\": \"indian\",\n    \"FileMorbidity\": {\n        \"66acfb454717cf471aaad07c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66acfb454717cf471aaad07c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\"\n    },\n    \"DateOfBirth\": \"1986-02-24\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66acfb454717cf471aaad07c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-08-02T15:29:09.780+00:00\"\n}"
								}
							]
						},
						{
							"name": "Create Patient with Missing FirstName Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Get the form data object\r",
											"let formData = pm.request.body.formdata;\r",
											"\r",
											"\r",
											"if (formData) {\r",
											"    console.log(\"FormData exists and count method is available.\");\r",
											"\r",
											"    \r",
											"    let count = formData.count();\r",
											"    console.log(\"Number of fields in formData: \" + count);\r",
											"\r",
											"    \r",
											"    for (let i = 0; i < count; i++) {\r",
											"        let item = formData.get(i);\r",
											"\r",
											"       \r",
											"        if (item) {\r",
											"            console.log(\"Item at index \" + i + \": \", item);\r",
											"\r",
											"            if (item.key === \"FirstName\") {\r",
											"                let includeFirstname = pm.variables.get(\"Patient_Firstname\") === 'true';\r",
											"                \r",
											"               \r",
											"                if (includeFirstname) {\r",
											"                    formData.remove(item.key); \r",
											"                }\r",
											"            }\r",
											"        } else {\r",
											"            console.error(\"Form data item is undefined or null at index \" + i);\r",
											"        }\r",
											"    }\r",
											"} else {\r",
											"    console.error(\"Form data is undefined or does not have a count method.\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has valid JSON body\", function () {\r",
											"  pm.expect(responseData).to.be.an('object');\r",
											"  pm.expect(responseData).to.have.property('timestamp');\r",
											"  pm.expect(responseData).to.have.property('status');\r",
											"  pm.expect(responseData).to.have.property('error');\r",
											"  pm.expect(responseData).to.have.property('path');\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientInfo",
											"value": "{ \"FirstName\": \"{{Patient_Firstname}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
									"protocol": "https",
									"host": [
										"dietician-july-api-hackathon-80f2590665cc",
										"herokuapp",
										"com"
									],
									"path": [
										"dietician",
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Missing CuisineCategory",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientInfo",
													"value": "{ \"FirstName\": \"Sony\",\n\"LastName\": \"Sony\",\n\"ContactNumber\": \"9005089943\",\n\"Email\": \"Sony@gmail.com\",\n\"Allergy\": \"pecan\",\n\"FoodPreference\": \"Nonveg\",\n\"CuisineCategory\":\"\",\n\"DateOfBirth\": \"1977-02-04\"\n}",
													"type": "text"
												},
												{
													"key": "File",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722700373&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=2e9rfCi5OiUxg4ojh9w8b3NnNJYz6X9NrgSQfIVOFTo%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722700373&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=2e9rfCi5OiUxg4ojh9w8b3NnNJYz6X9NrgSQfIVOFTo%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sat, 03 Aug 2024 15:52:53 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-03T15:52:53.395+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								},
								{
									"name": "Misspelled Mandatory Field",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientInfo",
													"value": "{ \"FirstName\": \"Sony\",\n\"LastName\": \"Sony\",\n\"ContactNumber\": \"9005089943\",\n\"Email\": \"Sony@gmail.com\",\n\"Allergy\": \"pecun\",\n\"FoodPreference\": \"Nonveg\",\n\"CuisineCategory\":\"Indian\",\n\"DateOfBirth\": \"1967-02-04\"\n}",
													"type": "text"
												},
												{
													"key": "File",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722700698&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=Vn53yrwk%2BT0L8LNDLLM4R6f%2FaUmbrkKTlf2i4lyz9o8%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722700698&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=Vn53yrwk%2BT0L8LNDLLM4R6f%2FaUmbrkKTlf2i4lyz9o8%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sat, 03 Aug 2024 15:58:19 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-03T15:58:19.300+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								},
								{
									"name": "Missing FirstName",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientInfo",
													"value": "{ \"FirstName\": \"\",\n\"LastName\": \"Sony\",\n\"ContactNumber\": \"9005089943\",\n\"Email\": \"Sony@gmail.com\",\n\"Allergy\": \"pecun\",\n\"FoodPreference\": \"Nonveg\",\n\"CuisineCategory\":\"Indian\",\n\"DateOfBirth\": \"1967-02-04\"\n}",
													"type": "text"
												},
												{
													"key": "File",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1723012486&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=sXI2rOl8PVav1FKQ4ThDGRk0fn5JqQOulRb3tVXix7s%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1723012486&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=sXI2rOl8PVav1FKQ4ThDGRk0fn5JqQOulRb3tVXix7s%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 07 Aug 2024 06:34:46 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-07T06:34:46.841+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create Patient with Missing FirstName",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has valid JSON body\", function () {\r",
											"  pm.expect(responseData).to.be.an('object');\r",
											"  pm.expect(responseData).to.have.property('timestamp');\r",
											"  pm.expect(responseData).to.have.property('status');\r",
											"  pm.expect(responseData).to.have.property('error');\r",
											"  pm.expect(responseData).to.have.property('path');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientInfo",
											"value": "{ \"FirstName\": \"\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
									"protocol": "https",
									"host": [
										"dietician-july-api-hackathon-80f2590665cc",
										"herokuapp",
										"com"
									],
									"path": [
										"dietician",
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Missing CuisineCategory",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientInfo",
													"value": "{ \"FirstName\": \"Sony\",\n\"LastName\": \"Sony\",\n\"ContactNumber\": \"9005089943\",\n\"Email\": \"Sony@gmail.com\",\n\"Allergy\": \"pecan\",\n\"FoodPreference\": \"Nonveg\",\n\"CuisineCategory\":\"\",\n\"DateOfBirth\": \"1977-02-04\"\n}",
													"type": "text"
												},
												{
													"key": "File",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722700373&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=2e9rfCi5OiUxg4ojh9w8b3NnNJYz6X9NrgSQfIVOFTo%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722700373&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=2e9rfCi5OiUxg4ojh9w8b3NnNJYz6X9NrgSQfIVOFTo%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sat, 03 Aug 2024 15:52:53 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-03T15:52:53.395+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								},
								{
									"name": "Misspelled Mandatory Field",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientInfo",
													"value": "{ \"FirstName\": \"Sony\",\n\"LastName\": \"Sony\",\n\"ContactNumber\": \"9005089943\",\n\"Email\": \"Sony@gmail.com\",\n\"Allergy\": \"pecun\",\n\"FoodPreference\": \"Nonveg\",\n\"CuisineCategory\":\"Indian\",\n\"DateOfBirth\": \"1967-02-04\"\n}",
													"type": "text"
												},
												{
													"key": "File",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722700698&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=Vn53yrwk%2BT0L8LNDLLM4R6f%2FaUmbrkKTlf2i4lyz9o8%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722700698&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=Vn53yrwk%2BT0L8LNDLLM4R6f%2FaUmbrkKTlf2i4lyz9o8%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sat, 03 Aug 2024 15:58:19 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-03T15:58:19.300+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								},
								{
									"name": "Missing FirstName",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientInfo",
													"value": "{ \"FirstName\": \"\",\n\"LastName\": \"Sony\",\n\"ContactNumber\": \"9005089943\",\n\"Email\": \"Sony@gmail.com\",\n\"Allergy\": \"pecun\",\n\"FoodPreference\": \"Nonveg\",\n\"CuisineCategory\":\"Indian\",\n\"DateOfBirth\": \"1967-02-04\"\n}",
													"type": "text"
												},
												{
													"key": "File",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1723012486&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=sXI2rOl8PVav1FKQ4ThDGRk0fn5JqQOulRb3tVXix7s%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1723012486&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=sXI2rOl8PVav1FKQ4ThDGRk0fn5JqQOulRb3tVXix7s%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 07 Aug 2024 06:34:46 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-07T06:34:46.841+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create Patient with Invalid Endpoint",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Renamed the variable to responseData\r",
											"pm.test(\"Status code is 404\", () => {\r",
											"  pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.error).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Error message should not be empty\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientId",
											"value": ": { \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}\n",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}{{InvalidEndPoint}}",
									"host": [
										"{{baseURL}}{{InvalidEndPoint}}"
									]
								}
							},
							"response": [
								{
									"name": "New Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientId",
													"value": ": { \"FirstName\": \"Sing\",\n\"LastName\": \"sing\",\n\"ContactNumber\": \"7878786778\",\n\"Email\": \"sing@gmail.com\",\n\"Allergy\": \"egg\",\n\"FoodPreference\": \"Vegetarian\",\n\"CuisineCategory\":\"lebanese\",\n\"DateOfBirth\": \"1996-02-14\"\n}\n",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/info",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"info"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722632637&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=0WfCplco7FJTq3s14Knmf%2FFN14sBI5hNZ5gjgQfHz28%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722632637&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=0WfCplco7FJTq3s14Knmf%2FFN14sBI5hNZ5gjgQfHz28%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 21:03:57 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-02T21:03:57.979+00:00\",\n    \"status\": 404,\n    \"error\": \"Not Found\",\n    \"path\": \"/dietician/info\"\n}"
								},
								{
									"name": "Create Patient with Invalid Endpoint",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientId",
													"value": ": { \"FirstName\": \"Sing\",\n\"LastName\": \"sing\",\n\"ContactNumber\": \"7878786778\",\n\"Email\": \"sing@gmail.com\",\n\"Allergy\": \"egg\",\n\"FoodPreference\": \"Vegetarian\",\n\"CuisineCategory\":\"lebanese\",\n\"DateOfBirth\": \"1996-02-14\"\n}\n",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/info",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"info"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1723037888&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=zc5rywuj0ywUQYvBLmwRB3qEzx0kEYMEEBTFf7FWTMY%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1723037888&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=zc5rywuj0ywUQYvBLmwRB3qEzx0kEYMEEBTFf7FWTMY%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 07 Aug 2024 13:38:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-07T13:38:08.551+00:00\",\n    \"status\": 404,\n    \"error\": \"Not Found\",\n    \"path\": \"/dietician/info\"\n}"
								}
							]
						},
						{
							"name": "Create Patient with Invalid authorisation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// commonTests.unauthorizedRequest;\r",
											"\r",
											"pm.test(\"Status code is 401\", () => {\r",
											"  pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is a non-empty string\", function () {\r",
											"    // const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(pm.response.json().error).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Error message should not be empty\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.request.headers.remove(\"Authorization\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientId",
											"value": ": { \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}\n",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "New Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientId",
													"value": ": { \"FirstName\": \"Sing\",\n\"LastName\": \"sing\",\n\"ContactNumber\": \"7878786778\",\n\"Email\": \"sing@gmail.com\",\n\"Allergy\": \"egg\",\n\"FoodPreference\": \"Vegetarian\",\n\"CuisineCategory\":\"lebanese\",\n\"DateOfBirth\": \"1996-02-14\"\n}\n",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/info",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"info"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722632637&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=0WfCplco7FJTq3s14Knmf%2FFN14sBI5hNZ5gjgQfHz28%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722632637&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=0WfCplco7FJTq3s14Knmf%2FFN14sBI5hNZ5gjgQfHz28%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 21:03:57 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-02T21:03:57.979+00:00\",\n    \"status\": 404,\n    \"error\": \"Not Found\",\n    \"path\": \"/dietician/info\"\n}"
								},
								{
									"name": "Create Patient with Invalid authorisation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientId",
													"value": ": { \"FirstName\": \"Sing\",\n\"LastName\": \"sing\",\n\"ContactNumber\": \"7878786778\",\n\"Email\": \"sing@gmail.com\",\n\"Allergy\": \"egg\",\n\"FoodPreference\": \"Vegetarian\",\n\"CuisineCategory\":\"lebanese\",\n\"DateOfBirth\": \"1996-02-14\"\n}\n",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1723038626&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=5WTPZmqO5O8GNjsWLJSIIe4yitKB%2F38B7gpWOGspF40%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1723038626&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=5WTPZmqO5O8GNjsWLJSIIe4yitKB%2F38B7gpWOGspF40%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 07 Aug 2024 13:50:26 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-07T13:50:27.023+00:00\",\n    \"status\": 401,\n    \"error\": \"Unauthorized\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create Patient_Invalid DOB_FutureDate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Renamed the 'jsonBody' variable to 'responseJSON'\r",
											"var responseJSON = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"// pm.test(\"Response has valid JSON body\", function () {\r",
											"//   pm.expect(responseJSON).to.be.an('object');\r",
											"//   pm.expect(responseJSON).to.have.property('timestamp');\r",
											"//   pm.expect(responseJSON).to.have.property('status');\r",
											"//   pm.expect(responseJSON).to.have.property('error');\r",
											"//   pm.expect(responseJSON).to.have.property('path');\r",
											"// });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// let requestBody = pm.request.body.raw;\r",
											"// let parsedBody = JSON.parse(requestBody);\r",
											"// let patient_DOB_future = pm.iterationData.get(\"patient_DOB_future\");\r",
											"// parsedBody.DateOfBirth = patient_DOB_future;\r",
											"// // Update the request body with the modified JSON\r",
											"// pm.request.body.raw = JSON.stringify(parsedBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientIno",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{patient_DOB_future}}\"\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient_Invalid DOB_Futuredate",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientIno",
													"value": "{ \"FirstName\": \"Reena\",\n\"LastName\": \"Swaha\",\n\"ContactNumber\": \"9005089945\",\n\"Email\": \"Reena@gmail.com\",\n\"Allergy\": \"walnut\",\n\"FoodPreference\": \"Vegan\",\n\"CuisineCategory\":\"goan\",\n\"DateOfBirth\": \"2026-01-01\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1723041914&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=dRxJWv%2FYUsGX9GXLY3lHnPT55DYVYeTTjRyIZuaBubI%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1723041914&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=dRxJWv%2FYUsGX9GXLY3lHnPT55DYVYeTTjRyIZuaBubI%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 07 Aug 2024 14:45:13 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-07T14:45:14.759+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create Patient with Invalid BaseURL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 404\", function () {\r",
											"  pm.expect(pm.response.code).to.equal(404);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response has Content-Type header with value 'text/html'\", function () {\r",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/html\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response body contains the expected error message or title\", function () {\r",
											"    const expectedErrorMessage = \"Heroku | Application Error\";\r",
											"    pm.expect(pm.response.text()).to.include(expectedErrorMessage);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate that the 'iframe' tag is present in the response body\", function () {\r",
											"    const responseData = pm.response.text();\r",
											"    \r",
											"    pm.expect(responseData).to.include('<iframe src=\"//www.herokucdn.com/error-pages/no-such-app.html\"></iframe>');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Ensure that the 'viewport' meta tag is present in the response body\", function () {\r",
											"    const responseData = pm.response.text();\r",
											"    \r",
											"    pm.expect(responseData).to.include('<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">');\r",
											"});\r",
											"//commonTests.notFoundRequest();\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientId",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}\n",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{InvalidBaseURL}}",
									"host": [
										"{{InvalidBaseURL}}"
									],
									"query": [
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "New Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientId",
													"value": ": { \"FirstName\": \"Sing\",\n\"LastName\": \"sing\",\n\"ContactNumber\": \"7878786778\",\n\"Email\": \"sing@gmail.com\",\n\"Allergy\": \"egg\",\n\"FoodPreference\": \"Vegetarian\",\n\"CuisineCategory\":\"lebanese\",\n\"DateOfBirth\": \"1996-02-14\"\n}\n",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/info",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"info"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722632637&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=0WfCplco7FJTq3s14Knmf%2FFN14sBI5hNZ5gjgQfHz28%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722632637&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=0WfCplco7FJTq3s14Knmf%2FFN14sBI5hNZ5gjgQfHz28%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 21:03:57 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-02T21:03:57.979+00:00\",\n    \"status\": 404,\n    \"error\": \"Not Found\",\n    \"path\": \"/dietician/info\"\n}"
								},
								{
									"name": "Create Patient with Invalid URL",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientId",
													"value": ": { \"FirstName\": \"Sing\",\n\"LastName\": \"sing\",\n\"ContactNumber\": \"7878786778\",\n\"Email\": \"sing@gmail.com\",\n\"Allergy\": \"egg\",\n\"FoodPreference\": \"Vegetarian\",\n\"CuisineCategory\":\"lebanese\",\n\"DateOfBirth\": \"1996-02-14\"\n}\n",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon--880f2590665cc.herokuapp.com/dietician",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon--880f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "Content-Length",
											"value": "563"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store"
										},
										{
											"key": "Content-Type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "2024-08-07 14:03:00.767807484 +0000 UTC"
										},
										{
											"key": "Server",
											"value": "heroku-router"
										}
									],
									"cookie": [],
									"body": "<!DOCTYPE html>\n<html>\n    <head>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <meta charset=\"utf-8\">\n        <title>Heroku | Application Error</title>\n        <style media=\"screen\">\n      html,body,iframe {\n        margin: 0;\n        padding: 0;\n      }\n      html,body {\n        height: 100%;\n        overflow: hidden;\n      }\n      iframe {\n        width: 100%;\n        height: 100%;\n        border: 0;\n      }\n    </style>\n    </head>\n    <body>\n        <iframe src=\"//www.herokucdn.com/error-pages/no-such-app.html\"></iframe>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Create Patient with Invalid contactNo unique field",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// let requestBody = pm.request.body.form;\r",
											"// let parsedBody = JSON.parse(requestBody);\r",
											"// let patient_unique_contactnumber= pm.iterationData.get(\"patient_unique_contactnumber\");\r",
											"// parsedBody.ContactNumber = patient_unique_contactnumber;\r",
											"// // Updates the request body with the modified JSON\r",
											"// pm.request.body.raw = JSON.stringify(parsedBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseContent = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status code is 404\", function () {\r",
											"  pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response body has timestamp, status, error, and path properties\", function () {\r",
											"  pm.expect(responseContent).to.have.property('timestamp');\r",
											"  pm.expect(responseContent).to.have.property('status');\r",
											"  pm.expect(responseContent).to.have.property('error');\r",
											"  pm.expect(responseContent).to.have.property('path');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{patient_unique_contactnumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient\n",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient\n"
									]
								}
							},
							"response": [
								{
									"name": "ContactNo_<10digits",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientInfo",
													"value": "{ \"FirstName\": \"Maria\",\n\"LastName\": \"Sinha\",\n\"ContactNumber\": \"90050899\",\n\"Email\": \"maria@gmail.com\",\n\"Allergy\": \"pecan\",\n\"FoodPreference\": \"Nonveg\",\n\"CuisineCategory\":\"awadhi\",\n\"DateOfBirth\": \"1977-02-04\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef51a63-4b51-4b80-b890-931351970a48"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722696142&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=ofL5Z%2BPxIDOt0YXdrRC2vKSIaL3W3bM52WWWFtsn0FM%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722696142&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=ofL5Z%2BPxIDOt0YXdrRC2vKSIaL3W3bM52WWWFtsn0FM%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sat, 03 Aug 2024 14:42:22 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-03T14:42:22.670+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								},
								{
									"name": "ContactNo_specialChar",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientInfo",
													"value": "{ \"FirstName\": \"Riia\",\n\"LastName\": \"Suha\",\n\"ContactNumber\": \"900508994#\",\n\"Email\": \"maria@gmail.com\",\n\"Allergy\": \"pecan\",\n\"FoodPreference\": \"Nonveg\",\n\"CuisineCategory\":\"awadhi\",\n\"DateOfBirth\": \"1977-02-04\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef51a63-4b51-4b80-b890-931351970a48"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722697556&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=Cdr19ItqFuvLfXgqrfUAbPaNn7ABn0lYsCevTgdxasE%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722697556&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=Cdr19ItqFuvLfXgqrfUAbPaNn7ABn0lYsCevTgdxasE%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sat, 03 Aug 2024 15:05:56 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-03T15:05:56.975+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create patient with Missing contact No",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// let requestBody = pm.request.body.raw;\r",
											"// let parsedBody = JSON.parse(requestBody);\r",
											"// let patient_unique_contactnumber= pm.iterationData.get(\"patient_unique_contactnumber\");\r",
											"// parsedBody.ContactNumber = patient_unique_contactnumber;\r",
											"// // Updates the request body with the modified JSON\r",
											"// pm.request.body.raw = JSON.stringify(parsedBody);\r",
											"\r",
											"\r",
											"// let requestBody = pm.request.body.raw;\r",
											"// let parsedBody = JSON.parse(requestBody);\r",
											"// let includeContactNumber = pm.variables.get(\"Patient_ContactNumber\") === 'true';\r",
											"// if (!includeContactNumber) {\r",
											"//     delete parsedBody.ContactNumber;\r",
											"// }\r",
											"// pm.request.body.raw = JSON.stringify(parsedBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseBody = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response body has timestamp, status, error, and path properties\", function () {\r",
											"  pm.expect(responseBody).to.have.property('timestamp');\r",
											"  pm.expect(responseBody).to.have.property('status');\r",
											"  pm.expect(responseBody).to.have.property('error');\r",
											"  pm.expect(responseBody).to.have.property('path');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
									"protocol": "https",
									"host": [
										"dietician-july-api-hackathon-80f2590665cc",
										"herokuapp",
										"com"
									],
									"path": [
										"dietician",
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Create patient with Missing contact No",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientInfo",
													"value": "{ \"FirstName\": \"Han\",\n\"LastName\": \"mall\",\n\"ContactNumber\": \"\",\n\"Email\": \"Han@gmail.com\",\n\"Allergy\": \"walnut\",\n\"FoodPreference\": \"jain\",\n\"CuisineCategory\":\"iAndhra\",\n\"DateOfBirth\": \"1989-02-20\"\n}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseURL}}/patient",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1723059901&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=pd34ot%2BgS6j%2FEjWHnZAdNmWq3j6wHEJYfbkRtXoUYpY%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1723059901&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=pd34ot%2BgS6j%2FEjWHnZAdNmWq3j6wHEJYfbkRtXoUYpY%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 07 Aug 2024 19:45:01 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-07T19:45:01.045+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create patient with Missing LastName",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// let requestBody = pm.request.body.formdata;\r",
											"// let parsedBody = JSON.parse(requestBody);\r",
											"// let includeLastname = pm.variables.get(\"Patient_Lastname\") === 'false';\r",
											"// if (!includeLastname) {\r",
											"//     delete parsedBody.Lastname;\r",
											"// }\r",
											"// pm.request.body.formdata = JSON.stringify(parsedBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseJSON = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has valid JSON body\", function () {\r",
											"  pm.expect(responseJSON).to.be.an('object');\r",
											"  pm.expect(responseJSON).to.have.property('timestamp');\r",
											"  pm.expect(responseJSON).to.have.property('status');\r",
											"  pm.expect(responseJSON).to.have.property('error');\r",
											"  pm.expect(responseJSON).to.have.property('path');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient with Invalid request Copy",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722811776&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=OB7B5HRGcW07NtViHtpKgyE7XlApe20uPofTcs3ScqA%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722811776&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=OB7B5HRGcW07NtViHtpKgyE7XlApe20uPofTcs3ScqA%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 04 Aug 2024 22:49:36 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-04T22:49:36.926+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create Patient with Missing CuisineCategory",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// let requestBody = pm.request.body.formdata;\r",
											"// let parsedBody = JSON.parse(requestBody);\r",
											"// let includecuicine_category = pm.variables.get(\"cuisine_category\") === 'false';\r",
											"// if (!includecuicine_category) {\r",
											"//     delete parsedBody.CusineCategory;\r",
											"// }\r",
											"// pm.request.body.formdata = JSON.stringify(parsedBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has valid JSON body\", function () {\r",
											"  pm.expect(responseData).to.be.an('object');\r",
											"  pm.expect(responseData).to.have.property('timestamp');\r",
											"  pm.expect(responseData).to.have.property('status');\r",
											"  pm.expect(responseData).to.have.property('error');\r",
											"  pm.expect(responseData).to.have.property('path');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Missing CuisineCategory",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientInfo",
													"value": "{ \"FirstName\": \"Sony\",\n\"LastName\": \"Sony\",\n\"ContactNumber\": \"9005089943\",\n\"Email\": \"Sony@gmail.com\",\n\"Allergy\": \"pecan\",\n\"FoodPreference\": \"Nonveg\",\n\"CuisineCategory\":\"\",\n\"DateOfBirth\": \"1977-02-04\"\n}",
													"type": "text"
												},
												{
													"key": "File",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722700373&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=2e9rfCi5OiUxg4ojh9w8b3NnNJYz6X9NrgSQfIVOFTo%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722700373&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=2e9rfCi5OiUxg4ojh9w8b3NnNJYz6X9NrgSQfIVOFTo%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sat, 03 Aug 2024 15:52:53 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-03T15:52:53.395+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create patient with Missing Email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// let requestBody = pm.request.body.formdata;\r",
											"// let parsedBody = JSON.parse(requestBody);\r",
											"// let includeEmail = pm.variables.get(\"Patient_Email\") === 'true';\r",
											"// if (!includeEmail) {\r",
											"//     delete parsedBody.Email;\r",
											"// }\r",
											"// pm.request.body.formdata = JSON.stringify(parsedBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseJSON = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient with Invalid request Copy",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722811776&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=OB7B5HRGcW07NtViHtpKgyE7XlApe20uPofTcs3ScqA%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722811776&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=OB7B5HRGcW07NtViHtpKgyE7XlApe20uPofTcs3ScqA%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 04 Aug 2024 22:49:36 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-04T22:49:36.926+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create patient with Invalid Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Check error message\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    const errorMessage = jsonData.errorMessage;\r",
											"    pm.expect(jsonData.errorMessage).to.exist;\r",
											"    pm.expect(jsonData.errorMessage).to.equal(\"email : Invalid Email Id\\n Email should start with a letter  \\n \");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//  let requestBody = pm.request.body.formdata;\r",
											"//  let parsedBody = JSON.parse(requestBody);\r",
											"//  let patient_invalidemail= pm.iterationData.get(\"patient_invalidemail\");\r",
											"// parsedBody.Email = patient_invalidemail;\r",
											"//  pm.request.body.formdata = JSON.stringify(parsedBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{patient_invalidemail}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}\n",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient with Invalid request Copy",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722811776&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=OB7B5HRGcW07NtViHtpKgyE7XlApe20uPofTcs3ScqA%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722811776&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=OB7B5HRGcW07NtViHtpKgyE7XlApe20uPofTcs3ScqA%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 04 Aug 2024 22:49:36 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-04T22:49:36.926+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create patient with Missing DOB",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseData = pm.response.text();\r",
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Error message for input\", () => {\r",
											"    pm.expect(responseData).to.eql(\"Date Should be in format yyyy-MM-dd\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// let requestBody = pm.request.body.formdata;\r",
											"// let parsedBody = JSON.parse(requestBody);\r",
											"// let includeDOB = pm.variables.get(\"Patient_DateOfBirth\") === 'true';\r",
											"// // Conditionally modify the request body\r",
											"// if (!includeDOB) {\r",
											"//     delete parsedBody.DateofBirth;\r",
											"// }\r",
											"// pm.request.body.formdata = JSON.stringify(parsedBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"\"\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": []
						},
						{
							"name": "update patient by Id update only firstname Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Check if patientId exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('patientId');\r",
											"    pm.expect(jsonData.patientId).to.equal(pm.environment.get(\"patientId\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if FirstName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"   pm.expect(jsonData).to.have.property('FirstName');\r",
											"    pm.expect(jsonData.FirstName).to.equal(pm.iterationData.get(\"patient_update_firstName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if LastName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('LastName');\r",
											"    pm.expect(jsonData.LastName).to.equal(pm.iterationData.get(\"Patient_LastName\"));\r",
											"});\r",
											"pm.test(\"Check if contactNumber exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('ContactNumber');\r",
											"    pm.expect(jsonData.ContactNumber).to.equal(pm.iterationData.get(\"Patient_ContactNumber\").toString());\r",
											"});\r",
											"pm.test(\"Check if Email exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Email');\r",
											"    pm.expect(jsonData.Email).to.equal(pm.iterationData.get(\"Patient_Email\"));\r",
											"});\r",
											"pm.test(\"Check if Allergy exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Allergy');\r",
											"    pm.expect(jsonData.Allergy).to.equal(pm.iterationData.get(\"Patient_Allergy\"));\r",
											"});\r",
											"pm.test(\"Check if FoodPreference exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('FoodPreference');\r",
											"    pm.expect(jsonData.FoodPreference).to.equal(pm.iterationData.get(\"Patient_FoodPreference\"));\r",
											"});\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('CuisineCategory');\r",
											"    pm.expect(jsonData.CuisineCategory).to.equal(pm.iterationData.get(\"Patient_CuisineCategory\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('DateOfBirth');\r",
											"    pm.expect(jsonData.DateOfBirth).to.equal(pm.iterationData.get(\"Patient_DateOfBirth\"));\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{patient_update_firstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": "{{patient_update_file}}"
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient by Id update only last name Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Check if patientId exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('patientId');\r",
											"    pm.expect(jsonData.patientId).to.equal(pm.environment.get(\"patientId\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if FirstName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"   pm.expect(jsonData).to.have.property('FirstName');\r",
											"    pm.expect(jsonData.FirstName).to.equal(pm.iterationData.get(\"Patient_FirstName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if LastName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('LastName');\r",
											"    pm.expect(jsonData.LastName).to.equal(pm.iterationData.get(\"patient_update_lastName\"));\r",
											"});\r",
											"pm.test(\"Check if contactNumber exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('ContactNumber');\r",
											"   pm.expect(jsonData.ContactNumber).to.equal(pm.iterationData.get(\"Patient_ContactNumber\").toString());\r",
											"});\r",
											"pm.test(\"Check if Email exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Email');\r",
											"    pm.expect(jsonData.Email).to.equal(pm.iterationData.get(\"Patient_Email\"));\r",
											"});\r",
											"pm.test(\"Check if Allergy exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Allergy');\r",
											"    pm.expect(jsonData.Allergy).to.equal(pm.iterationData.get(\"Patient_Allergy\"));\r",
											"});\r",
											"pm.test(\"Check if FoodPreference exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('FoodPreference');\r",
											"    pm.expect(jsonData.FoodPreference).to.equal(pm.iterationData.get(\"Patient_FoodPreference\"));\r",
											"});\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('CuisineCategory');\r",
											"    pm.expect(jsonData.CuisineCategory).to.equal(pm.iterationData.get(\"Patient_CuisineCategory\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('DateOfBirth');\r",
											"    pm.expect(jsonData.DateOfBirth).to.equal(pm.iterationData.get(\"Patient_DateOfBirth\"));\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{patient_update_lastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient by Id update only contact number Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Check if patientId exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('patientId');\r",
											"    pm.expect(jsonData.patientId).to.equal(pm.environment.get(\"patientId\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if FirstName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"   pm.expect(jsonData).to.have.property('FirstName');\r",
											"    pm.expect(jsonData.FirstName).to.equal(pm.iterationData.get(\"Patient_FirstName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if LastName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('LastName');\r",
											"    pm.expect(jsonData.LastName).to.equal(pm.iterationData.get(\"Patient_LastName\"));\r",
											"});\r",
											"pm.test(\"Check if contactNumber exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('ContactNumber');\r",
											"    pm.expect(jsonData.ContactNumber).to.equal(pm.iterationData.get(\"patient_update_contactNumber\").toString());\r",
											"});\r",
											"pm.test(\"Check if Email exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Email');\r",
											"    pm.expect(jsonData.Email).to.equal(pm.iterationData.get(\"Patient_Email\"));\r",
											"});\r",
											"pm.test(\"Check if Allergy exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Allergy');\r",
											"    pm.expect(jsonData.Allergy).to.equal(pm.iterationData.get(\"Patient_Allergy\"));\r",
											"});\r",
											"pm.test(\"Check if FoodPreference exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('FoodPreference');\r",
											"    pm.expect(jsonData.FoodPreference).to.equal(pm.iterationData.get(\"Patient_FoodPreference\"));\r",
											"});\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('CuisineCategory');\r",
											"    pm.expect(jsonData.CuisineCategory).to.equal(pm.iterationData.get(\"Patient_CuisineCategory\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('DateOfBirth');\r",
											"    pm.expect(jsonData.DateOfBirth).to.equal(pm.iterationData.get(\"Patient_DateOfBirth\"));\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{patient_update_contactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}\n",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "PtInfo",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient by Id update only Email Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Check if patientId exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('patientId');\r",
											"    pm.expect(jsonData.patientId).to.equal(pm.environment.get(\"patientId\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if FirstName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"   pm.expect(jsonData).to.have.property('FirstName');\r",
											"    pm.expect(jsonData.FirstName).to.equal(pm.iterationData.get(\"Patient_FirstName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if LastName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('LastName');\r",
											"    pm.expect(jsonData.LastName).to.equal(pm.iterationData.get(\"Patient_LastName\"));\r",
											"});\r",
											"pm.test(\"Check if contactNumber exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('ContactNumber');\r",
											"    pm.expect(jsonData.ContactNumber).to.equal(pm.iterationData.get(\"Patient_ContactNumber\").toString());\r",
											"});\r",
											"pm.test(\"Check if Email exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Email');\r",
											"    pm.expect(jsonData.Email).to.equal(pm.iterationData.get(\"patient_update_email\"));\r",
											"});\r",
											"pm.test(\"Check if Allergy exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Allergy');\r",
											"    pm.expect(jsonData.Allergy).to.equal(pm.iterationData.get(\"Patient_Allergy\"));\r",
											"});\r",
											"pm.test(\"Check if FoodPreference exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('FoodPreference');\r",
											"    pm.expect(jsonData.FoodPreference).to.equal(pm.iterationData.get(\"Patient_FoodPreference\"));\r",
											"});\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('CuisineCategory');\r",
											"    pm.expect(jsonData.CuisineCategory).to.equal(pm.iterationData.get(\"Patient_CuisineCategory\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('DateOfBirth');\r",
											"    pm.expect(jsonData.DateOfBirth).to.equal(pm.iterationData.get(\"Patient_DateOfBirth\"));\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{patient_update_email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient by Id update Allergy field Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Check if patientId exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('patientId');\r",
											"    pm.expect(jsonData.patientId).to.equal(pm.environment.get(\"patientId\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if FirstName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"   pm.expect(jsonData).to.have.property('FirstName');\r",
											"    pm.expect(jsonData.FirstName).to.equal(pm.iterationData.get(\"Patient_FirstName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if LastName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('LastName');\r",
											"    pm.expect(jsonData.LastName).to.equal(pm.iterationData.get(\"Patient_LastName\"));\r",
											"});\r",
											"pm.test(\"Check if contactNumber exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('ContactNumber');\r",
											"    pm.expect(jsonData.ContactNumber).to.equal(pm.iterationData.get(\"Patient_ContactNumber\").toString());\r",
											"});\r",
											"pm.test(\"Check if Email exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Email');\r",
											"    pm.expect(jsonData.Email).to.equal(pm.iterationData.get(\"Patient_Email\"));\r",
											"});\r",
											"pm.test(\"Check if Allergy exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Allergy');\r",
											"    pm.expect(jsonData.Allergy).to.equal(pm.iterationData.get(\"patient_update_allergy\"));\r",
											"});\r",
											"pm.test(\"Check if FoodPreference exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('FoodPreference');\r",
											"    pm.expect(jsonData.FoodPreference).to.equal(pm.iterationData.get(\"Patient_FoodPreference\"));\r",
											"});\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('CuisineCategory');\r",
											"    pm.expect(jsonData.CuisineCategory).to.equal(pm.iterationData.get(\"Patient_CuisineCategory\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('DateOfBirth');\r",
											"    pm.expect(jsonData.DateOfBirth).to.equal(pm.iterationData.get(\"Patient_DateOfBirth\"));\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{patient_update_allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient by Id update FoodPreference field Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Check if patientId exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('patientId');\r",
											"    pm.expect(jsonData.patientId).to.equal(pm.environment.get(\"patientId\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if FirstName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"   pm.expect(jsonData).to.have.property('FirstName');\r",
											"    pm.expect(jsonData.FirstName).to.equal(pm.iterationData.get(\"Patient_FirstName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if LastName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('LastName');\r",
											"    pm.expect(jsonData.LastName).to.equal(pm.iterationData.get(\"Patient_LastName\"));\r",
											"});\r",
											"pm.test(\"Check if contactNumber exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('ContactNumber');\r",
											"    pm.expect(jsonData.ContactNumber).to.equal(pm.iterationData.get(\"Patient_ContactNumber\").toString());\r",
											"});\r",
											"pm.test(\"Check if Email exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Email');\r",
											"    pm.expect(jsonData.Email).to.equal(pm.iterationData.get(\"Patient_Email\"));\r",
											"});\r",
											"pm.test(\"Check if Allergy exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Allergy');\r",
											"    pm.expect(jsonData.Allergy).to.equal(pm.iterationData.get(\"Patient_Allergy\"));\r",
											"});\r",
											"pm.test(\"Check if FoodPreference exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('FoodPreference');\r",
											"    pm.expect(jsonData.FoodPreference).to.equal(pm.iterationData.get(\"patient_update_foodPreference\"));\r",
											"});\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('CuisineCategory');\r",
											"    pm.expect(jsonData.CuisineCategory).to.equal(pm.iterationData.get(\"Patient_CuisineCategory\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if DateOfBirth exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('DateOfBirth');\r",
											"    pm.expect(jsonData.DateOfBirth).to.equal(pm.iterationData.get(\"Patient_DateOfBirth\"));\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{patient_update_foodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient by Id update DateOfBirth field Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Check if patientId exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('patientId');\r",
											"    pm.expect(jsonData.patientId).to.equal(pm.environment.get(\"patientId\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if FirstName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"   pm.expect(jsonData).to.have.property('FirstName');\r",
											"    pm.expect(jsonData.FirstName).to.equal(pm.iterationData.get(\"Patient_FirstName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if LastName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('LastName');\r",
											"    pm.expect(jsonData.LastName).to.equal(pm.iterationData.get(\"Patient_LastName\"));\r",
											"});\r",
											"pm.test(\"Check if contactNumber exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('ContactNumber');\r",
											"    pm.expect(jsonData.ContactNumber).to.equal(pm.iterationData.get(\"Patient_ContactNumber\").toString());\r",
											"});\r",
											"pm.test(\"Check if Email exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Email');\r",
											"    pm.expect(jsonData.Email).to.equal(pm.iterationData.get(\"Patient_Email\"));\r",
											"});\r",
											"pm.test(\"Check if Allergy exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Allergy');\r",
											"    pm.expect(jsonData.Allergy).to.equal(pm.iterationData.get(\"Patient_Allergy\"));\r",
											"});\r",
											"pm.test(\"Check if FoodPreference exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('FoodPreference');\r",
											"    pm.expect(jsonData.FoodPreference).to.equal(pm.iterationData.get(\"Patient_FoodPreference\"));\r",
											"});\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('CuisineCategory');\r",
											"    pm.expect(jsonData.CuisineCategory).to.equal(pm.iterationData.get(\"Patient_CuisineCategory\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if DateOfBirth exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('DateOfBirth');\r",
											"    pm.expect(jsonData.DateOfBirth).to.equal(pm.iterationData.get(\"patient_update_dateOfBirth\"));\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{patient_update_dateOfBirth}}\"}\n",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient by Id add new report without vitals",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Vitals key should be present in the response\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.have.property('Vitals');\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"// pm.test(\"Check if fileId exist in JSON response\", function () {\r",
											"//    const fileID = Object.keys(jsonBody.FileMorbidity)[0];\r",
											"//         pm.environment.set(\"fileID\",Â fileID);\r",
											"\r",
											"    \r",
											"// });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": "{{Patient_update_newFile}}"
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/newReports/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"newReports",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient by Id with invalid endpoints Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patie/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patie",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient by Id (unauthorized) Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient add new report with invalid endpoints Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": []
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/newRepor/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"newRepor",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient add new report with no auth Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": []
										},
										{
											"key": "PtInfo",
											"value": "\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/newReports/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"newReports",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient add new report  with vitals",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Vitals key should be present in the response\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.have.property('Vitals');\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": "{{patient_update_newfile1}}"
										},
										{
											"key": "vitals",
											"value": "{ \"Weight\" : {{patient_Weight}},\n\"Height\" : {{patient_Height}},\n\"Temperature\" :{{patient_Temperature}} ,\n\"SP\" :{{patient_SP}},\n\"DP\" :{{patient_DP}}\n}\n",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/newReports/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"newReports",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "get patient morbidity details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present and correct\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/patient/testReports/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "get patient morbidity details with invalid endpoints",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {",
											"  pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Content-Type is present and correct\", function () {",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/patient/testeports/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"testeports",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "get patient morbidity details with unauthorize",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is within an acceptable range\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"pm.test(\"Check for error message\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error).to.exist;\r",
											"    pm.expect(jsonData.error).to.equal(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Check for timestamp\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.timestamp).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Print response body\", function () {\r",
											"    const responseJson = pm.response.json();\r",
											"    console.log(responseJson);\r",
											"});\r",
											"\r",
											"pm.test(\"Print specific value from JSON response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    console.log(jsonData.timestamp);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/patient/testReports/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "Get all Patients",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"  pm.test(\"Response time is less than 500ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Get all Patients",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722718172&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=ahGtYBw1IlnAvUMuJR8mSjY6IwR9Bwf72jKVHIGqNlI%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722718172&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=ahGtYBw1IlnAvUMuJR8mSjY6IwR9Bwf72jKVHIGqNlI%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sat, 03 Aug 2024 20:49:32 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"patientId\": 33,\n        \"FirstName\": \"malli\",\n        \"LastName\": \"malli\",\n        \"ContactNumber\": \"9867345989\",\n        \"Email\": \"smartdiet1@gmail.com\",\n        \"Allergy\": \"ALMOND\",\n        \"FoodPreference\": \"Jain\",\n        \"CuisineCategory\": \"rajasthani\",\n        \"FileMorbidity\": {\n            \"66ad684d4717cf471aaad175\": {},\n            \"66ad6aa04717cf471aaad179\": {},\n            \"66ad7b894717cf471aaad197\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad37b74717cf471aaad0c3\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad3bb84717cf471aaad0cf\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad65e14717cf471aaad16d\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad7bbe4717cf471aaad199\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad36ce4717cf471aaad0bf\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66aaa9e9e6f5802145ab051c\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad2d234717cf471aaad0b7\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad6c794717cf471aaad17b\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad35584717cf471aaad0bd\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad39404717cf471aaad0cb\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad2a684717cf471aaad0b1\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad2fce4717cf471aaad0bb\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad67a84717cf471aaad173\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad67a84717cf471aaad171\": {},\n            \"66ad6c8f4717cf471aaad17d\": {}\n        },\n        \"FileMorbidityCondition\": {\n            \"66ad684d4717cf471aaad175\": \"\",\n            \"66ad6aa04717cf471aaad179\": \"\",\n            \"66ad7b894717cf471aaad197\": \"Prediabetic \\n\",\n            \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n            \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n            \"66ad65e14717cf471aaad16d\": \"Prediabetic \\n\",\n            \"66ad7bbe4717cf471aaad199\": \"Prediabetic \\n\",\n            \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\",\n            \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n            \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n            \"66ad6c794717cf471aaad17b\": \"Prediabetic \\n\",\n            \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n            \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n            \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n            \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n            \"66ad67a84717cf471aaad173\": \"Prediabetic \\n\",\n            \"66ad67a84717cf471aaad171\": \"\",\n            \"66ad6c8f4717cf471aaad17d\": \"\"\n        },\n        \"DateOfBirth\": \"1987-03-14\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66aaa9e9e6f5802145ab051c\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n    },\n    {\n        \"patientId\": 129,\n        \"FirstName\": \"Ram\",\n        \"LastName\": \"Setu\",\n        \"ContactNumber\": \"9009089789\",\n        \"Email\": \"ram@gmail.com\",\n        \"Allergy\": \"Peanut\",\n        \"FoodPreference\": \"NonVeg\",\n        \"CuisineCategory\": \"sindhi\",\n        \"FileMorbidity\": {\n            \"66ab9db93e6c022b073da1f5\": {\n                \"T3\": \"6.3 ng/mL\",\n                \"T4\": \"15.7 Âµg/dL\",\n                \"TSH\": \"0.016 ÂµIU/mL\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66ab9db93e6c022b073da1f5\": \"Thyroid: Hyperthyroidism \\nBlood Pressure: Hypotension \\n\"\n        },\n        \"DateOfBirth\": \"1987-02-14\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66ab9db93e6c022b073da1f5\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-01T14:37:45.435+00:00\"\n    },\n    {\n        \"patientId\": 132,\n        \"FirstName\": \"kristy\",\n        \"LastName\": \"john\",\n        \"ContactNumber\": \"9009089777\",\n        \"Email\": \"john@gmail.com\",\n        \"Allergy\": \"milk\",\n        \"FoodPreference\": \"vegan\",\n        \"CuisineCategory\": \"goan\",\n        \"FileMorbidity\": {\n            \"66aba0e93e6c022b073da203\": {\n                \"T4\": \"1.22 Âµg/dl\",\n                \"TSH\": \"100.0 mIU/L\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66aba0e93e6c022b073da203\": \"Thyroid: Hypothyroidism \\nBlood Pressure: Hypotension \\n\"\n        },\n        \"DateOfBirth\": \"1985-03-17\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66aba0e93e6c022b073da203\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-01T14:51:21.226+00:00\"\n    },\n    {\n        \"patientId\": 135,\n        \"FirstName\": \"tim\",\n        \"LastName\": \"kim\",\n        \"ContactNumber\": \"9029089777\",\n        \"Email\": \"kim@gmail.com\",\n        \"Allergy\": \"pecan\",\n        \"FoodPreference\": \"vegan\",\n        \"CuisineCategory\": \"bengali\",\n        \"FileMorbidity\": {\n            \"66aba3e33e6c022b073da20f\": {\n                \"T3\": \"6.3 ng/mL\",\n                \"T4\": \"15.7 Âµg/dL\",\n                \"TSH\": \"0.016 ÂµIU/mL\"\n            },\n            \"66aba3e33e6c022b073da20b\": {\n                \"T3\": \"6.3 ng/mL\",\n                \"T4\": \"15.7 Âµg/dL\",\n                \"TSH\": \"0.016 ÂµIU/mL\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66aba3e33e6c022b073da20f\": \"Thyroid: Hyperthyroidism \\n\",\n            \"66aba3e33e6c022b073da20b\": \"Thyroid: Hyperthyroidism \\nBlood Pressure: Hypotension \\n\"\n        },\n        \"DateOfBirth\": \"1987-04-27\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66aba3e33e6c022b073da20b\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-01T15:04:03.119+00:00\"\n    },\n    {\n        \"patientId\": 137,\n        \"FirstName\": \"Mary\",\n        \"LastName\": \"Singh\",\n        \"ContactNumber\": \"9005089789\",\n        \"Email\": \"mary@gmail.com\",\n        \"Allergy\": \"PEANUT\",\n        \"FoodPreference\": \"Vegan\",\n        \"CuisineCategory\": \"Indian\",\n        \"FileMorbidity\": {\n            \"66aba7c73e6c022b073da219\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66aba7c73e6c022b073da21b\": {\n                \"T3\": \"6.3 ng/mL\",\n                \"T4\": \"15.7 Âµg/dL\",\n                \"TSH\": \"0.016 ÂµIU/mL\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66aba7c73e6c022b073da219\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n            \"66aba7c73e6c022b073da21b\": \"Thyroid: Hyperthyroidism \\n\"\n        },\n        \"DateOfBirth\": \"1977-02-14\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66aba7c73e6c022b073da219\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-01T15:20:39.153+00:00\"\n    },\n    {\n        \"patientId\": 187,\n        \"FirstName\": \"jimmy\",\n        \"LastName\": \"Sinn\",\n        \"ContactNumber\": \"9005099789\",\n        \"Email\": \"jimmy@gmail.com\",\n        \"Allergy\": \"walnut\",\n        \"FoodPreference\": \"Vegetarian\",\n        \"CuisineCategory\": \"bihari\",\n        \"FileMorbidity\": {\n            \"66abfac03e6c022b073da291\": {\n                \"T3\": \"6.3 ng/mL\",\n                \"T4\": \"15.7 Âµg/dL\",\n                \"TSH\": \"0.016 ÂµIU/mL\"\n            },\n            \"66abfac03e6c022b073da28f\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66abfac03e6c022b073da291\": \"Thyroid: Hyperthyroidism \\n\",\n            \"66abfac03e6c022b073da28f\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\"\n        },\n        \"DateOfBirth\": \"1977-12-14\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66abfac03e6c022b073da28f\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-01T21:14:40.717+00:00\"\n    },\n    {\n        \"patientId\": 191,\n        \"FirstName\": \"sun\",\n        \"LastName\": \"fern\",\n        \"ContactNumber\": \"9075099789\",\n        \"Email\": \"sun@gmail.com\",\n        \"Allergy\": \"pecan\",\n        \"FoodPreference\": \"Vegan\",\n        \"CuisineCategory\": \"gujarati\",\n        \"FileMorbidity\": {\n            \"66abfda13e6c022b073da29f\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66abfda13e6c022b073da2a1\": {\n                \"T3\": \"6.3 ng/mL\",\n                \"T4\": \"15.7 Âµg/dL\",\n                \"TSH\": \"0.016 ÂµIU/mL\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66abfda13e6c022b073da29f\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n            \"66abfda13e6c022b073da2a1\": \"Thyroid: Hyperthyroidism \\n\"\n        },\n        \"DateOfBirth\": \"1977-05-14\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66abfda13e6c022b073da29f\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-01T21:26:57.254+00:00\"\n    },\n    {\n        \"patientId\": 192,\n        \"FirstName\": \"suin\",\n        \"LastName\": \"fern\",\n        \"ContactNumber\": \"9075099788\",\n        \"Email\": \"suin@gmail.com\",\n        \"Allergy\": \"pecan\",\n        \"FoodPreference\": \"Vegan\",\n        \"CuisineCategory\": \"gujarati\",\n        \"FileMorbidity\": {\n            \"66abfe423e6c022b073da2a5\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66abfe423e6c022b073da2a7\": {\n                \"T3\": \"6.3 ng/mL\",\n                \"T4\": \"15.7 Âµg/dL\",\n                \"TSH\": \"0.016 ÂµIU/mL\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66abfe423e6c022b073da2a5\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n            \"66abfe423e6c022b073da2a7\": \"Thyroid: Hyperthyroidism \\n\"\n        },\n        \"DateOfBirth\": \"1977-06-14\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66abfe423e6c022b073da2a5\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-01T21:29:38.833+00:00\"\n    },\n    {\n        \"patientId\": 323,\n        \"FirstName\": \"malli\",\n        \"LastName\": \"malli\",\n        \"ContactNumber\": \"9867345986\",\n        \"Email\": \"smartdiet@gmail.com\",\n        \"Allergy\": \"soy\",\n        \"FoodPreference\": \"jain\",\n        \"CuisineCategory\": \"indian\",\n        \"FileMorbidity\": {\n            \"66ac85903e6c022b073da4b4\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66ac85903e6c022b073da4b4\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\"\n        },\n        \"DateOfBirth\": \"1986-02-14\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66ac85903e6c022b073da4b4\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-02T07:06:56.854+00:00\"\n    },\n    {\n        \"patientId\": 324,\n        \"FirstName\": \"Talli\",\n        \"LastName\": \"malli\",\n        \"ContactNumber\": \"9867345988\",\n        \"Email\": \"smartdiet@gmail.com\",\n        \"Allergy\": \"soy\",\n        \"FoodPreference\": \"jain\",\n        \"CuisineCategory\": \"indian\",\n        \"FileMorbidity\": {\n            \"66ac862e3e6c022b073da4b6\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66ac862e3e6c022b073da4b6\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\"\n        },\n        \"DateOfBirth\": \"1986-03-14\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66ac862e3e6c022b073da4b6\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-02T07:09:34.890+00:00\"\n    },\n    {\n        \"patientId\": 348,\n        \"FirstName\": \"mall\",\n        \"LastName\": \"mall\",\n        \"ContactNumber\": \"9968345983\",\n        \"Email\": \"smart@gmail.com\",\n        \"Allergy\": \"soy\",\n        \"FoodPreference\": \"jain\",\n        \"CuisineCategory\": \"indian\",\n        \"FileMorbidity\": {\n            \"66acfb454717cf471aaad07c\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66acfb454717cf471aaad07c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\"\n        },\n        \"DateOfBirth\": \"1986-02-24\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66acfb454717cf471aaad07c\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-02T15:29:09.780+00:00\"\n    }\n]"
								}
							]
						},
						{
							"name": "Get all Patients with invalid endpoints",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check for error message\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error).to.exist;\r",
											"    pm.expect(jsonData.error).to.equal(\"Not Found\");\r",
											"});\r",
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient\n\n",
									"protocol": "https",
									"host": [
										"dietician-july-api-hackathon-80f2590665cc",
										"herokuapp",
										"com"
									],
									"path": [
										"dietician",
										"patient\n\n"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "Get all Patients with unauthorize",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"content-type\");\r",
											"});\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"pm.test(\"Check error message\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    const errorMessage = jsonData.error;\r",
											"    pm.expect(jsonData.error).to.exist;\r",
											"    pm.expect(jsonData.error).to.equal(errorMessage);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "Get all Patients with invalid baseUrl",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Check error message\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    const errorMessage = jsonData.error;\r",
											"    pm.expect(jsonData.error).to.exist;\r",
											"    pm.expect(jsonData.error).to.equal(errorMessage);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient\n\n",
									"protocol": "https",
									"host": [
										"dietician-july-api-hackathon-80f2590665cc",
										"herokuapp",
										"com"
									],
									"path": [
										"dietician",
										"patient\n\n"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "Retrieve Patient file by FileId",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/patient/testReports/viewFile/{{patient_fileID}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"viewFile",
										"{{patient_fileID}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "Retrieve Patient file by FileId invalid endpoints",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Check error message\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    const errorMessage = jsonData.error;\r",
											"    pm.expect(jsonData.error).to.exist;\r",
											"    pm.expect(jsonData.error).to.equal(errorMessage);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/patient/testReports/viewfile/{{patient_fileID}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"viewfile",
										"{{patient_fileID}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "Retrieve Patient file by FileId with unauthorize",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"pm.test(\"Check error message\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    const errorMessage = jsonData.error;\r",
											"    pm.expect(jsonData.error).to.exist;\r",
											"    pm.expect(jsonData.error).to.equal(errorMessage);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/patient/testReports/viewFile/{{patient_fileID}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"viewFile",
										"{{patient_fileID}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "Retrieve Patient file by FileId is invaild",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/patient/testReports/viewFile/66ad6c8f4oo7cf471aaad17",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"viewFile",
										"66ad6c8f4oo7cf471aaad17"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "Patient Login Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData= pm.response.json();\r",
											"pm.environment.set(\"patientToken\", jsonData.token);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"{{patientPassword}}\",\r\n  \"userLoginEmail\": \"{{patientEmail}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get test report by Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present and correct\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{patientToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/patient/testReports/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"{{patientId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a file by Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{patientToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/patient/testReports/viewFile/{{patient_fileID}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"viewFile",
										"{{patient_fileID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Delete patient success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/patient/853",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"patient",
												"853"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722813935&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=zi8qqvVaFInMFQa0iYaJARasdLtsUYeKZ1rHYzFXi2U%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722813935&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=zi8qqvVaFInMFQa0iYaJARasdLtsUYeKZ1rHYzFXi2U%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "text/plain;charset=UTF-8"
										},
										{
											"key": "Content-Length",
											"value": "41"
										},
										{
											"key": "Date",
											"value": "Sun, 04 Aug 2024 23:25:35 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "Patient with Id 853 deleted Successfully!"
								}
							]
						},
						{
							"name": "Delete Patient with invalid Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Patient with invalid PatientId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Renamed the 'jsonBody' variable to 'responseJSON'\r",
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/patient/{{InvalidpatientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{InvalidpatientId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Patient with invalid URL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{InvalidBaseURL}}/patient/{{patientid}}",
									"host": [
										"{{InvalidBaseURL}}"
									],
									"path": [
										"patient",
										"{{patientid}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "data driven  saranya Copy",
					"item": [
						{
							"name": "create dietician login Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" var jsonData = pm.response.json();\r",
											" pm.environment.set(\"dietToken\",jsonData.token);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJSZWluYV9SdWVja2VyOTdAeWFob28uY29tIiwiaWF0IjoxNzIyNDU5OTM1LCJleHAiOjE3MjI0ODg3MzV9.CwkEh3-Q7SGg3owo6ZlApiq...",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"Funny09\",\r\n  \"userLoginEmail\": \"Reina_Ruecker97@yahoo.com\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Patient",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Renamed the 'jsonBody' variable to 'responseBody' \r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Check Status Text\",()=>{\r",
											"    pm.response.to.have.status('Created');\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type Header is present\",()=>{\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type Header is application/json\",()=>{\r",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json');\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\",()=>{\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"let responsebody=pm.response.json();\r",
											"pm.test(\"Get Patients data type of response\",()=>{\r",
											"    pm.expect(responsebody.patientId).to.be.a(\"number\");\r",
											"    pm.expect(responsebody.FirstName).to.be.a(\"string\");\r",
											"    pm.expect(responsebody.LastName).to.be.a(\"string\");\r",
											"    pm.expect(responsebody.ContactNumber).to.be.a(\"string\");\r",
											"    pm.expect(responsebody.Email).to.be.a(\"string\");\r",
											"    pm.expect(responsebody.Allergy).to.be.a(\"string\");\r",
											"    pm.expect(responsebody.FoodPreference).to.be.a(\"string\");\r",
											"    pm.expect(responsebody.CuisineCategory).to.be.a(\"string\");\r",
											"    pm.expect(responsebody.DateOfBirth).to.be.a(\"string\");\r",
											"    pm.expect(responsebody.DieticianId).to.be.a(\"number\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify the values are not null\", function () {\r",
											"    pm.expect(responsebody.FirstName).to.not.null;\r",
											"    pm.expect(responsebody.LastName).to.not.null;\r",
											"    pm.expect(responsebody.ContactNumber).to.not.null;\r",
											"    pm.expect(responsebody.Email).to.not.null;\r",
											"    pm.expect(responsebody.DateOfBirth).to.not.null;\r",
											"    pm.expect(responsebody.Allergy).to.not.null;\r",
											"    pm.expect(responsebody.CuisineCategory).to.not.null;\r",
											"});\r",
											"pm.environment.set(\"patientEmail\", responsebody.Email);\r",
											"\r",
											"pm.environment.set(\"patientId\", responsebody.patientId);\r",
											"\r",
											"const fileID = Object.keys(responsebody.FileMorbidity)[0];\r",
											"pm.environment.set(\"patient_fileID\",Â fileID);\r",
											"\r",
											"var schema={\r",
											"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"    \"type\": \"object\",\r",
											"    \"properties\": {\r",
											"        \"patientId\": {\r",
											"            \"type\": \"integer\"\r",
											"        },\r",
											"        \"FirstName\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"LastName\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"ContactNumber\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"Email\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"Allergy\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"FoodPreference\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"CuisineCategory\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"FileMorbidity\": {\r",
											"            \"type\": \"object\",\r",
											"            \"properties\": {\r",
											"                \"66ad69134717cf471aaad177\": {\r",
											"                    \"type\": \"object\",\r",
											"                    \"properties\": {\r",
											"                        \"HbA1c\": {\r",
											"                            \"type\": \"string\"\r",
											"                        },\r",
											"                        \"Average Glucose\": {\r",
											"                            \"type\": \"string\"\r",
											"                        }\r",
											"                    },\r",
											"                    \"required\": [\r",
											"                        \"HbA1c\",\r",
											"                        \"Average Glucose\"\r",
											"                    ]\r",
											"                },\r",
											"                \"66ad66be4717cf471aaad16f\": {\r",
											"                    \"type\": \"object\",\r",
											"                    \"properties\": {\r",
											"                        \"HbA1c\": {\r",
											"                            \"type\": \"string\"\r",
											"                        },\r",
											"                        \"Average Glucose\": {\r",
											"                            \"type\": \"string\"\r",
											"                        }\r",
											"                    },\r",
											"                    \"required\": [\r",
											"                        \"HbA1c\",\r",
											"                        \"Average Glucose\"\r",
											"                    ]\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"66ad69134717cf471aaad177\",\r",
											"                \"66ad66be4717cf471aaad16f\"\r",
											"            ]\r",
											"        },\r",
											"        \"FileMorbidityCondition\": {\r",
											"            \"type\": \"object\",\r",
											"            \"properties\": {\r",
											"                \"66ad69134717cf471aaad177\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"66ad66be4717cf471aaad16f\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"66ad69134717cf471aaad177\",\r",
											"                \"66ad66be4717cf471aaad16f\"\r",
											"            ]\r",
											"        },\r",
											"        \"DateOfBirth\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"DieticianId\": {\r",
											"            \"type\": \"integer\"\r",
											"        },\r",
											"        \"Vitals\": {\r",
											"            \"type\": \"object\",\r",
											"            \"properties\": {\r",
											"                \"66ad69134717cf471aaad177\": {\r",
											"                    \"type\": \"object\",\r",
											"                    \"properties\": {\r",
											"                        \"Weight\": {\r",
											"                            \"type\": \"number\"\r",
											"                        },\r",
											"                        \"Height\": {\r",
											"                            \"type\": \"number\"\r",
											"                        },\r",
											"                        \"Temperature\": {\r",
											"                            \"type\": \"number\"\r",
											"                        },\r",
											"                        \"SP\": {\r",
											"                            \"type\": \"integer\"\r",
											"                        },\r",
											"                        \"DP\": {\r",
											"                            \"type\": \"integer\"\r",
											"                        }\r",
											"                    },\r",
											"                    \"required\": [\r",
											"                        \"Weight\",\r",
											"                        \"Height\",\r",
											"                        \"Temperature\",\r",
											"                        \"SP\",\r",
											"                        \"DP\"\r",
											"                    ]\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"66ad69134717cf471aaad177\"\r",
											"            ]\r",
											"        },\r",
											"        \"LastVisitDate\": {\r",
											"            \"type\": \"string\"\r",
											"        }\r",
											"    },\r",
											"    \"required\": [\r",
											"        \"patientId\",\r",
											"        \"FirstName\",\r",
											"        \"LastName\",\r",
											"        \"ContactNumber\",\r",
											"        \"Email\",\r",
											"        \"Allergy\",\r",
											"        \"FoodPreference\",\r",
											"        \"CuisineCategory\",\r",
											"        \"FileMorbidity\",\r",
											"        \"FileMorbidityCondition\",\r",
											"        \"DateOfBirth\",\r",
											"        \"DieticianId\",\r",
											"        \"Vitals\",\r",
											"        \"LastVisitDate\"\r",
											"    ]\r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', () =>{\r",
											"    pm.expect(responsebody).to.have.jsonSchema(schema);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": "{{Patient_file1}}"
										}
									]
								},
								"url": {
									"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
									"protocol": "https",
									"host": [
										"dietician-july-api-hackathon-80f2590665cc",
										"herokuapp",
										"com"
									],
									"path": [
										"dietician",
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "New Request L",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345983\",\n\"Email\": \"smartdiet@gmail.com\",\n\"Allergy\": \"soy\",\n\"FoodPreference\": \"jain\",\n\"CuisineCategory\":\"indian\",\n\"DateOfBirth\": \"1986-02-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722460648&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=7lDaY9ld6NskRFkFKPQXQoWPgxqbgHVpV4uFMUWegdY%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722460648&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=7lDaY9ld6NskRFkFKPQXQoWPgxqbgHVpV4uFMUWegdY%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 31 Jul 2024 21:17:29 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345983\",\n    \"Email\": \"smartdiet@gmail.com\",\n    \"Allergy\": \"soy\",\n    \"FoodPreference\": \"jain\",\n    \"CuisineCategory\": \"indian\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\"\n    },\n    \"DateOfBirth\": \"1986-02-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								},
								{
									"name": "Create Patient",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"mall\",\n\"LastName\": \"mall\",\n\"ContactNumber\": \"9968345983\",\n\"Email\": \"smart@gmail.com\",\n\"Allergy\": \"soy\",\n\"FoodPreference\": \"jain\",\n\"CuisineCategory\":\"indian\",\n\"DateOfBirth\": \"1986-02-24\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "{{Patient_file1}}"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722612549&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=tc3vfZY%2FW9ZO0V4eF0eTYI1CIyOWjq1%2BrZ9ilkaqm3o%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722612549&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=tc3vfZY%2FW9ZO0V4eF0eTYI1CIyOWjq1%2BrZ9ilkaqm3o%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 15:29:09 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 348,\n    \"FirstName\": \"mall\",\n    \"LastName\": \"mall\",\n    \"ContactNumber\": \"9968345983\",\n    \"Email\": \"smart@gmail.com\",\n    \"Allergy\": \"soy\",\n    \"FoodPreference\": \"jain\",\n    \"CuisineCategory\": \"indian\",\n    \"FileMorbidity\": {\n        \"66acfb454717cf471aaad07c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66acfb454717cf471aaad07c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\"\n    },\n    \"DateOfBirth\": \"1986-02-24\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66acfb454717cf471aaad07c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-08-02T15:29:09.780+00:00\"\n}"
								}
							]
						},
						{
							"name": "Create Patient with Missing FirstName",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Get the form data object\r",
											"let formData = pm.request.body.formdata;\r",
											"\r",
											"\r",
											"if (formData) {\r",
											"    console.log(\"FormData exists and count method is available.\");\r",
											"\r",
											"    \r",
											"    let count = formData.count();\r",
											"    console.log(\"Number of fields in formData: \" + count);\r",
											"\r",
											"    \r",
											"    for (let i = 0; i < count; i++) {\r",
											"        let item = formData.get(i);\r",
											"\r",
											"       \r",
											"        if (item) {\r",
											"            console.log(\"Item at index \" + i + \": \", item);\r",
											"\r",
											"            if (item.key === \"FirstName\") {\r",
											"                let includeFirstname = pm.variables.get(\"Patient_Firstname\") === 'true';\r",
											"                \r",
											"               \r",
											"                if (!includeFirstname) {\r",
											"                    formData.remove(item.key); \r",
											"                }\r",
											"            }\r",
											"        } else {\r",
											"            console.error(\"Form data item is undefined or null at index \" + i);\r",
											"        }\r",
											"    }\r",
											"} else {\r",
											"    console.error(\"Form data is undefined or does not have a count method.\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has valid JSON body\", function () {\r",
											"  pm.expect(responseData).to.be.an('object');\r",
											"  pm.expect(responseData).to.have.property('timestamp');\r",
											"  pm.expect(responseData).to.have.property('status');\r",
											"  pm.expect(responseData).to.have.property('error');\r",
											"  pm.expect(responseData).to.have.property('path');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
									"protocol": "https",
									"host": [
										"dietician-july-api-hackathon-80f2590665cc",
										"herokuapp",
										"com"
									],
									"path": [
										"dietician",
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Missing CuisineCategory",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientInfo",
													"value": "{ \"FirstName\": \"Sony\",\n\"LastName\": \"Sony\",\n\"ContactNumber\": \"9005089943\",\n\"Email\": \"Sony@gmail.com\",\n\"Allergy\": \"pecan\",\n\"FoodPreference\": \"Nonveg\",\n\"CuisineCategory\":\"\",\n\"DateOfBirth\": \"1977-02-04\"\n}",
													"type": "text"
												},
												{
													"key": "File",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722700373&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=2e9rfCi5OiUxg4ojh9w8b3NnNJYz6X9NrgSQfIVOFTo%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722700373&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=2e9rfCi5OiUxg4ojh9w8b3NnNJYz6X9NrgSQfIVOFTo%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sat, 03 Aug 2024 15:52:53 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-03T15:52:53.395+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								},
								{
									"name": "Misspelled Mandatory Field",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientInfo",
													"value": "{ \"FirstName\": \"Sony\",\n\"LastName\": \"Sony\",\n\"ContactNumber\": \"9005089943\",\n\"Email\": \"Sony@gmail.com\",\n\"Allergy\": \"pecun\",\n\"FoodPreference\": \"Nonveg\",\n\"CuisineCategory\":\"Indian\",\n\"DateOfBirth\": \"1967-02-04\"\n}",
													"type": "text"
												},
												{
													"key": "File",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722700698&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=Vn53yrwk%2BT0L8LNDLLM4R6f%2FaUmbrkKTlf2i4lyz9o8%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722700698&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=Vn53yrwk%2BT0L8LNDLLM4R6f%2FaUmbrkKTlf2i4lyz9o8%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sat, 03 Aug 2024 15:58:19 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-03T15:58:19.300+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								},
								{
									"name": "Missing FirstName",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientInfo",
													"value": "{ \"FirstName\": \"\",\n\"LastName\": \"Sony\",\n\"ContactNumber\": \"9005089943\",\n\"Email\": \"Sony@gmail.com\",\n\"Allergy\": \"pecun\",\n\"FoodPreference\": \"Nonveg\",\n\"CuisineCategory\":\"Indian\",\n\"DateOfBirth\": \"1967-02-04\"\n}",
													"type": "text"
												},
												{
													"key": "File",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1723012486&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=sXI2rOl8PVav1FKQ4ThDGRk0fn5JqQOulRb3tVXix7s%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1723012486&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=sXI2rOl8PVav1FKQ4ThDGRk0fn5JqQOulRb3tVXix7s%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 07 Aug 2024 06:34:46 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-07T06:34:46.841+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create Patient with Invalid Endpoint",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Renamed the variable to responseData\r",
											"pm.test(\"Status code is 404\", () => {\r",
											"  pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.error).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Error message should not be empty\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientId",
											"value": ": { \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}\n",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}{{InvalidEndPoint}}",
									"host": [
										"{{baseURL}}{{InvalidEndPoint}}"
									]
								}
							},
							"response": [
								{
									"name": "New Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientId",
													"value": ": { \"FirstName\": \"Sing\",\n\"LastName\": \"sing\",\n\"ContactNumber\": \"7878786778\",\n\"Email\": \"sing@gmail.com\",\n\"Allergy\": \"egg\",\n\"FoodPreference\": \"Vegetarian\",\n\"CuisineCategory\":\"lebanese\",\n\"DateOfBirth\": \"1996-02-14\"\n}\n",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/info",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"info"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722632637&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=0WfCplco7FJTq3s14Knmf%2FFN14sBI5hNZ5gjgQfHz28%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722632637&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=0WfCplco7FJTq3s14Knmf%2FFN14sBI5hNZ5gjgQfHz28%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 21:03:57 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-02T21:03:57.979+00:00\",\n    \"status\": 404,\n    \"error\": \"Not Found\",\n    \"path\": \"/dietician/info\"\n}"
								},
								{
									"name": "Create Patient with Invalid Endpoint",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientId",
													"value": ": { \"FirstName\": \"Sing\",\n\"LastName\": \"sing\",\n\"ContactNumber\": \"7878786778\",\n\"Email\": \"sing@gmail.com\",\n\"Allergy\": \"egg\",\n\"FoodPreference\": \"Vegetarian\",\n\"CuisineCategory\":\"lebanese\",\n\"DateOfBirth\": \"1996-02-14\"\n}\n",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/info",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"info"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1723037888&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=zc5rywuj0ywUQYvBLmwRB3qEzx0kEYMEEBTFf7FWTMY%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1723037888&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=zc5rywuj0ywUQYvBLmwRB3qEzx0kEYMEEBTFf7FWTMY%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 07 Aug 2024 13:38:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-07T13:38:08.551+00:00\",\n    \"status\": 404,\n    \"error\": \"Not Found\",\n    \"path\": \"/dietician/info\"\n}"
								}
							]
						},
						{
							"name": "Create Patient with Invalid authorisation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// commonTests.unauthorizedRequest;\r",
											"\r",
											"pm.test(\"Status code is 401\", () => {\r",
											"  pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is a non-empty string\", function () {\r",
											"    // const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(pm.response.json().error).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Error message should not be empty\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.request.headers.remove(\"Authorization\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientId",
											"value": ": { \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}\n",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "New Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientId",
													"value": ": { \"FirstName\": \"Sing\",\n\"LastName\": \"sing\",\n\"ContactNumber\": \"7878786778\",\n\"Email\": \"sing@gmail.com\",\n\"Allergy\": \"egg\",\n\"FoodPreference\": \"Vegetarian\",\n\"CuisineCategory\":\"lebanese\",\n\"DateOfBirth\": \"1996-02-14\"\n}\n",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/info",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"info"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722632637&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=0WfCplco7FJTq3s14Knmf%2FFN14sBI5hNZ5gjgQfHz28%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722632637&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=0WfCplco7FJTq3s14Knmf%2FFN14sBI5hNZ5gjgQfHz28%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 21:03:57 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-02T21:03:57.979+00:00\",\n    \"status\": 404,\n    \"error\": \"Not Found\",\n    \"path\": \"/dietician/info\"\n}"
								},
								{
									"name": "Create Patient with Invalid authorisation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientId",
													"value": ": { \"FirstName\": \"Sing\",\n\"LastName\": \"sing\",\n\"ContactNumber\": \"7878786778\",\n\"Email\": \"sing@gmail.com\",\n\"Allergy\": \"egg\",\n\"FoodPreference\": \"Vegetarian\",\n\"CuisineCategory\":\"lebanese\",\n\"DateOfBirth\": \"1996-02-14\"\n}\n",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1723038626&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=5WTPZmqO5O8GNjsWLJSIIe4yitKB%2F38B7gpWOGspF40%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1723038626&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=5WTPZmqO5O8GNjsWLJSIIe4yitKB%2F38B7gpWOGspF40%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 07 Aug 2024 13:50:26 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-07T13:50:27.023+00:00\",\n    \"status\": 401,\n    \"error\": \"Unauthorized\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create Patient_Invalid DOB_FutureDate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Renamed the 'jsonBody' variable to 'responseJSON'\r",
											"var responseJSON = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"// pm.test(\"Response has valid JSON body\", function () {\r",
											"//   pm.expect(responseJSON).to.be.an('object');\r",
											"//   pm.expect(responseJSON).to.have.property('timestamp');\r",
											"//   pm.expect(responseJSON).to.have.property('status');\r",
											"//   pm.expect(responseJSON).to.have.property('error');\r",
											"//   pm.expect(responseJSON).to.have.property('path');\r",
											"// });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"let formData = pm.request.body.formdata;\r",
											"\r",
											"if (formData) {\r",
											"    console.log(\"FormData exists and count method is available.\");\r",
											"\r",
											"    // Dob future from csv file\r",
											"    let futureDateOfBirth = pm.iterationData.get(\"future_date_of_birth\");\r",
											"\r",
											"    \r",
											"    console.log(\"Future Date of Birth from CSV: \" + futureDateOfBirth);\r",
											"\r",
											"    let count = formData.count();\r",
											"    console.log(\"Number of fields in formData: \" + count);\r",
											"\r",
											"    //  form data fields iteration\r",
											"    for (let i = 0; i < count; i++) {\r",
											"        let item = formData.get(i);\r",
											"\r",
											"        if (item) {\r",
											"            console.log(\"Item at index \" + i + \": \", item);\r",
											"\r",
											"            \r",
											"            if (item.key === \"DateOfBirth\") {\r",
											"                // replaced the future date value\r",
											"                item.value = futureDateOfBirth;\r",
											"                console.log(\"Updated DateOfBirth to: \" + futureDateOfBirth);\r",
											"            }\r",
											"        } else {\r",
											"            console.error(\"Form data item is undefined or null at index \" + i);\r",
											"        }\r",
											"    }\r",
											"} else {\r",
											"    console.error(\"Form data is undefined or does not have a count method.\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientIno",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient_Invalid DOB_Futuredate",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientIno",
													"value": "{ \"FirstName\": \"Reena\",\n\"LastName\": \"Swaha\",\n\"ContactNumber\": \"9005089945\",\n\"Email\": \"Reena@gmail.com\",\n\"Allergy\": \"walnut\",\n\"FoodPreference\": \"Vegan\",\n\"CuisineCategory\":\"goan\",\n\"DateOfBirth\": \"2026-01-01\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1723041914&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=dRxJWv%2FYUsGX9GXLY3lHnPT55DYVYeTTjRyIZuaBubI%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1723041914&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=dRxJWv%2FYUsGX9GXLY3lHnPT55DYVYeTTjRyIZuaBubI%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 07 Aug 2024 14:45:13 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-07T14:45:14.759+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create Patient with Invalid BaseURL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 404\", function () {\r",
											"  pm.expect(pm.response.code).to.equal(404);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response has Content-Type header with value 'text/html'\", function () {\r",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/html\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response body contains the expected error message or title\", function () {\r",
											"    const expectedErrorMessage = \"Heroku | Application Error\";\r",
											"    pm.expect(pm.response.text()).to.include(expectedErrorMessage);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate that the 'iframe' tag is present in the response body\", function () {\r",
											"    const responseData = pm.response.text();\r",
											"    \r",
											"    pm.expect(responseData).to.include('<iframe src=\"//www.herokucdn.com/error-pages/no-such-app.html\"></iframe>');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Ensure that the 'viewport' meta tag is present in the response body\", function () {\r",
											"    const responseData = pm.response.text();\r",
											"    \r",
											"    pm.expect(responseData).to.include('<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">');\r",
											"});\r",
											"//commonTests.notFoundRequest();\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientId",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}\n",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{InvalidBaseURL}}/patient",
									"host": [
										"{{InvalidBaseURL}}"
									],
									"path": [
										"patient"
									],
									"query": [
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "New Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientId",
													"value": ": { \"FirstName\": \"Sing\",\n\"LastName\": \"sing\",\n\"ContactNumber\": \"7878786778\",\n\"Email\": \"sing@gmail.com\",\n\"Allergy\": \"egg\",\n\"FoodPreference\": \"Vegetarian\",\n\"CuisineCategory\":\"lebanese\",\n\"DateOfBirth\": \"1996-02-14\"\n}\n",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/info",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"info"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722632637&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=0WfCplco7FJTq3s14Knmf%2FFN14sBI5hNZ5gjgQfHz28%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722632637&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=0WfCplco7FJTq3s14Knmf%2FFN14sBI5hNZ5gjgQfHz28%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 21:03:57 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-02T21:03:57.979+00:00\",\n    \"status\": 404,\n    \"error\": \"Not Found\",\n    \"path\": \"/dietician/info\"\n}"
								},
								{
									"name": "Create Patient with Invalid URL",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientId",
													"value": ": { \"FirstName\": \"Sing\",\n\"LastName\": \"sing\",\n\"ContactNumber\": \"7878786778\",\n\"Email\": \"sing@gmail.com\",\n\"Allergy\": \"egg\",\n\"FoodPreference\": \"Vegetarian\",\n\"CuisineCategory\":\"lebanese\",\n\"DateOfBirth\": \"1996-02-14\"\n}\n",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon--880f2590665cc.herokuapp.com/dietician",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon--880f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "Content-Length",
											"value": "563"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store"
										},
										{
											"key": "Content-Type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "2024-08-07 14:03:00.767807484 +0000 UTC"
										},
										{
											"key": "Server",
											"value": "heroku-router"
										}
									],
									"cookie": [],
									"body": "<!DOCTYPE html>\n<html>\n    <head>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <meta charset=\"utf-8\">\n        <title>Heroku | Application Error</title>\n        <style media=\"screen\">\n      html,body,iframe {\n        margin: 0;\n        padding: 0;\n      }\n      html,body {\n        height: 100%;\n        overflow: hidden;\n      }\n      iframe {\n        width: 100%;\n        height: 100%;\n        border: 0;\n      }\n    </style>\n    </head>\n    <body>\n        <iframe src=\"//www.herokucdn.com/error-pages/no-such-app.html\"></iframe>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Create Patient with Invalid contactNo unique field",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"let formData = pm.request.body.formdata;\r",
											"\r",
											"if (formData) {\r",
											"    console.log(\"FormData exists and count method is available.\");\r",
											"\r",
											"  \r",
											"    let invalidContactNumber = pm.iterationData.get(\"patient_unique_invalidcontactnumber\");\r",
											"\r",
											"    \r",
											"    console.log(\"Invalid Contact Number from CSV: \" + invalidContactNumber);\r",
											"\r",
											"    let count = formData.count();\r",
											"    console.log(\"Number of fields in formData: \" + count);\r",
											"\r",
											"    // Iterate over the form data fields\r",
											"    for (let i = 0; i < count; i++) {\r",
											"        let item = formData.get(i);\r",
											"\r",
											"        if (item) {\r",
											"            console.log(\"Item at index \" + i + \": \", item);\r",
											"\r",
											"            // contactnumber field replace \r",
											"            if (item.key === \"ContactNumber\") {\r",
											"                //invalid number is taken\r",
											"                item.value = invalidContactNumber;\r",
											"                console.log(\"pass invalidContactNumber: \" + invalidContactNumber);\r",
											"            }\r",
											"        } else {\r",
											"            console.error(\"Form data item is undefined or null at index \" + i);\r",
											"        }\r",
											"    }\r",
											"} else {\r",
											"    console.error(\"Form data is undefined or does not have a count method.\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseContent = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status code is 404\", function () {\r",
											"  pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response body has timestamp, status, error, and path properties\", function () {\r",
											"  pm.expect(responseContent).to.have.property('timestamp');\r",
											"  pm.expect(responseContent).to.have.property('status');\r",
											"  pm.expect(responseContent).to.have.property('error');\r",
											"  pm.expect(responseContent).to.have.property('path');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient\n",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient\n"
									]
								}
							},
							"response": [
								{
									"name": "ContactNo_<10digits",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientInfo",
													"value": "{ \"FirstName\": \"Maria\",\n\"LastName\": \"Sinha\",\n\"ContactNumber\": \"90050899\",\n\"Email\": \"maria@gmail.com\",\n\"Allergy\": \"pecan\",\n\"FoodPreference\": \"Nonveg\",\n\"CuisineCategory\":\"awadhi\",\n\"DateOfBirth\": \"1977-02-04\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef51a63-4b51-4b80-b890-931351970a48"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722696142&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=ofL5Z%2BPxIDOt0YXdrRC2vKSIaL3W3bM52WWWFtsn0FM%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722696142&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=ofL5Z%2BPxIDOt0YXdrRC2vKSIaL3W3bM52WWWFtsn0FM%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sat, 03 Aug 2024 14:42:22 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-03T14:42:22.670+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								},
								{
									"name": "ContactNo_specialChar",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientInfo",
													"value": "{ \"FirstName\": \"Riia\",\n\"LastName\": \"Suha\",\n\"ContactNumber\": \"900508994#\",\n\"Email\": \"maria@gmail.com\",\n\"Allergy\": \"pecan\",\n\"FoodPreference\": \"Nonveg\",\n\"CuisineCategory\":\"awadhi\",\n\"DateOfBirth\": \"1977-02-04\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef51a63-4b51-4b80-b890-931351970a48"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722697556&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=Cdr19ItqFuvLfXgqrfUAbPaNn7ABn0lYsCevTgdxasE%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722697556&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=Cdr19ItqFuvLfXgqrfUAbPaNn7ABn0lYsCevTgdxasE%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sat, 03 Aug 2024 15:05:56 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-03T15:05:56.975+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create patient with Missing contact No",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Get the form data object\r",
											"let formData = pm.request.body.formdata;\r",
											"\r",
											"\r",
											"if (formData) {\r",
											"    console.log(\"FormData exists and count method is available.\");\r",
											"\r",
											"    \r",
											"    let count = formData.count();\r",
											"    console.log(\"Number of fields in formData: \" + count);\r",
											"\r",
											"    \r",
											"    for (let i = 0; i < count; i++) {\r",
											"        let item = formData.get(i);\r",
											"\r",
											"       \r",
											"        if (item) {\r",
											"            console.log(\"Item at index \" + i + \": \", item);\r",
											"\r",
											"            if (item.key === \"ContactNumber\") {\r",
											"                let includecontactnumber= pm.variables.get(\"Patient_contactname\") === 'true';\r",
											"                \r",
											"               \r",
											"                if (!includecontactnumber) {\r",
											"                    formData.remove(item.key); \r",
											"                }\r",
											"            }\r",
											"        } else {\r",
											"            console.error(\"Form data item is undefined or null at index \" + i);\r",
											"        }\r",
											"    }\r",
											"} else {\r",
											"    console.error(\"Form data is undefined or does not have a count method.\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseBody = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response body has timestamp, status, error, and path properties\", function () {\r",
											"  pm.expect(responseBody).to.have.property('timestamp');\r",
											"  pm.expect(responseBody).to.have.property('status');\r",
											"  pm.expect(responseBody).to.have.property('error');\r",
											"  pm.expect(responseBody).to.have.property('path');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Create patient with Missing contact No",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientInfo",
													"value": "{ \"FirstName\": \"Han\",\n\"LastName\": \"mall\",\n\"ContactNumber\": \"\",\n\"Email\": \"Han@gmail.com\",\n\"Allergy\": \"walnut\",\n\"FoodPreference\": \"jain\",\n\"CuisineCategory\":\"iAndhra\",\n\"DateOfBirth\": \"1989-02-20\"\n}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseURL}}/patient",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1723059901&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=pd34ot%2BgS6j%2FEjWHnZAdNmWq3j6wHEJYfbkRtXoUYpY%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1723059901&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=pd34ot%2BgS6j%2FEjWHnZAdNmWq3j6wHEJYfbkRtXoUYpY%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 07 Aug 2024 19:45:01 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-07T19:45:01.045+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create patient with Missing LastName",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Get the form data object\r",
											"let formData = pm.request.body.formdata;\r",
											"\r",
											"\r",
											"if (formData) {\r",
											"    console.log(\"FormData exists and count method is available.\");\r",
											"\r",
											"    \r",
											"    let count = formData.count();\r",
											"    console.log(\"Number of fields in formData: \" + count);\r",
											"\r",
											"    \r",
											"    for (let i = 0; i < count; i++) {\r",
											"        let item = formData.get(i);\r",
											"\r",
											"       \r",
											"        if (item) {\r",
											"            console.log(\"Item at index \" + i + \": \", item);\r",
											"\r",
											"            if (item.key === \"LastName\") {\r",
											"                let includeLastname = pm.variables.get(\"Patient_lastname\") === 'true';\r",
											"                \r",
											"               \r",
											"                if (!includeLastname) {\r",
											"                    formData.remove(item.key); \r",
											"                }\r",
											"            }\r",
											"        } else {\r",
											"            console.error(\"Form data item is undefined or null at index \" + i);\r",
											"        }\r",
											"    }\r",
											"} else {\r",
											"    console.error(\"Form data is undefined or does not have a count method.\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseJSON = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has valid JSON body\", function () {\r",
											"  pm.expect(responseJSON).to.be.an('object');\r",
											"  pm.expect(responseJSON).to.have.property('timestamp');\r",
											"  pm.expect(responseJSON).to.have.property('status');\r",
											"  pm.expect(responseJSON).to.have.property('error');\r",
											"  pm.expect(responseJSON).to.have.property('path');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient with Invalid request Copy",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722811776&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=OB7B5HRGcW07NtViHtpKgyE7XlApe20uPofTcs3ScqA%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722811776&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=OB7B5HRGcW07NtViHtpKgyE7XlApe20uPofTcs3ScqA%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 04 Aug 2024 22:49:36 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-04T22:49:36.926+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create Patient with Missing CuisineCategory",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Get the form data object\r",
											"let formData = pm.request.body.formdata;\r",
											"\r",
											"\r",
											"if (formData) {\r",
											"    console.log(\"FormData exists and count method is available.\");\r",
											"\r",
											"    \r",
											"    let count = formData.count();\r",
											"    console.log(\"Number of fields in formData: \" + count);\r",
											"\r",
											"    \r",
											"    for (let i = 0; i < count; i++) {\r",
											"        let item = formData.get(i);\r",
											"\r",
											"       \r",
											"        if (item) {\r",
											"            console.log(\"Item at index \" + i + \": \", item);\r",
											"\r",
											"            if (item.key === \"CuisineCategory\") {\r",
											"                let includeCuisinecategory = pm.variables.get(\"Patient_cuisinecategory\") === 'true';\r",
											"                \r",
											"               \r",
											"                if (!includeCuisinecategory) {\r",
											"                    formData.remove(item.key); \r",
											"                }\r",
											"            }\r",
											"        } else {\r",
											"            console.error(\"Form data item is undefined or null at index \" + i);\r",
											"        }\r",
											"    }\r",
											"} else {\r",
											"    console.error(\"Form data is undefined or does not have a count method.\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has valid JSON body\", function () {\r",
											"  pm.expect(responseData).to.be.an('object');\r",
											"  pm.expect(responseData).to.have.property('timestamp');\r",
											"  pm.expect(responseData).to.have.property('status');\r",
											"  pm.expect(responseData).to.have.property('error');\r",
											"  pm.expect(responseData).to.have.property('path');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Missing CuisineCategory",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientInfo",
													"value": "{ \"FirstName\": \"Sony\",\n\"LastName\": \"Sony\",\n\"ContactNumber\": \"9005089943\",\n\"Email\": \"Sony@gmail.com\",\n\"Allergy\": \"pecan\",\n\"FoodPreference\": \"Nonveg\",\n\"CuisineCategory\":\"\",\n\"DateOfBirth\": \"1977-02-04\"\n}",
													"type": "text"
												},
												{
													"key": "File",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722700373&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=2e9rfCi5OiUxg4ojh9w8b3NnNJYz6X9NrgSQfIVOFTo%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722700373&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=2e9rfCi5OiUxg4ojh9w8b3NnNJYz6X9NrgSQfIVOFTo%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sat, 03 Aug 2024 15:52:53 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-03T15:52:53.395+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create patient with Missing Email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Get the form data object\r",
											"let formData = pm.request.body.formdata;\r",
											"\r",
											"\r",
											"if (formData) {\r",
											"    console.log(\"FormData exists and count method is available.\");\r",
											"\r",
											"    \r",
											"    let count = formData.count();\r",
											"    console.log(\"Number of fields in formData: \" + count);\r",
											"\r",
											"    \r",
											"    for (let i = 0; i < count; i++) {\r",
											"        let item = formData.get(i);\r",
											"\r",
											"       \r",
											"        if (item) {\r",
											"            console.log(\"Item at index \" + i + \": \", item);\r",
											"\r",
											"            if (item.key === \"Email\") {\r",
											"                let includeEmail = pm.variables.get(\"Patient_Email\") === 'true';\r",
											"                \r",
											"               \r",
											"                if (!includeEmail) {\r",
											"                    formData.remove(item.key); \r",
											"                }\r",
											"            }\r",
											"        } else {\r",
											"            console.error(\"Form data item is undefined or null at index \" + i);\r",
											"        }\r",
											"    }\r",
											"} else {\r",
											"    console.error(\"Form data is undefined or does not have a count method.\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseJSON = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient with Invalid request Copy",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722811776&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=OB7B5HRGcW07NtViHtpKgyE7XlApe20uPofTcs3ScqA%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722811776&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=OB7B5HRGcW07NtViHtpKgyE7XlApe20uPofTcs3ScqA%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 04 Aug 2024 22:49:36 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-04T22:49:36.926+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create patient with Invalid Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Check error message\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    const errorMessage = jsonData.errorMessage;\r",
											"    pm.expect(jsonData.errorMessage).to.exist;\r",
											"    pm.expect(jsonData.errorMessage).to.equal(\"email : Invalid Email Id\\n Email should start with a letter  \\n \");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"\r",
											"\r",
											"let formData = pm.request.body.formdata;\r",
											"\r",
											"if (formData) {\r",
											"    console.log(\"FormData exists and count method is available.\");\r",
											"\r",
											"    // Dob future from csv file\r",
											"    let invalidemail = pm.iterationData.get(\"patient_invalidemail\");\r",
											"\r",
											"    \r",
											"    console.log(\"Future Date of Birth from CSV: \" + futureDateOfBirth);\r",
											"\r",
											"    let count = formData.count();\r",
											"    console.log(\"Number of fields in formData: \" + count);\r",
											"\r",
											"    //  form data fields iteration\r",
											"    for (let i = 0; i < count; i++) {\r",
											"        let item = formData.get(i);\r",
											"\r",
											"        if (item) {\r",
											"            console.log(\"Item at index \" + i + \": \", item);\r",
											"\r",
											"            \r",
											"            if (item.key === \"Email\") {\r",
											"                // replaced the future date value\r",
											"                item.value = futureDateOfBirth;\r",
											"                console.log(\"replacedemail: \" + invalidemail);\r",
											"            }\r",
											"        } else {\r",
											"            console.error(\"Form data item is undefined or null at index \" + i);\r",
											"        }\r",
											"    }\r",
											"} else {\r",
											"    console.error(\"Form data is undefined or does not have a count method.\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient with Invalid request Copy",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722811776&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=OB7B5HRGcW07NtViHtpKgyE7XlApe20uPofTcs3ScqA%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722811776&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=OB7B5HRGcW07NtViHtpKgyE7XlApe20uPofTcs3ScqA%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 04 Aug 2024 22:49:36 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-04T22:49:36.926+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create patient with Missing DOB",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseData = pm.response.text();\r",
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Error message for input\", () => {\r",
											"    pm.expect(responseData).to.eql(\"Date Should be in format yyyy-MM-dd\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Get the form data object\r",
											"let formData = pm.request.body.formdata;\r",
											"\r",
											"\r",
											"if (formData) {\r",
											"    console.log(\"FormData exists and count method is available.\");\r",
											"\r",
											"    \r",
											"    let count = formData.count();\r",
											"    console.log(\"Number of fields in formData: \" + count);\r",
											"\r",
											"    \r",
											"    for (let i = 0; i < count; i++) {\r",
											"        let item = formData.get(i);\r",
											"\r",
											"       \r",
											"        if (item) {\r",
											"            console.log(\"Item at index \" + i + \": \", item);\r",
											"\r",
											"            if (item.key === \"DateOfBirth\") {\r",
											"                let includeDOB = pm.variables.get(\"Patient_DOBempty\") === 'true';\r",
											"                \r",
											"               \r",
											"                if (!includeDOB) {\r",
											"                    formData.remove(item.key); \r",
											"                }\r",
											"            }\r",
											"        } else {\r",
											"            console.error(\"Form data item is undefined or null at index \" + i);\r",
											"        }\r",
											"    }\r",
											"} else {\r",
											"    console.error(\"Form data is undefined or does not have a count method.\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": []
						},
						{
							"name": "update patient by Id update only firstname Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Check if patientId exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('patientId');\r",
											"    pm.expect(jsonData.patientId).to.equal(pm.environment.get(\"patientId\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if FirstName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"   pm.expect(jsonData).to.have.property('FirstName');\r",
											"    pm.expect(jsonData.FirstName).to.equal(pm.iterationData.get(\"patient_update_firstName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if LastName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('LastName');\r",
											"    pm.expect(jsonData.LastName).to.equal(pm.iterationData.get(\"Patient_LastName\"));\r",
											"});\r",
											"pm.test(\"Check if contactNumber exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('ContactNumber');\r",
											"    pm.expect(jsonData.ContactNumber).to.equal(pm.iterationData.get(\"Patient_ContactNumber\")).toString();\r",
											"});\r",
											"pm.test(\"Check if Email exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Email');\r",
											"    pm.expect(jsonData.Email).to.equal(pm.iterationData.get(\"Patient_Email\"));\r",
											"});\r",
											"pm.test(\"Check if Allergy exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Allergy');\r",
											"    pm.expect(jsonData.Allergy).to.equal(pm.iterationData.get(\"Patient_Allergy\"));\r",
											"});\r",
											"pm.test(\"Check if FoodPreference exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('FoodPreference');\r",
											"    pm.expect(jsonData.FoodPreference).to.equal(pm.iterationData.get(\"Patient_FoodPreference\"));\r",
											"});\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('CuisineCategory');\r",
											"    pm.expect(jsonData.CuisineCategory).to.equal(pm.iterationData.get(\"Patient_CuisineCategory\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('DateOfBirth');\r",
											"    pm.expect(jsonData.DateOfBirth).to.equal(pm.iterationData.get(\"Patient_DateOfBirth\"));\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{patient_update_firstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": "{{patient_update_file}}"
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient by Id update only last name Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Check if patientId exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('patientId');\r",
											"    pm.expect(jsonData.patientId).to.equal(pm.environment.get(\"patientId\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if FirstName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"   pm.expect(jsonData).to.have.property('FirstName');\r",
											"    pm.expect(jsonData.FirstName).to.equal(pm.iterationData.get(\"Patient_FirstName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if LastName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('LastName');\r",
											"    pm.expect(jsonData.LastName).to.equal(pm.iterationData.get(\"patient_update_lastName\"));\r",
											"});\r",
											"pm.test(\"Check if contactNumber exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('ContactNumber');\r",
											"   pm.expect(jsonData.ContactNumber).to.equal(pm.iterationData.get(\"Patient_ContactNumber\")).toString();\r",
											"});\r",
											"pm.test(\"Check if Email exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Email');\r",
											"    pm.expect(jsonData.Email).to.equal(pm.iterationData.get(\"Patient_Email\"));\r",
											"});\r",
											"pm.test(\"Check if Allergy exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Allergy');\r",
											"    pm.expect(jsonData.Allergy).to.equal(pm.iterationData.get(\"Patient_Allergy\"));\r",
											"});\r",
											"pm.test(\"Check if FoodPreference exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('FoodPreference');\r",
											"    pm.expect(jsonData.FoodPreference).to.equal(pm.iterationData.get(\"Patient_FoodPreference\"));\r",
											"});\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('CuisineCategory');\r",
											"    pm.expect(jsonData.CuisineCategory).to.equal(pm.iterationData.get(\"Patient_CuisineCategory\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('DateOfBirth');\r",
											"    pm.expect(jsonData.DateOfBirth).to.equal(pm.iterationData.get(\"Patient_DateOfBirth\"));\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{patient_update_lastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient by Id update only contact number Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Check if patientId exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('patientId');\r",
											"    pm.expect(jsonData.patientId).to.equal(pm.environment.get(\"patientId\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if FirstName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"   pm.expect(jsonData).to.have.property('FirstName');\r",
											"    pm.expect(jsonData.FirstName).to.equal(pm.iterationData.get(\"Patient_FirstName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if LastName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('LastName');\r",
											"    pm.expect(jsonData.LastName).to.equal(pm.iterationData.get(\"Patient_LastName\"));\r",
											"});\r",
											"pm.test(\"Check if contactNumber exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('ContactNumber');\r",
											"    pm.expect(jsonData.ContactNumber).to.equal(pm.iterationData.get(\"patient_update_contactNumber\")).toString();\r",
											"});\r",
											"pm.test(\"Check if Email exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Email');\r",
											"    pm.expect(jsonData.Email).to.equal(pm.iterationData.get(\"Patient_Email\"));\r",
											"});\r",
											"pm.test(\"Check if Allergy exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Allergy');\r",
											"    pm.expect(jsonData.Allergy).to.equal(pm.iterationData.get(\"Patient_Allergy\"));\r",
											"});\r",
											"pm.test(\"Check if FoodPreference exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('FoodPreference');\r",
											"    pm.expect(jsonData.FoodPreference).to.equal(pm.iterationData.get(\"Patient_FoodPreference\"));\r",
											"});\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('CuisineCategory');\r",
											"    pm.expect(jsonData.CuisineCategory).to.equal(pm.iterationData.get(\"Patient_CuisineCategory\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('DateOfBirth');\r",
											"    pm.expect(jsonData.DateOfBirth).to.equal(pm.iterationData.get(\"Patient_DateOfBirth\"));\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{patient_update_contactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}\n",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "PtInfo",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient by Id update only Email Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Check if patientId exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('patientId');\r",
											"    pm.expect(jsonData.patientId).to.equal(pm.environment.get(\"patientId\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if FirstName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"   pm.expect(jsonData).to.have.property('FirstName');\r",
											"    pm.expect(jsonData.FirstName).to.equal(pm.iterationData.get(\"Patient_FirstName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if LastName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('LastName');\r",
											"    pm.expect(jsonData.LastName).to.equal(pm.iterationData.get(\"Patient_LastName\"));\r",
											"});\r",
											"pm.test(\"Check if contactNumber exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('ContactNumber');\r",
											"    pm.expect(jsonData.ContactNumber).to.equal(pm.iterationData.get(\"Patient_ContactNumber\")).toString();\r",
											"});\r",
											"pm.test(\"Check if Email exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Email');\r",
											"    pm.expect(jsonData.Email).to.equal(pm.iterationData.get(\"patient_update_email\"));\r",
											"});\r",
											"pm.test(\"Check if Allergy exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Allergy');\r",
											"    pm.expect(jsonData.Allergy).to.equal(pm.iterationData.get(\"Patient_Allergy\"));\r",
											"});\r",
											"pm.test(\"Check if FoodPreference exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('FoodPreference');\r",
											"    pm.expect(jsonData.FoodPreference).to.equal(pm.iterationData.get(\"Patient_FoodPreference\"));\r",
											"});\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('CuisineCategory');\r",
											"    pm.expect(jsonData.CuisineCategory).to.equal(pm.iterationData.get(\"Patient_CuisineCategory\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('DateOfBirth');\r",
											"    pm.expect(jsonData.DateOfBirth).to.equal(pm.iterationData.get(\"Patient_DateOfBirth\"));\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{patient_update_email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient by Id update Allergy field Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Check if patientId exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('patientId');\r",
											"    pm.expect(jsonData.patientId).to.equal(pm.environment.get(\"patientId\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if FirstName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"   pm.expect(jsonData).to.have.property('FirstName');\r",
											"    pm.expect(jsonData.FirstName).to.equal(pm.iterationData.get(\"Patient_FirstName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if LastName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('LastName');\r",
											"    pm.expect(jsonData.LastName).to.equal(pm.iterationData.get(\"Patient_LastName\"));\r",
											"});\r",
											"pm.test(\"Check if contactNumber exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('ContactNumber');\r",
											"    pm.expect(jsonData.ContactNumber).to.equal(pm.iterationData.get(\"Patient_ContactNumber\")).toString();\r",
											"});\r",
											"pm.test(\"Check if Email exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Email');\r",
											"    pm.expect(jsonData.Email).to.equal(pm.iterationData.get(\"Patient_Email\"));\r",
											"});\r",
											"pm.test(\"Check if Allergy exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Allergy');\r",
											"    pm.expect(jsonData.Allergy).to.equal(pm.iterationData.get(\"patient_update_allergy\"));\r",
											"});\r",
											"pm.test(\"Check if FoodPreference exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('FoodPreference');\r",
											"    pm.expect(jsonData.FoodPreference).to.equal(pm.iterationData.get(\"Patient_FoodPreference\"));\r",
											"});\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('CuisineCategory');\r",
											"    pm.expect(jsonData.CuisineCategory).to.equal(pm.iterationData.get(\"Patient_CuisineCategory\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('DateOfBirth');\r",
											"    pm.expect(jsonData.DateOfBirth).to.equal(pm.iterationData.get(\"Patient_DateOfBirth\"));\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{patient_update_allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient by Id update FoodPreference field Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Check if patientId exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('patientId');\r",
											"    pm.expect(jsonData.patientId).to.equal(pm.environment.get(\"patientId\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if FirstName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"   pm.expect(jsonData).to.have.property('FirstName');\r",
											"    pm.expect(jsonData.FirstName).to.equal(pm.iterationData.get(\"Patient_FirstName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if LastName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('LastName');\r",
											"    pm.expect(jsonData.LastName).to.equal(pm.iterationData.get(\"Patient_LastName\"));\r",
											"});\r",
											"pm.test(\"Check if contactNumber exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('ContactNumber');\r",
											"    pm.expect(jsonData.ContactNumber).to.equal(pm.iterationData.get(\"Patient_ContactNumber\")).toString();\r",
											"});\r",
											"pm.test(\"Check if Email exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Email');\r",
											"    pm.expect(jsonData.Email).to.equal(pm.iterationData.get(\"Patient_Email\"));\r",
											"});\r",
											"pm.test(\"Check if Allergy exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Allergy');\r",
											"    pm.expect(jsonData.Allergy).to.equal(pm.iterationData.get(\"Patient_Allergy\"));\r",
											"});\r",
											"pm.test(\"Check if FoodPreference exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('FoodPreference');\r",
											"    pm.expect(jsonData.FoodPreference).to.equal(pm.iterationData.get(\"patient_update_foodPreference\"));\r",
											"});\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('CuisineCategory');\r",
											"    pm.expect(jsonData.CuisineCategory).to.equal(pm.iterationData.get(\"Patient_CuisineCategory\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if DateOfBirth exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('DateOfBirth');\r",
											"    pm.expect(jsonData.DateOfBirth).to.equal(pm.iterationData.get(\"Patient_DateOfBirth\"));\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{patient_update_foodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient by Id update DateOfBirth field Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Check if patientId exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('patientId');\r",
											"    pm.expect(jsonData.patientId).to.equal(pm.environment.get(\"patientId\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if FirstName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"   pm.expect(jsonData).to.have.property('FirstName');\r",
											"    pm.expect(jsonData.FirstName).to.equal(pm.iterationData.get(\"Patient_FirstName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if LastName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('LastName');\r",
											"    pm.expect(jsonData.LastName).to.equal(pm.iterationData.get(\"Patient_LastName\"));\r",
											"});\r",
											"pm.test(\"Check if contactNumber exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('ContactNumber');\r",
											"    pm.expect(jsonData.ContactNumber).to.equal(pm.iterationData.get(\"Patient_ContactNumber\")).toString();\r",
											"});\r",
											"pm.test(\"Check if Email exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Email');\r",
											"    pm.expect(jsonData.Email).to.equal(pm.iterationData.get(\"Patient_Email\"));\r",
											"});\r",
											"pm.test(\"Check if Allergy exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Allergy');\r",
											"    pm.expect(jsonData.Allergy).to.equal(pm.iterationData.get(\"Patient_Allergy\"));\r",
											"});\r",
											"pm.test(\"Check if FoodPreference exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('FoodPreference');\r",
											"    pm.expect(jsonData.FoodPreference).to.equal(pm.iterationData.get(\"Patient_FoodPreference\"));\r",
											"});\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('CuisineCategory');\r",
											"    pm.expect(jsonData.CuisineCategory).to.equal(pm.iterationData.get(\"Patient_CuisineCategory\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if DateOfBirth exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('DateOfBirth');\r",
											"    pm.expect(jsonData.DateOfBirth).to.equal(pm.iterationData.get(\"patient_update_dateOfBirth\"));\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}\n",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient by Id add new report without vitals",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Vitals key should be present in the response\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.have.property('Vitals');\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"// pm.test(\"Check if fileId exist in JSON response\", function () {\r",
											"//    const fileID = Object.keys(jsonBody.FileMorbidity)[0];\r",
											"//         pm.environment.set(\"fileID\",Â fileID);\r",
											"\r",
											"    \r",
											"// });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": "{{Patient_update_newFile}}"
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/newReports/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"newReports",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient by Id with invalid endpoints Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}{{InvalidEndPoint}}",
									"host": [
										"{{baseURL}}{{InvalidEndPoint}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient by Id (unauthorized) Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient add new report with invalid endpoints Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": []
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}{{InvalidEndPoint}}",
									"host": [
										"{{baseURL}}{{InvalidEndPoint}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient add new report with no auth Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": []
										},
										{
											"key": "PtInfo",
											"value": "\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/newReports/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"newReports",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient add new report  with vitals",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Vitals key should be present in the response\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.have.property('Vitals');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Vitals key contains expected subfields\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    \r",
											"    pm.expect(jsonData.Vitals).to.exist;   \r",
											"    pm.expect(jsonData.Vitals.Weight).to.equal(pm.iterationData(\"patient_Weight\"));\r",
											"     pm.expect(jsonData.Vitals.Height).to.equal(pm.iterationData(\"patient_Height\"));\r",
											"    pm.expect(jsonData.Vitals.Temperature).to.equal(pm.iterationData(\"patient_Temperature\"));\r",
											"    pm.expect(jsonData.Vitals.Sp).to.equal(pm.iterationData('patient_SP'));\r",
											"    pm.expect(jsonData.Vitals.DP).to.equal(pm.iterationData('patient_DP'));\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": "{{patient_update_newfile1}}"
										},
										{
											"key": "vitals",
											"value": "{ \"Weight\" : {{patient_Weight}},\n\"Height\" : {{patient_Height}},\n\"Temperature\" :{{patient_Temperature}} ,\n\"SP\" :{{patient_SP}},\n\"DP\" :{{patient_DP}}\n}\n",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/newReports/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"newReports",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "get patient morbidity details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present and correct\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"const jsonData= pm.response.json();\r",
											"pm.test(\"Response has patientId key\", function () {\r",
											"    pm.expect(jsonData).to.have.property('patientId');\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/patient/testReports/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "get patient morbidity details with invalid endpoints",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {",
											"  pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Content-Type is present and correct\", function () {",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/patient/testeports/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"testeports",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "get patient morbidity details with unauthorize",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is within an acceptable range\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"pm.test(\"Check for error message\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error).to.exist;\r",
											"    pm.expect(jsonData.error).to.equal(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Check for timestamp\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.timestamp).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Print response body\", function () {\r",
											"    const responseJson = pm.response.json();\r",
											"    console.log(responseJson);\r",
											"});\r",
											"\r",
											"pm.test(\"Print specific value from JSON response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    console.log(jsonData.timestamp);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/patient/testReports/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "Get all Patients",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response schema is valid\", function () {",
											"",
											"  var schema = {",
											"    type: \"array\",",
											"    items: {",
											"      type: \"object\",",
											"      properties: {",
											"        patientId: { type: \"number\" },",
											"        FirstName: { type: \"string\" },",
											"        LastName: { type: \"string\" },",
											"        ContactNumber: { type: \"string\" },",
											"        Email: { type: \"string\", format: \"email\" },",
											"        Allergy: { type: \"string\" },",
											"        FoodPreference: { type: \"string\" },",
											"        CuisineCategory: { type: \"string\" },",
											"        FileMorbidity: { type: \"object\" },",
											"        FileMorbidityCondition: { type: \"object\" },",
											"        DateOfBirth: { type: \"string\" },",
											"        DieticianId: { type: \"number\" },",
											"        Vitals: { type: \"object\" },",
											"        LastVisitDate: { type: \"string\" }",
											"      },",
											"      required: [\"patientId\", \"FirstName\", \"LastName\", \"ContactNumber\", \"Email\", \"Allergy\", \"FoodPreference\", \"CuisineCategory\", \"FileMorbidity\", \"FileMorbidityCondition\", \"DateOfBirth\", \"DieticianId\", \"Vitals\", \"LastVisitDate\"]",
											"    }",
											"  };",
											"",
											"  var response = pm.response.json();",
											"  //pm.expect(tv4.validate(response, schema)).to.be.true;",
											"  pm.expect(response).to.have.jsonSchema(schema);",
											"});",
											"pm.test(\"Response time is less than 200ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"});",
											"  pm.test(\"Response time is less than 500ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Get all Patients",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722718172&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=ahGtYBw1IlnAvUMuJR8mSjY6IwR9Bwf72jKVHIGqNlI%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722718172&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=ahGtYBw1IlnAvUMuJR8mSjY6IwR9Bwf72jKVHIGqNlI%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sat, 03 Aug 2024 20:49:32 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"patientId\": 33,\n        \"FirstName\": \"malli\",\n        \"LastName\": \"malli\",\n        \"ContactNumber\": \"9867345989\",\n        \"Email\": \"smartdiet1@gmail.com\",\n        \"Allergy\": \"ALMOND\",\n        \"FoodPreference\": \"Jain\",\n        \"CuisineCategory\": \"rajasthani\",\n        \"FileMorbidity\": {\n            \"66ad684d4717cf471aaad175\": {},\n            \"66ad6aa04717cf471aaad179\": {},\n            \"66ad7b894717cf471aaad197\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad37b74717cf471aaad0c3\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad3bb84717cf471aaad0cf\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad65e14717cf471aaad16d\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad7bbe4717cf471aaad199\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad36ce4717cf471aaad0bf\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66aaa9e9e6f5802145ab051c\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad2d234717cf471aaad0b7\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad6c794717cf471aaad17b\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad35584717cf471aaad0bd\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad39404717cf471aaad0cb\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad2a684717cf471aaad0b1\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad2fce4717cf471aaad0bb\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad67a84717cf471aaad173\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad67a84717cf471aaad171\": {},\n            \"66ad6c8f4717cf471aaad17d\": {}\n        },\n        \"FileMorbidityCondition\": {\n            \"66ad684d4717cf471aaad175\": \"\",\n            \"66ad6aa04717cf471aaad179\": \"\",\n            \"66ad7b894717cf471aaad197\": \"Prediabetic \\n\",\n            \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n            \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n            \"66ad65e14717cf471aaad16d\": \"Prediabetic \\n\",\n            \"66ad7bbe4717cf471aaad199\": \"Prediabetic \\n\",\n            \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\",\n            \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n            \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n            \"66ad6c794717cf471aaad17b\": \"Prediabetic \\n\",\n            \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n            \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n            \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n            \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n            \"66ad67a84717cf471aaad173\": \"Prediabetic \\n\",\n            \"66ad67a84717cf471aaad171\": \"\",\n            \"66ad6c8f4717cf471aaad17d\": \"\"\n        },\n        \"DateOfBirth\": \"1987-03-14\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66aaa9e9e6f5802145ab051c\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n    },\n    {\n        \"patientId\": 129,\n        \"FirstName\": \"Ram\",\n        \"LastName\": \"Setu\",\n        \"ContactNumber\": \"9009089789\",\n        \"Email\": \"ram@gmail.com\",\n        \"Allergy\": \"Peanut\",\n        \"FoodPreference\": \"NonVeg\",\n        \"CuisineCategory\": \"sindhi\",\n        \"FileMorbidity\": {\n            \"66ab9db93e6c022b073da1f5\": {\n                \"T3\": \"6.3 ng/mL\",\n                \"T4\": \"15.7 Âµg/dL\",\n                \"TSH\": \"0.016 ÂµIU/mL\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66ab9db93e6c022b073da1f5\": \"Thyroid: Hyperthyroidism \\nBlood Pressure: Hypotension \\n\"\n        },\n        \"DateOfBirth\": \"1987-02-14\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66ab9db93e6c022b073da1f5\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-01T14:37:45.435+00:00\"\n    },\n    {\n        \"patientId\": 132,\n        \"FirstName\": \"kristy\",\n        \"LastName\": \"john\",\n        \"ContactNumber\": \"9009089777\",\n        \"Email\": \"john@gmail.com\",\n        \"Allergy\": \"milk\",\n        \"FoodPreference\": \"vegan\",\n        \"CuisineCategory\": \"goan\",\n        \"FileMorbidity\": {\n            \"66aba0e93e6c022b073da203\": {\n                \"T4\": \"1.22 Âµg/dl\",\n                \"TSH\": \"100.0 mIU/L\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66aba0e93e6c022b073da203\": \"Thyroid: Hypothyroidism \\nBlood Pressure: Hypotension \\n\"\n        },\n        \"DateOfBirth\": \"1985-03-17\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66aba0e93e6c022b073da203\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-01T14:51:21.226+00:00\"\n    },\n    {\n        \"patientId\": 135,\n        \"FirstName\": \"tim\",\n        \"LastName\": \"kim\",\n        \"ContactNumber\": \"9029089777\",\n        \"Email\": \"kim@gmail.com\",\n        \"Allergy\": \"pecan\",\n        \"FoodPreference\": \"vegan\",\n        \"CuisineCategory\": \"bengali\",\n        \"FileMorbidity\": {\n            \"66aba3e33e6c022b073da20f\": {\n                \"T3\": \"6.3 ng/mL\",\n                \"T4\": \"15.7 Âµg/dL\",\n                \"TSH\": \"0.016 ÂµIU/mL\"\n            },\n            \"66aba3e33e6c022b073da20b\": {\n                \"T3\": \"6.3 ng/mL\",\n                \"T4\": \"15.7 Âµg/dL\",\n                \"TSH\": \"0.016 ÂµIU/mL\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66aba3e33e6c022b073da20f\": \"Thyroid: Hyperthyroidism \\n\",\n            \"66aba3e33e6c022b073da20b\": \"Thyroid: Hyperthyroidism \\nBlood Pressure: Hypotension \\n\"\n        },\n        \"DateOfBirth\": \"1987-04-27\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66aba3e33e6c022b073da20b\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-01T15:04:03.119+00:00\"\n    },\n    {\n        \"patientId\": 137,\n        \"FirstName\": \"Mary\",\n        \"LastName\": \"Singh\",\n        \"ContactNumber\": \"9005089789\",\n        \"Email\": \"mary@gmail.com\",\n        \"Allergy\": \"PEANUT\",\n        \"FoodPreference\": \"Vegan\",\n        \"CuisineCategory\": \"Indian\",\n        \"FileMorbidity\": {\n            \"66aba7c73e6c022b073da219\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66aba7c73e6c022b073da21b\": {\n                \"T3\": \"6.3 ng/mL\",\n                \"T4\": \"15.7 Âµg/dL\",\n                \"TSH\": \"0.016 ÂµIU/mL\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66aba7c73e6c022b073da219\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n            \"66aba7c73e6c022b073da21b\": \"Thyroid: Hyperthyroidism \\n\"\n        },\n        \"DateOfBirth\": \"1977-02-14\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66aba7c73e6c022b073da219\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-01T15:20:39.153+00:00\"\n    },\n    {\n        \"patientId\": 187,\n        \"FirstName\": \"jimmy\",\n        \"LastName\": \"Sinn\",\n        \"ContactNumber\": \"9005099789\",\n        \"Email\": \"jimmy@gmail.com\",\n        \"Allergy\": \"walnut\",\n        \"FoodPreference\": \"Vegetarian\",\n        \"CuisineCategory\": \"bihari\",\n        \"FileMorbidity\": {\n            \"66abfac03e6c022b073da291\": {\n                \"T3\": \"6.3 ng/mL\",\n                \"T4\": \"15.7 Âµg/dL\",\n                \"TSH\": \"0.016 ÂµIU/mL\"\n            },\n            \"66abfac03e6c022b073da28f\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66abfac03e6c022b073da291\": \"Thyroid: Hyperthyroidism \\n\",\n            \"66abfac03e6c022b073da28f\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\"\n        },\n        \"DateOfBirth\": \"1977-12-14\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66abfac03e6c022b073da28f\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-01T21:14:40.717+00:00\"\n    },\n    {\n        \"patientId\": 191,\n        \"FirstName\": \"sun\",\n        \"LastName\": \"fern\",\n        \"ContactNumber\": \"9075099789\",\n        \"Email\": \"sun@gmail.com\",\n        \"Allergy\": \"pecan\",\n        \"FoodPreference\": \"Vegan\",\n        \"CuisineCategory\": \"gujarati\",\n        \"FileMorbidity\": {\n            \"66abfda13e6c022b073da29f\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66abfda13e6c022b073da2a1\": {\n                \"T3\": \"6.3 ng/mL\",\n                \"T4\": \"15.7 Âµg/dL\",\n                \"TSH\": \"0.016 ÂµIU/mL\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66abfda13e6c022b073da29f\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n            \"66abfda13e6c022b073da2a1\": \"Thyroid: Hyperthyroidism \\n\"\n        },\n        \"DateOfBirth\": \"1977-05-14\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66abfda13e6c022b073da29f\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-01T21:26:57.254+00:00\"\n    },\n    {\n        \"patientId\": 192,\n        \"FirstName\": \"suin\",\n        \"LastName\": \"fern\",\n        \"ContactNumber\": \"9075099788\",\n        \"Email\": \"suin@gmail.com\",\n        \"Allergy\": \"pecan\",\n        \"FoodPreference\": \"Vegan\",\n        \"CuisineCategory\": \"gujarati\",\n        \"FileMorbidity\": {\n            \"66abfe423e6c022b073da2a5\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66abfe423e6c022b073da2a7\": {\n                \"T3\": \"6.3 ng/mL\",\n                \"T4\": \"15.7 Âµg/dL\",\n                \"TSH\": \"0.016 ÂµIU/mL\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66abfe423e6c022b073da2a5\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n            \"66abfe423e6c022b073da2a7\": \"Thyroid: Hyperthyroidism \\n\"\n        },\n        \"DateOfBirth\": \"1977-06-14\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66abfe423e6c022b073da2a5\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-01T21:29:38.833+00:00\"\n    },\n    {\n        \"patientId\": 323,\n        \"FirstName\": \"malli\",\n        \"LastName\": \"malli\",\n        \"ContactNumber\": \"9867345986\",\n        \"Email\": \"smartdiet@gmail.com\",\n        \"Allergy\": \"soy\",\n        \"FoodPreference\": \"jain\",\n        \"CuisineCategory\": \"indian\",\n        \"FileMorbidity\": {\n            \"66ac85903e6c022b073da4b4\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66ac85903e6c022b073da4b4\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\"\n        },\n        \"DateOfBirth\": \"1986-02-14\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66ac85903e6c022b073da4b4\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-02T07:06:56.854+00:00\"\n    },\n    {\n        \"patientId\": 324,\n        \"FirstName\": \"Talli\",\n        \"LastName\": \"malli\",\n        \"ContactNumber\": \"9867345988\",\n        \"Email\": \"smartdiet@gmail.com\",\n        \"Allergy\": \"soy\",\n        \"FoodPreference\": \"jain\",\n        \"CuisineCategory\": \"indian\",\n        \"FileMorbidity\": {\n            \"66ac862e3e6c022b073da4b6\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66ac862e3e6c022b073da4b6\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\"\n        },\n        \"DateOfBirth\": \"1986-03-14\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66ac862e3e6c022b073da4b6\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-02T07:09:34.890+00:00\"\n    },\n    {\n        \"patientId\": 348,\n        \"FirstName\": \"mall\",\n        \"LastName\": \"mall\",\n        \"ContactNumber\": \"9968345983\",\n        \"Email\": \"smart@gmail.com\",\n        \"Allergy\": \"soy\",\n        \"FoodPreference\": \"jain\",\n        \"CuisineCategory\": \"indian\",\n        \"FileMorbidity\": {\n            \"66acfb454717cf471aaad07c\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66acfb454717cf471aaad07c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\"\n        },\n        \"DateOfBirth\": \"1986-02-24\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66acfb454717cf471aaad07c\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-02T15:29:09.780+00:00\"\n    }\n]"
								}
							]
						},
						{
							"name": "Get all Patients with invalid endpoints",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check for error message\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error).to.exist;\r",
											"    pm.expect(jsonData.error).to.equal(\"Not Found\");\r",
											"});\r",
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient\n\n",
									"protocol": "https",
									"host": [
										"dietician-july-api-hackathon-80f2590665cc",
										"herokuapp",
										"com"
									],
									"path": [
										"dietician",
										"patient\n\n"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "Get all Patients with unauthorize",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"content-type\");\r",
											"});\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"pm.test(\"Check error message\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    const errorMessage = jsonData.error;\r",
											"    pm.expect(jsonData.error).to.exist;\r",
											"    pm.expect(jsonData.error).to.equal(errorMessage);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "Get all Patients with invalid baseUrl",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Check error message\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    const errorMessage = jsonData.error;\r",
											"    pm.expect(jsonData.error).to.exist;\r",
											"    pm.expect(jsonData.error).to.equal(errorMessage);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient\n\n",
									"protocol": "https",
									"host": [
										"dietician-july-api-hackathon-80f2590665cc",
										"herokuapp",
										"com"
									],
									"path": [
										"dietician",
										"patient\n\n"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "Retrieve Patient file by FileId",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/patient/testReports/viewFile/{{patient_fileID}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"viewFile",
										"{{patient_fileID}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "Retrieve Patient file by FileId invalid endpoints",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Check error message\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    const errorMessage = jsonData.error;\r",
											"    pm.expect(jsonData.error).to.exist;\r",
											"    pm.expect(jsonData.error).to.equal(errorMessage);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/patient/testReports/viewfile/{{patient_fileID}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"viewfile",
										"{{patient_fileID}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "Retrieve Patient file by FileId with unauthorize",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"pm.test(\"Check error message\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    const errorMessage = jsonData.error;\r",
											"    pm.expect(jsonData.error).to.exist;\r",
											"    pm.expect(jsonData.error).to.equal(errorMessage);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/patient/testReports/viewFile/{{patient_fileID}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"viewFile",
										"{{patient_fileID}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "Retrieve Patient file by FileId is invaild",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/patient/testReports/viewFile/66ad6c8f4oo7cf471aaad17",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"viewFile",
										"66ad6c8f4oo7cf471aaad17"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "Patient Login Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData= pm.response.json();\r",
											"pm.environment.set(\"patientToken\", jsonData.token);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"{{patientPassword}}\",\r\n  \"userLoginEmail\": \"{{patientEmail}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get test report by Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present and correct\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"const jsonData= pm.response.json();\r",
											"pm.test(\"Response has patientId key\", function () {\r",
											"    pm.expect(jsonData).to.have.property('patientId');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{patientToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/patient/testReports/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"{{patientId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a file by Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{patientToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/patient/testReports/viewFile/{{patient_fileID}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"viewFile",
										"{{patient_fileID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Delete patient success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/patient/853",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"patient",
												"853"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722813935&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=zi8qqvVaFInMFQa0iYaJARasdLtsUYeKZ1rHYzFXi2U%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722813935&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=zi8qqvVaFInMFQa0iYaJARasdLtsUYeKZ1rHYzFXi2U%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "text/plain;charset=UTF-8"
										},
										{
											"key": "Content-Length",
											"value": "41"
										},
										{
											"key": "Date",
											"value": "Sun, 04 Aug 2024 23:25:35 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "Patient with Id 853 deleted Successfully!"
								}
							]
						},
						{
							"name": "Delete Patient with invalid Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Patient with invalid PatientId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Renamed the 'jsonBody' variable to 'responseJSON'\r",
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/patient/{{InvalidpatientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{InvalidpatientId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Patient with invalid URL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{InvalidBaseURL}}/patient/{{patientid}}",
									"host": [
										"{{InvalidBaseURL}}"
									],
									"path": [
										"patient",
										"{{patientid}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"const allergies = [ \"Soy\", \"Almond\",  \"Walnut\", \"Pistachio\", \"Sesame\",  \"Pecan\", \"Cashew\",\"Peanuts\",\"Egg\", \"Milk\"];\r",
									"function getRandomItem(array) {\r",
									"    const randomIndex = Math.floor(Math.random() * array.length);\r",
									"    return array[randomIndex];\r",
									"}\r",
									"pm.variables.set(\"Allergy\", getRandomItem(allergies));\r",
									"\r",
									"const cuisine_category = [ \"indian\", \"south indian\", \"rajasthani\", \"punjabi\", \"bengali\", \"orissa\", \"gujarati\", \"maharashtrian\", \"andhra\", \"kerala\", \"goan\", \"kashmiri\", \"himachali\",\"tamil nadu\", \"karnataka\", \"sindhi\", \"chhattisgarhi\", \"madhya pradesh\", \"assamese\", \"manipuri\", \"tripuri\", \"sikkimese\", \"mizo\", \"arunachali\", \"uttarakhand\", \"haryanvi\", \"awadhi\", \"bihari\", \"uttar pradesh\", \"delhi\", \"north indian\", \"italian\", \"french\", \"arabic\",\"lebanese\", \"thai\", \"mexican\", \"american\" ];\r",
									"\r",
									"function getRandomItem(array) {\r",
									"    const randomIndex = Math.floor(Math.random() * array.length);\r",
									"    return array[randomIndex];\r",
									"}\r",
									"pm.variables.set(\"CuisineCategory\", getRandomItem(cuisine_category));\r",
									"\r",
									"const Food_Preference = [ \"Vegan\", \"Vegetarian\", \"Jain\", \"Eggetarian\", \"NonVeg\" ];\r",
									"//Eggetarian is a bug to be logged\r",
									"function getRandomItem(array) {\r",
									"    const randomIndex = Math.floor(Math.random() * array.length);\r",
									"    return array[randomIndex];\r",
									"}\r",
									"pm.variables.set(\"FoodPreference\", getRandomItem(Food_Preference));"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "saranyacopy for patient",
					"item": [
						{
							"name": "create dietician login Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" var jsonData = pm.response.json();\r",
											" pm.environment.set(\"dietToken\",jsonData.token);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJSZWluYV9SdWVja2VyOTdAeWFob28uY29tIiwiaWF0IjoxNzIyNDU5OTM1LCJleHAiOjE3MjI0ODg3MzV9.CwkEh3-Q7SGg3owo6ZlApiq...",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"Funny09\",\r\n  \"userLoginEmail\": \"Reina_Ruecker97@yahoo.com\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Patient",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const allergies = [ \"Soy\", \"Almond\",  \"Walnut\", \"Pistachio\", \"Sesame\",  \"Pecan\", \"Cashew\",\"Peanuts\",\"Egg\", \"Milk\"];\r",
											"function getRandomItem(array) {\r",
											"    const randomIndex = Math.floor(Math.random() * array.length);\r",
											"    return array[randomIndex];\r",
											"}\r",
											"pm.variables.set(\"Allergy\", getRandomItem(allergies));\r",
											"\r",
											"const cuisine_category = [ \"indian\", \"south indian\", \"rajasthani\", \"punjabi\", \"bengali\", \"orissa\", \"gujarati\", \"maharashtrian\", \"andhra\", \"kerala\", \"goan\", \"kashmiri\", \"himachali\",\"tamil nadu\", \"karnataka\", \"sindhi\", \"chhattisgarhi\", \"madhya pradesh\", \"assamese\", \"manipuri\", \"tripuri\", \"sikkimese\", \"mizo\", \"arunachali\", \"uttarakhand\", \"haryanvi\", \"awadhi\", \"bihari\", \"uttar pradesh\", \"delhi\", \"north indian\", \"italian\", \"french\", \"arabic\",\"lebanese\", \"thai\", \"mexican\", \"american\" ];\r",
											"\r",
											"function getRandomItem(array) {\r",
											"    const randomIndex = Math.floor(Math.random() * array.length);\r",
											"    return array[randomIndex];\r",
											"}\r",
											"pm.variables.set(\"CuisineCategory\", getRandomItem(cuisine_category));\r",
											"\r",
											"const Food_Preference = [ \"Vegan\", \"Vegetarian\", \"Jain\", \"Eggitarian\", \"NonVeg\" ];\r",
											"\r",
											"function getRandomItem(array) {\r",
											"    const randomIndex = Math.floor(Math.random() * array.length);\r",
											"    return array[randomIndex];\r",
											"}\r",
											"pm.variables.set(\"FoodPreference\", getRandomItem(Food_Preference));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Renamed the 'jsonBody' variable to 'responseBody' \r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Check Status Text\",()=>{\r",
											"    pm.response.to.have.status('Created');\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type Header is present\",()=>{\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type Header is application/json\",()=>{\r",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json');\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\",()=>{\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"let responsebody=pm.response.json();\r",
											"pm.test(\"Get Patients data type of response\",()=>{\r",
											"    pm.expect(responsebody.patientId).to.be.a(\"number\");\r",
											"    pm.expect(responsebody.FirstName).to.be.a(\"string\");\r",
											"    pm.expect(responsebody.LastName).to.be.a(\"string\");\r",
											"    pm.expect(responsebody.ContactNumber).to.be.a(\"string\");\r",
											"    pm.expect(responsebody.Email).to.be.a(\"string\");\r",
											"    pm.expect(responsebody.Allergy).to.be.a(\"string\");\r",
											"    pm.expect(responsebody.FoodPreference).to.be.a(\"string\");\r",
											"    pm.expect(responsebody.CuisisneCategory).to.be.a(\"string\");\r",
											"    pm.expect(responsebody.DateOfBirth).to.be.a(\"string\");\r",
											"    pm.expect(responsebody.DieticianId).to.be.a(\"number\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify the values are not null\", function () {\r",
											"    pm.expect(responsebody.FirstName).to.not.null;\r",
											"    pm.expect(responsebody.LastName).to.not.null;\r",
											"    pm.expect(responsebody.ContactNumber).to.not.null;\r",
											"    pm.expect(responsebody.Email).to.not.null;\r",
											"    pm.expect(responsebody.DateOfBirth).to.not.null;\r",
											"    pm.expect(responsebody.Allergy).to.not.null;\r",
											"    pm.expect(responsebody.CuisineCategory).to.not.null;\r",
											"});\r",
											"pm.environment.set(\"patientEmail\", responsebody.Email);\r",
											"\r",
											"pm.environment.set(\"patientId\", responsebody.patientId);\r",
											"\r",
											"const fileID = Object.keys(responsebody.FileMorbidity)[0];\r",
											"pm.environment.set(\"patient_fileID\",Â fileID);\r",
											"\r",
											"var schema={\r",
											"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"    \"type\": \"object\",\r",
											"    \"properties\": {\r",
											"        \"patientId\": {\r",
											"            \"type\": \"integer\"\r",
											"        },\r",
											"        \"FirstName\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"LastName\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"ContactNumber\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"Email\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"Allergy\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"FoodPreference\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"CuisineCategory\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"FileMorbidity\": {\r",
											"            \"type\": \"object\",\r",
											"            \"properties\": {\r",
											"                \"66ad69134717cf471aaad177\": {\r",
											"                    \"type\": \"object\",\r",
											"                    \"properties\": {\r",
											"                        \"HbA1c\": {\r",
											"                            \"type\": \"string\"\r",
											"                        },\r",
											"                        \"Average Glucose\": {\r",
											"                            \"type\": \"string\"\r",
											"                        }\r",
											"                    },\r",
											"                    \"required\": [\r",
											"                        \"HbA1c\",\r",
											"                        \"Average Glucose\"\r",
											"                    ]\r",
											"                },\r",
											"                \"66ad66be4717cf471aaad16f\": {\r",
											"                    \"type\": \"object\",\r",
											"                    \"properties\": {\r",
											"                        \"HbA1c\": {\r",
											"                            \"type\": \"string\"\r",
											"                        },\r",
											"                        \"Average Glucose\": {\r",
											"                            \"type\": \"string\"\r",
											"                        }\r",
											"                    },\r",
											"                    \"required\": [\r",
											"                        \"HbA1c\",\r",
											"                        \"Average Glucose\"\r",
											"                    ]\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"66ad69134717cf471aaad177\",\r",
											"                \"66ad66be4717cf471aaad16f\"\r",
											"            ]\r",
											"        },\r",
											"        \"FileMorbidityCondition\": {\r",
											"            \"type\": \"object\",\r",
											"            \"properties\": {\r",
											"                \"66ad69134717cf471aaad177\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"66ad66be4717cf471aaad16f\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"66ad69134717cf471aaad177\",\r",
											"                \"66ad66be4717cf471aaad16f\"\r",
											"            ]\r",
											"        },\r",
											"        \"DateOfBirth\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"DieticianId\": {\r",
											"            \"type\": \"integer\"\r",
											"        },\r",
											"        \"Vitals\": {\r",
											"            \"type\": \"object\",\r",
											"            \"properties\": {\r",
											"                \"66ad69134717cf471aaad177\": {\r",
											"                    \"type\": \"object\",\r",
											"                    \"properties\": {\r",
											"                        \"Weight\": {\r",
											"                            \"type\": \"number\"\r",
											"                        },\r",
											"                        \"Height\": {\r",
											"                            \"type\": \"number\"\r",
											"                        },\r",
											"                        \"Temperature\": {\r",
											"                            \"type\": \"number\"\r",
											"                        },\r",
											"                        \"SP\": {\r",
											"                            \"type\": \"integer\"\r",
											"                        },\r",
											"                        \"DP\": {\r",
											"                            \"type\": \"integer\"\r",
											"                        }\r",
											"                    },\r",
											"                    \"required\": [\r",
											"                        \"Weight\",\r",
											"                        \"Height\",\r",
											"                        \"Temperature\",\r",
											"                        \"SP\",\r",
											"                        \"DP\"\r",
											"                    ]\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"66ad69134717cf471aaad177\"\r",
											"            ]\r",
											"        },\r",
											"        \"LastVisitDate\": {\r",
											"            \"type\": \"string\"\r",
											"        }\r",
											"    },\r",
											"    \"required\": [\r",
											"        \"patientId\",\r",
											"        \"FirstName\",\r",
											"        \"LastName\",\r",
											"        \"ContactNumber\",\r",
											"        \"Email\",\r",
											"        \"Allergy\",\r",
											"        \"FoodPreference\",\r",
											"        \"CuisineCategory\",\r",
											"        \"FileMorbidity\",\r",
											"        \"FileMorbidityCondition\",\r",
											"        \"DateOfBirth\",\r",
											"        \"DieticianId\",\r",
											"        \"Vitals\",\r",
											"        \"LastVisitDate\"\r",
											"    ]\r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', () =>{\r",
											"    pm.expect(ajv.validate(responsebody, schema)).to.be.false;\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": "{{Patient_file1}}"
										}
									]
								},
								"url": {
									"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
									"protocol": "https",
									"host": [
										"dietician-july-api-hackathon-80f2590665cc",
										"herokuapp",
										"com"
									],
									"path": [
										"dietician",
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "New Request L",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345983\",\n\"Email\": \"smartdiet@gmail.com\",\n\"Allergy\": \"soy\",\n\"FoodPreference\": \"jain\",\n\"CuisineCategory\":\"indian\",\n\"DateOfBirth\": \"1986-02-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722460648&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=7lDaY9ld6NskRFkFKPQXQoWPgxqbgHVpV4uFMUWegdY%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722460648&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=7lDaY9ld6NskRFkFKPQXQoWPgxqbgHVpV4uFMUWegdY%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 31 Jul 2024 21:17:29 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345983\",\n    \"Email\": \"smartdiet@gmail.com\",\n    \"Allergy\": \"soy\",\n    \"FoodPreference\": \"jain\",\n    \"CuisineCategory\": \"indian\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\"\n    },\n    \"DateOfBirth\": \"1986-02-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								},
								{
									"name": "Create Patient",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"mall\",\n\"LastName\": \"mall\",\n\"ContactNumber\": \"9968345983\",\n\"Email\": \"smart@gmail.com\",\n\"Allergy\": \"soy\",\n\"FoodPreference\": \"jain\",\n\"CuisineCategory\":\"indian\",\n\"DateOfBirth\": \"1986-02-24\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "{{Patient_file1}}"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722612549&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=tc3vfZY%2FW9ZO0V4eF0eTYI1CIyOWjq1%2BrZ9ilkaqm3o%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722612549&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=tc3vfZY%2FW9ZO0V4eF0eTYI1CIyOWjq1%2BrZ9ilkaqm3o%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 15:29:09 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 348,\n    \"FirstName\": \"mall\",\n    \"LastName\": \"mall\",\n    \"ContactNumber\": \"9968345983\",\n    \"Email\": \"smart@gmail.com\",\n    \"Allergy\": \"soy\",\n    \"FoodPreference\": \"jain\",\n    \"CuisineCategory\": \"indian\",\n    \"FileMorbidity\": {\n        \"66acfb454717cf471aaad07c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66acfb454717cf471aaad07c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\"\n    },\n    \"DateOfBirth\": \"1986-02-24\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66acfb454717cf471aaad07c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-08-02T15:29:09.780+00:00\"\n}"
								}
							]
						},
						{
							"name": "Create Patient with Invalid Endpoint",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Renamed the variable to responseData\r",
											"pm.test(\"Status code is 404\", () => {\r",
											"  pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.error).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Error message should not be empty\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientId",
											"value": ": { \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}\n",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}{{InvalidEndPoint}}",
									"host": [
										"{{baseURL}}{{InvalidEndPoint}}"
									]
								}
							},
							"response": [
								{
									"name": "New Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientId",
													"value": ": { \"FirstName\": \"Sing\",\n\"LastName\": \"sing\",\n\"ContactNumber\": \"7878786778\",\n\"Email\": \"sing@gmail.com\",\n\"Allergy\": \"egg\",\n\"FoodPreference\": \"Vegetarian\",\n\"CuisineCategory\":\"lebanese\",\n\"DateOfBirth\": \"1996-02-14\"\n}\n",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/info",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"info"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722632637&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=0WfCplco7FJTq3s14Knmf%2FFN14sBI5hNZ5gjgQfHz28%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722632637&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=0WfCplco7FJTq3s14Knmf%2FFN14sBI5hNZ5gjgQfHz28%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 21:03:57 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-02T21:03:57.979+00:00\",\n    \"status\": 404,\n    \"error\": \"Not Found\",\n    \"path\": \"/dietician/info\"\n}"
								},
								{
									"name": "Create Patient with Invalid Endpoint",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientId",
													"value": ": { \"FirstName\": \"Sing\",\n\"LastName\": \"sing\",\n\"ContactNumber\": \"7878786778\",\n\"Email\": \"sing@gmail.com\",\n\"Allergy\": \"egg\",\n\"FoodPreference\": \"Vegetarian\",\n\"CuisineCategory\":\"lebanese\",\n\"DateOfBirth\": \"1996-02-14\"\n}\n",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/info",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"info"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1723037888&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=zc5rywuj0ywUQYvBLmwRB3qEzx0kEYMEEBTFf7FWTMY%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1723037888&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=zc5rywuj0ywUQYvBLmwRB3qEzx0kEYMEEBTFf7FWTMY%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 07 Aug 2024 13:38:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-07T13:38:08.551+00:00\",\n    \"status\": 404,\n    \"error\": \"Not Found\",\n    \"path\": \"/dietician/info\"\n}"
								}
							]
						},
						{
							"name": "Create Patient with Invalid authorisation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// commonTests.unauthorizedRequest;\r",
											"\r",
											"pm.test(\"Status code is 401\", () => {\r",
											"  pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is a non-empty string\", function () {\r",
											"    // const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(pm.response.json().error).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Error message should not be empty\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.request.headers.remove(\"Authorization\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientId",
											"value": ": { \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}\n",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "New Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientId",
													"value": ": { \"FirstName\": \"Sing\",\n\"LastName\": \"sing\",\n\"ContactNumber\": \"7878786778\",\n\"Email\": \"sing@gmail.com\",\n\"Allergy\": \"egg\",\n\"FoodPreference\": \"Vegetarian\",\n\"CuisineCategory\":\"lebanese\",\n\"DateOfBirth\": \"1996-02-14\"\n}\n",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/info",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"info"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722632637&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=0WfCplco7FJTq3s14Knmf%2FFN14sBI5hNZ5gjgQfHz28%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722632637&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=0WfCplco7FJTq3s14Knmf%2FFN14sBI5hNZ5gjgQfHz28%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 21:03:57 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-02T21:03:57.979+00:00\",\n    \"status\": 404,\n    \"error\": \"Not Found\",\n    \"path\": \"/dietician/info\"\n}"
								},
								{
									"name": "Create Patient with Invalid authorisation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientId",
													"value": ": { \"FirstName\": \"Sing\",\n\"LastName\": \"sing\",\n\"ContactNumber\": \"7878786778\",\n\"Email\": \"sing@gmail.com\",\n\"Allergy\": \"egg\",\n\"FoodPreference\": \"Vegetarian\",\n\"CuisineCategory\":\"lebanese\",\n\"DateOfBirth\": \"1996-02-14\"\n}\n",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1723038626&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=5WTPZmqO5O8GNjsWLJSIIe4yitKB%2F38B7gpWOGspF40%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1723038626&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=5WTPZmqO5O8GNjsWLJSIIe4yitKB%2F38B7gpWOGspF40%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 07 Aug 2024 13:50:26 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-07T13:50:27.023+00:00\",\n    \"status\": 401,\n    \"error\": \"Unauthorized\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create Patient_Invalid DOB_FutureDate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Renamed the 'jsonBody' variable to 'responseJSON'\r",
											"var responseJSON = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"// pm.test(\"Response has valid JSON body\", function () {\r",
											"//   pm.expect(responseJSON).to.be.an('object');\r",
											"//   pm.expect(responseJSON).to.have.property('timestamp');\r",
											"//   pm.expect(responseJSON).to.have.property('status');\r",
											"//   pm.expect(responseJSON).to.have.property('error');\r",
											"//   pm.expect(responseJSON).to.have.property('path');\r",
											"// });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// let requestBody = pm.request.body.raw;\r",
											"// let parsedBody = JSON.parse(requestBody);\r",
											"// let patient_DOB_future = pm.iterationData.get(\"patient_DOB_future\");\r",
											"// parsedBody.DateOfBirth = patient_DOB_future;\r",
											"// // Update the request body with the modified JSON\r",
											"// pm.request.body.raw = JSON.stringify(parsedBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientIno",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{patient_DOB_future}}\"\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient_Invalid DOB_Futuredate",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientIno",
													"value": "{ \"FirstName\": \"Reena\",\n\"LastName\": \"Swaha\",\n\"ContactNumber\": \"9005089945\",\n\"Email\": \"Reena@gmail.com\",\n\"Allergy\": \"walnut\",\n\"FoodPreference\": \"Vegan\",\n\"CuisineCategory\":\"goan\",\n\"DateOfBirth\": \"2026-01-01\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1723041914&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=dRxJWv%2FYUsGX9GXLY3lHnPT55DYVYeTTjRyIZuaBubI%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1723041914&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=dRxJWv%2FYUsGX9GXLY3lHnPT55DYVYeTTjRyIZuaBubI%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 07 Aug 2024 14:45:13 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-07T14:45:14.759+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create Patient with Invalid BaseURL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 404\", function () {\r",
											"  pm.expect(pm.response.code).to.equal(404);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response has Content-Type header with value 'text/html'\", function () {\r",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/html\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response body contains the expected error message or title\", function () {\r",
											"    const expectedErrorMessage = \"Heroku | Application Error\";\r",
											"    pm.expect(pm.response.text()).to.include(expectedErrorMessage);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate that the 'iframe' tag is present in the response body\", function () {\r",
											"    const responseData = pm.response.text();\r",
											"    \r",
											"    pm.expect(responseData).to.include('<iframe src=\"//www.herokucdn.com/error-pages/no-such-app.html\"></iframe>');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Ensure that the 'viewport' meta tag is present in the response body\", function () {\r",
											"    const responseData = pm.response.text();\r",
											"    \r",
											"    pm.expect(responseData).to.include('<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">');\r",
											"});\r",
											"//commonTests.notFoundRequest();\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientId",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}\n",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{InvalidBaseURL}}",
									"host": [
										"{{InvalidBaseURL}}"
									],
									"query": [
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "New Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientId",
													"value": ": { \"FirstName\": \"Sing\",\n\"LastName\": \"sing\",\n\"ContactNumber\": \"7878786778\",\n\"Email\": \"sing@gmail.com\",\n\"Allergy\": \"egg\",\n\"FoodPreference\": \"Vegetarian\",\n\"CuisineCategory\":\"lebanese\",\n\"DateOfBirth\": \"1996-02-14\"\n}\n",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/info",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"info"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722632637&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=0WfCplco7FJTq3s14Knmf%2FFN14sBI5hNZ5gjgQfHz28%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722632637&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=0WfCplco7FJTq3s14Knmf%2FFN14sBI5hNZ5gjgQfHz28%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 21:03:57 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-02T21:03:57.979+00:00\",\n    \"status\": 404,\n    \"error\": \"Not Found\",\n    \"path\": \"/dietician/info\"\n}"
								},
								{
									"name": "Create Patient with Invalid URL",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientId",
													"value": ": { \"FirstName\": \"Sing\",\n\"LastName\": \"sing\",\n\"ContactNumber\": \"7878786778\",\n\"Email\": \"sing@gmail.com\",\n\"Allergy\": \"egg\",\n\"FoodPreference\": \"Vegetarian\",\n\"CuisineCategory\":\"lebanese\",\n\"DateOfBirth\": \"1996-02-14\"\n}\n",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon--880f2590665cc.herokuapp.com/dietician",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon--880f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "Content-Length",
											"value": "563"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store"
										},
										{
											"key": "Content-Type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "2024-08-07 14:03:00.767807484 +0000 UTC"
										},
										{
											"key": "Server",
											"value": "heroku-router"
										}
									],
									"cookie": [],
									"body": "<!DOCTYPE html>\n<html>\n    <head>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <meta charset=\"utf-8\">\n        <title>Heroku | Application Error</title>\n        <style media=\"screen\">\n      html,body,iframe {\n        margin: 0;\n        padding: 0;\n      }\n      html,body {\n        height: 100%;\n        overflow: hidden;\n      }\n      iframe {\n        width: 100%;\n        height: 100%;\n        border: 0;\n      }\n    </style>\n    </head>\n    <body>\n        <iframe src=\"//www.herokucdn.com/error-pages/no-such-app.html\"></iframe>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "Create Patient with Invalid contactNo unique field",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// let requestBody = pm.request.body.form;\r",
											"// let parsedBody = JSON.parse(requestBody);\r",
											"// let patient_unique_contactnumber= pm.iterationData.get(\"patient_unique_contactnumber\");\r",
											"// parsedBody.ContactNumber = patient_unique_contactnumber;\r",
											"// // Updates the request body with the modified JSON\r",
											"// pm.request.body.raw = JSON.stringify(parsedBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseContent = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status code is 404\", function () {\r",
											"  pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response body has timestamp, status, error, and path properties\", function () {\r",
											"  pm.expect(responseContent).to.have.property('timestamp');\r",
											"  pm.expect(responseContent).to.have.property('status');\r",
											"  pm.expect(responseContent).to.have.property('error');\r",
											"  pm.expect(responseContent).to.have.property('path');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{patient_unique_contactnumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient\n",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient\n"
									]
								}
							},
							"response": [
								{
									"name": "ContactNo_<10digits",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientInfo",
													"value": "{ \"FirstName\": \"Maria\",\n\"LastName\": \"Sinha\",\n\"ContactNumber\": \"90050899\",\n\"Email\": \"maria@gmail.com\",\n\"Allergy\": \"pecan\",\n\"FoodPreference\": \"Nonveg\",\n\"CuisineCategory\":\"awadhi\",\n\"DateOfBirth\": \"1977-02-04\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef51a63-4b51-4b80-b890-931351970a48"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722696142&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=ofL5Z%2BPxIDOt0YXdrRC2vKSIaL3W3bM52WWWFtsn0FM%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722696142&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=ofL5Z%2BPxIDOt0YXdrRC2vKSIaL3W3bM52WWWFtsn0FM%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sat, 03 Aug 2024 14:42:22 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-03T14:42:22.670+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								},
								{
									"name": "ContactNo_specialChar",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientInfo",
													"value": "{ \"FirstName\": \"Riia\",\n\"LastName\": \"Suha\",\n\"ContactNumber\": \"900508994#\",\n\"Email\": \"maria@gmail.com\",\n\"Allergy\": \"pecan\",\n\"FoodPreference\": \"Nonveg\",\n\"CuisineCategory\":\"awadhi\",\n\"DateOfBirth\": \"1977-02-04\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef51a63-4b51-4b80-b890-931351970a48"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722697556&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=Cdr19ItqFuvLfXgqrfUAbPaNn7ABn0lYsCevTgdxasE%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722697556&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=Cdr19ItqFuvLfXgqrfUAbPaNn7ABn0lYsCevTgdxasE%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sat, 03 Aug 2024 15:05:56 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-03T15:05:56.975+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create patient with Missing contact No",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// let requestBody = pm.request.body.raw;\r",
											"// let parsedBody = JSON.parse(requestBody);\r",
											"// let patient_unique_contactnumber= pm.iterationData.get(\"patient_unique_contactnumber\");\r",
											"// parsedBody.ContactNumber = patient_unique_contactnumber;\r",
											"// // Updates the request body with the modified JSON\r",
											"// pm.request.body.raw = JSON.stringify(parsedBody);\r",
											"\r",
											"\r",
											"// let requestBody = pm.request.body.raw;\r",
											"// let parsedBody = JSON.parse(requestBody);\r",
											"// let includeContactNumber = pm.variables.get(\"Patient_ContactNumber\") === 'true';\r",
											"// if (!includeContactNumber) {\r",
											"//     delete parsedBody.ContactNumber;\r",
											"// }\r",
											"// pm.request.body.raw = JSON.stringify(parsedBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseBody = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response body has timestamp, status, error, and path properties\", function () {\r",
											"  pm.expect(responseBody).to.have.property('timestamp');\r",
											"  pm.expect(responseBody).to.have.property('status');\r",
											"  pm.expect(responseBody).to.have.property('error');\r",
											"  pm.expect(responseBody).to.have.property('path');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
									"protocol": "https",
									"host": [
										"dietician-july-api-hackathon-80f2590665cc",
										"herokuapp",
										"com"
									],
									"path": [
										"dietician",
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Create patient with Missing contact No",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientInfo",
													"value": "{ \"FirstName\": \"Han\",\n\"LastName\": \"mall\",\n\"ContactNumber\": \"\",\n\"Email\": \"Han@gmail.com\",\n\"Allergy\": \"walnut\",\n\"FoodPreference\": \"jain\",\n\"CuisineCategory\":\"iAndhra\",\n\"DateOfBirth\": \"1989-02-20\"\n}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseURL}}/patient",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1723059901&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=pd34ot%2BgS6j%2FEjWHnZAdNmWq3j6wHEJYfbkRtXoUYpY%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1723059901&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=pd34ot%2BgS6j%2FEjWHnZAdNmWq3j6wHEJYfbkRtXoUYpY%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 07 Aug 2024 19:45:01 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-07T19:45:01.045+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create patient with Missing LastName",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// let requestBody = pm.request.body.formdata;\r",
											"// let parsedBody = JSON.parse(requestBody);\r",
											"// let includeLastname = pm.variables.get(\"Patient_Lastname\") === 'false';\r",
											"// if (!includeLastname) {\r",
											"//     delete parsedBody.Lastname;\r",
											"// }\r",
											"// pm.request.body.formdata = JSON.stringify(parsedBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseJSON = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has valid JSON body\", function () {\r",
											"  pm.expect(responseJSON).to.be.an('object');\r",
											"  pm.expect(responseJSON).to.have.property('timestamp');\r",
											"  pm.expect(responseJSON).to.have.property('status');\r",
											"  pm.expect(responseJSON).to.have.property('error');\r",
											"  pm.expect(responseJSON).to.have.property('path');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient with Invalid request Copy",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722811776&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=OB7B5HRGcW07NtViHtpKgyE7XlApe20uPofTcs3ScqA%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722811776&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=OB7B5HRGcW07NtViHtpKgyE7XlApe20uPofTcs3ScqA%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 04 Aug 2024 22:49:36 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-04T22:49:36.926+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create Patient with Missing CuisineCategory",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// let requestBody = pm.request.body.formdata;\r",
											"// let parsedBody = JSON.parse(requestBody);\r",
											"// let includecuicine_category = pm.variables.get(\"cuisine_category\") === 'false';\r",
											"// if (!includecuicine_category) {\r",
											"//     delete parsedBody.CusineCategory;\r",
											"// }\r",
											"// pm.request.body.formdata = JSON.stringify(parsedBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has valid JSON body\", function () {\r",
											"  pm.expect(responseData).to.be.an('object');\r",
											"  pm.expect(responseData).to.have.property('timestamp');\r",
											"  pm.expect(responseData).to.have.property('status');\r",
											"  pm.expect(responseData).to.have.property('error');\r",
											"  pm.expect(responseData).to.have.property('path');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Missing CuisineCategory",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientInfo",
													"value": "{ \"FirstName\": \"Sony\",\n\"LastName\": \"Sony\",\n\"ContactNumber\": \"9005089943\",\n\"Email\": \"Sony@gmail.com\",\n\"Allergy\": \"pecan\",\n\"FoodPreference\": \"Nonveg\",\n\"CuisineCategory\":\"\",\n\"DateOfBirth\": \"1977-02-04\"\n}",
													"type": "text"
												},
												{
													"key": "File",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722700373&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=2e9rfCi5OiUxg4ojh9w8b3NnNJYz6X9NrgSQfIVOFTo%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722700373&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=2e9rfCi5OiUxg4ojh9w8b3NnNJYz6X9NrgSQfIVOFTo%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sat, 03 Aug 2024 15:52:53 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-03T15:52:53.395+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create Patient with Invalid CuisineCategory",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// let requestBody = pm.request.body.raw;\r",
											"// let parsedBody = JSON.parse(requestBody);\r",
											"// let includecuicine_category = pm.variables.get(\"cuisine_category\") === 'false';\r",
											"// if (!includecuicine_category) {\r",
											"//     delete parsedBody.CusineCategory;\r",
											"// }\r",
											"// pm.request.body.raw = JSON.stringify(parsedBody);\r",
											"const cuisine_category = [ \"indian\", \"south indian\", \"rajasthani\", \"punjabi\", \"bengali\", \"orissa\", \"gujarati\", \"maharashtrian\", \"andhra\", \"kerala\", \"goan\", \"kashmiri\", \"himachali\",\"tamil nadu\", \"karnataka\", \"sindhi\", \"chhattisgarhi\", \"madhya pradesh\", \"assamese\", \"manipuri\", \"tripuri\", \"sikkimese\", \"mizo\", \"arunachali\", \"uttarakhand\", \"haryanvi\", \"awadhi\", \"bihari\", \"uttar pradesh\", \"delhi\", \"north indian\", \"italian\", \"french\", \"arabic\",\"lebanese\", \"thai\", \"mexican\", \"american\" ];\r",
											"\r",
											"function getRandomItem(array) {\r",
											"    const randomIndex = Math.floor(Math.random() * array.length);\r",
											"    return array[randomIndex];\r",
											"}\r",
											"pm.environment.set(\"CuisineCategory\", getRandomItem(cuisine_category));\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseContent = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has valid JSON body\", function () {\r",
											"  pm.expect(responseContent).to.be.an('object');\r",
											"  pm.expect(responseContent).to.have.property('timestamp');\r",
											"  pm.expect(responseContent).to.have.property('status');\r",
											"  pm.expect(responseContent).to.have.property('error');\r",
											"  pm.expect(responseContent).to.have.property('path');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient withInvalid CuisineCategory",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "PatientInfo",
													"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}",
													"type": "text"
												},
												{
													"key": "File",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29"
												}
											]
										},
										"url": {
											"raw": "{{baseURL}}/patient",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1723051466&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=4BOwR3Ki0v7bu4bEO%2BNFBYOLILa0ty%2B3Eg8o176OR7U%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1723051466&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=4BOwR3Ki0v7bu4bEO%2BNFBYOLILa0ty%2B3Eg8o176OR7U%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 07 Aug 2024 17:24:27 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-07T17:24:27.048+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create patient with Missing Email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// let requestBody = pm.request.body.formdata;\r",
											"// let parsedBody = JSON.parse(requestBody);\r",
											"// let includeEmail = pm.variables.get(\"Patient_Email\") === 'true';\r",
											"// if (!includeEmail) {\r",
											"//     delete parsedBody.Email;\r",
											"// }\r",
											"// pm.request.body.formdata = JSON.stringify(parsedBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseJSON = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "PatientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient with Invalid request Copy",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722811776&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=OB7B5HRGcW07NtViHtpKgyE7XlApe20uPofTcs3ScqA%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722811776&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=OB7B5HRGcW07NtViHtpKgyE7XlApe20uPofTcs3ScqA%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 04 Aug 2024 22:49:36 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-04T22:49:36.926+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create patient with Invalid Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Check error message\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    const errorMessage = jsonData.error;\r",
											"    pm.expect(jsonData.error).to.exist;\r",
											"    pm.expect(jsonData.error).to.equal(errorMessage);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//  let requestBody = pm.request.body.formdata;\r",
											"//  let parsedBody = JSON.parse(requestBody);\r",
											"//  let patient_invalidemail= pm.iterationData.get(\"patient_invalidemail\");\r",
											"// parsedBody.Email = patient_invalidemail;\r",
											"//  pm.request.body.formdata = JSON.stringify(parsedBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{patient_invalidemail}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}\n",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient with Invalid request Copy",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722811776&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=OB7B5HRGcW07NtViHtpKgyE7XlApe20uPofTcs3ScqA%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722811776&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=OB7B5HRGcW07NtViHtpKgyE7XlApe20uPofTcs3ScqA%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 04 Aug 2024 22:49:36 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-04T22:49:36.926+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create patient with Invalid Allergy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", () => {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"const jsonData= pm.response.json();\r",
											"\r",
											"pm.test(\"Error message for input\", () => {\r",
											"pm.expect(jsonData.Allergy).to.eql(\"allergy : Invalid Allergy Category\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// let requestBody = pm.request.body.raw;\r",
											"// let parsedBody = JSON.parse(requestBody);\r",
											"// let patient_invalidAllergy= pm.iterationData.get(\"patient_invalidAllergy\");\r",
											"// parsedBody.Allergy = patient_invalidAllergy;\r",
											"// pm.request.body.raw = JSON.stringify(parsedBody);\r",
											"// const allergies = [ \"Soy\", \"Almond\",  \"Walnut\", \"Pistachio\", \"Sesame\",  \"Pecan\", \"Cashew\",\"Peanuts\",\"Egg\", \"Milk\"];\r",
											"// function getRandomItem(array) {\r",
											"//     const randomIndex = Math.floor(Math.random() * array.length);\r",
											"//     return array[randomIndex];\r",
											"// }\r",
											"// pm.variables.set(\"Allergy\", getRandomItem(allergies));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient with Invalid request Copy",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722811776&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=OB7B5HRGcW07NtViHtpKgyE7XlApe20uPofTcs3ScqA%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722811776&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=OB7B5HRGcW07NtViHtpKgyE7XlApe20uPofTcs3ScqA%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 04 Aug 2024 22:49:36 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2024-08-04T22:49:36.926+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"path\": \"/dietician/patient\"\n}"
								}
							]
						},
						{
							"name": "Create patient with Missing DOB",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseData = pm.response.text();\r",
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Error message for input\", () => {\r",
											"    pm.expect(responseData).to.eql(\"Date Should be in format yyyy-MM-dd\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// let requestBody = pm.request.body.formdata;\r",
											"// let parsedBody = JSON.parse(requestBody);\r",
											"// let includeDOB = pm.variables.get(\"Patient_DateOfBirth\") === 'true';\r",
											"// // Conditionally modify the request body\r",
											"// if (!includeDOB) {\r",
											"//     delete parsedBody.DateofBirth;\r",
											"// }\r",
											"// pm.request.body.formdata = JSON.stringify(parsedBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"\"\n}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": []
						},
						{
							"name": "update patient by Id update only firstname Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Check if patientId exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('patientId');\r",
											"    pm.expect(jsonData.patientId).to.equal(1167);\r",
											"});\r",
											"\r",
											"pm.test(\"Check if FirstName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"   pm.expect(jsonData).to.have.property('FirstName');\r",
											"    pm.expect(jsonData.FirstName).to.equal(pm.iterationData.get(\"patient_update_firstName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if LastName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('LastName');\r",
											"    pm.expect(jsonData.LastName).to.equal(pm.iterationData.get(\"Patient_LastName\"));\r",
											"});\r",
											"pm.test(\"Check if contactNumber exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('ContactNumber');\r",
											"    pm.expect(jsonData.ContactNumber).to.equal(pm.iterationData.get(\"Patient_ContactNumber\"));\r",
											"});\r",
											"pm.test(\"Check if Email exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Email');\r",
											"    pm.expect(jsonData.Email).to.equal(pm.iterationData.get(\"patient_Email\"));\r",
											"});\r",
											"pm.test(\"Check if Allergy exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Allergy');\r",
											"    pm.expect(jsonData.Allergy).to.equal(pm.iterationData.get(\"Patient_Allergy\"));\r",
											"});\r",
											"pm.test(\"Check if FoodPreference exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('FoodPreference');\r",
											"    pm.expect(jsonData.FoodPreference).to.equal(pm.iterationData.get(\"Patient_FoodPreference\"));\r",
											"});\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('CuisineCategory');\r",
											"    pm.expect(jsonData.CuisineCategory).to.equal(pm.iterationData.get(\"Patient_CuisineCategory\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('DateOfBirth');\r",
											"    pm.expect(jsonData.DateOfBirth).to.equal(pm.iterationData.get(\"Patient_DateOfBirth\"));\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{patient_update_firstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": "{{patient_update_file}}"
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient by Id update only last name Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Check if patientId exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('patientId');\r",
											"    pm.expect(jsonData.patientId).to.equal(1167);\r",
											"});\r",
											"\r",
											"pm.test(\"Check if FirstName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"   pm.expect(jsonData).to.have.property('FirstName');\r",
											"    pm.expect(jsonData.FirstName).to.equal(pm.iterationData.get(\"Patient_FirstName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if LastName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('LastName');\r",
											"    pm.expect(jsonData.LastName).to.equal(pm.iterationData.get(\"patient_update_lastName\"));\r",
											"});\r",
											"pm.test(\"Check if contactNumber exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('ContactNumber');\r",
											"    pm.expect(jsonData.ContactNumber).to.equal(pm.iterationData.get(\"Patient_ContactNumber\"));\r",
											"});\r",
											"pm.test(\"Check if Email exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Email');\r",
											"    pm.expect(jsonData.Email).to.equal(pm.iterationData.get(\"patient_Email\"));\r",
											"});\r",
											"pm.test(\"Check if Allergy exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Allergy');\r",
											"    pm.expect(jsonData.Allergy).to.equal(pm.iterationData.get(\"Patient_Allergy\"));\r",
											"});\r",
											"pm.test(\"Check if FoodPreference exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('FoodPreference');\r",
											"    pm.expect(jsonData.FoodPreference).to.equal(pm.iterationData.get(\"Patient_FoodPreference\"));\r",
											"});\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('CuisineCategory');\r",
											"    pm.expect(jsonData.CuisineCategory).to.equal(pm.iterationData.get(\"Patient_CuisineCategory\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('DateOfBirth');\r",
											"    pm.expect(jsonData.DateOfBirth).to.equal(pm.iterationData.get(\"Patient_DateOfBirth\"));\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{patient_update_lastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient by Id update only contact number Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Check if patientId exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('patientId');\r",
											"    pm.expect(jsonData.patientId).to.equal(1167);\r",
											"});\r",
											"\r",
											"pm.test(\"Check if FirstName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"   pm.expect(jsonData).to.have.property('FirstName');\r",
											"    pm.expect(jsonData.FirstName).to.equal(pm.iterationData.get(\"Patient_FirstName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if LastName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('LastName');\r",
											"    pm.expect(jsonData.LastName).to.equal(pm.iterationData.get(\"Patient_LastName\"));\r",
											"});\r",
											"pm.test(\"Check if contactNumber exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('ContactNumber');\r",
											"    pm.expect(jsonData.ContactNumber).to.equal(pm.iterationData.get(\"patient_update_contactNumber\"));\r",
											"});\r",
											"pm.test(\"Check if Email exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Email');\r",
											"    pm.expect(jsonData.Email).to.equal(pm.iterationData.get(\"patient_Email\"));\r",
											"});\r",
											"pm.test(\"Check if Allergy exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Allergy');\r",
											"    pm.expect(jsonData.Allergy).to.equal(pm.iterationData.get(\"Patient_Allergy\"));\r",
											"});\r",
											"pm.test(\"Check if FoodPreference exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('FoodPreference');\r",
											"    pm.expect(jsonData.FoodPreference).to.equal(pm.iterationData.get(\"Patient_FoodPreference\"));\r",
											"});\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('CuisineCategory');\r",
											"    pm.expect(jsonData.CuisineCategory).to.equal(pm.iterationData.get(\"Patient_CuisineCategory\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('DateOfBirth');\r",
											"    pm.expect(jsonData.DateOfBirth).to.equal(pm.iterationData.get(\"Patient_DateOfBirth\"));\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{patient_update_contactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}\n",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "PtInfo",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient by Id update only Email Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Check if patientId exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('patientId');\r",
											"    pm.expect(jsonData.patientId).to.equal(1167);\r",
											"});\r",
											"\r",
											"pm.test(\"Check if FirstName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"   pm.expect(jsonData).to.have.property('FirstName');\r",
											"    pm.expect(jsonData.FirstName).to.equal(pm.iterationData.get(\"Patient_FirstName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if LastName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('LastName');\r",
											"    pm.expect(jsonData.LastName).to.equal(pm.iterationData.get(\"Patient_LastName\"));\r",
											"});\r",
											"pm.test(\"Check if contactNumber exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('ContactNumber');\r",
											"    pm.expect(jsonData.ContactNumber).to.equal(pm.iterationData.get(\"Patient_ContactNumber\"));\r",
											"});\r",
											"pm.test(\"Check if Email exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Email');\r",
											"    pm.expect(jsonData.Email).to.equal(pm.iterationData.get(\"patient_update_email\"));\r",
											"});\r",
											"pm.test(\"Check if Allergy exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Allergy');\r",
											"    pm.expect(jsonData.Allergy).to.equal(pm.iterationData.get(\"Patient_Allergy\"));\r",
											"});\r",
											"pm.test(\"Check if FoodPreference exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('FoodPreference');\r",
											"    pm.expect(jsonData.FoodPreference).to.equal(pm.iterationData.get(\"Patient_FoodPreference\"));\r",
											"});\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('CuisineCategory');\r",
											"    pm.expect(jsonData.CuisineCategory).to.equal(pm.iterationData.get(\"Patient_CuisineCategory\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('DateOfBirth');\r",
											"    pm.expect(jsonData.DateOfBirth).to.equal(pm.iterationData.get(\"Patient_DateOfBirth\"));\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{patient_update_email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient by Id update Allergy field Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Check if patientId exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('patientId');\r",
											"    pm.expect(jsonData.patientId).to.equal(1167);\r",
											"});\r",
											"\r",
											"pm.test(\"Check if FirstName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"   pm.expect(jsonData).to.have.property('FirstName');\r",
											"    pm.expect(jsonData.FirstName).to.equal(pm.iterationData.get(\"Patient_FirstName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if LastName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('LastName');\r",
											"    pm.expect(jsonData.LastName).to.equal(pm.iterationData.get(\"Patient_LastName\"));\r",
											"});\r",
											"pm.test(\"Check if contactNumber exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('ContactNumber');\r",
											"    pm.expect(jsonData.ContactNumber).to.equal(pm.iterationData.get(\"Patient_ContactNumber\"));\r",
											"});\r",
											"pm.test(\"Check if Email exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Email');\r",
											"    pm.expect(jsonData.Email).to.equal(pm.iterationData.get(\"patient_Email\"));\r",
											"});\r",
											"pm.test(\"Check if Allergy exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Allergy');\r",
											"    pm.expect(jsonData.Allergy).to.equal(pm.iterationData.get(\"patient_update_allergy\"));\r",
											"});\r",
											"pm.test(\"Check if FoodPreference exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('FoodPreference');\r",
											"    pm.expect(jsonData.FoodPreference).to.equal(pm.iterationData.get(\"Patient_FoodPreference\"));\r",
											"});\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('CuisineCategory');\r",
											"    pm.expect(jsonData.CuisineCategory).to.equal(pm.iterationData.get(\"Patient_CuisineCategory\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('DateOfBirth');\r",
											"    pm.expect(jsonData.DateOfBirth).to.equal(pm.iterationData.get(\"Patient_DateOfBirth\"));\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{patient_update_allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient by Id update FoodPreference field Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Check if patientId exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('patientId');\r",
											"    pm.expect(jsonData.patientId).to.equal(1167);\r",
											"});\r",
											"\r",
											"pm.test(\"Check if FirstName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"   pm.expect(jsonData).to.have.property('FirstName');\r",
											"    pm.expect(jsonData.FirstName).to.equal(pm.iterationData.get(\"Patient_FirstName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if LastName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('LastName');\r",
											"    pm.expect(jsonData.LastName).to.equal(pm.iterationData.get(\"Patient_LastName\"));\r",
											"});\r",
											"pm.test(\"Check if contactNumber exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('ContactNumber');\r",
											"    pm.expect(jsonData.ContactNumber).to.equal(pm.iterationData.get(\"Patient_ContactNumber\"));\r",
											"});\r",
											"pm.test(\"Check if Email exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Email');\r",
											"    pm.expect(jsonData.Email).to.equal(pm.iterationData.get(\"patient_Email\"));\r",
											"});\r",
											"pm.test(\"Check if Allergy exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Allergy');\r",
											"    pm.expect(jsonData.Allergy).to.equal(pm.iterationData.get(\"Patient_Allergy\"));\r",
											"});\r",
											"pm.test(\"Check if FoodPreference exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('FoodPreference');\r",
											"    pm.expect(jsonData.FoodPreference).to.equal(pm.iterationData.get(\"patient_update_foodPreference\"));\r",
											"});\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('CuisineCategory');\r",
											"    pm.expect(jsonData.CuisineCategory).to.equal(pm.iterationData.get(\"Patient_CuisineCategory\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if DateOfBirth exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('DateOfBirth');\r",
											"    pm.expect(jsonData.DateOfBirth).to.equal(pm.iterationData.get(\"Patient_DateOfBirth\"));\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{patient_update_foodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient by Id update DateOfBirth field Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Check if patientId exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('patientId');\r",
											"    pm.expect(jsonData.patientId).to.equal(1167);\r",
											"});\r",
											"\r",
											"pm.test(\"Check if FirstName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"   pm.expect(jsonData).to.have.property('FirstName');\r",
											"    pm.expect(jsonData.FirstName).to.equal(pm.iterationData.get(\"Patient_FirstName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if LastName exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('LastName');\r",
											"    pm.expect(jsonData.LastName).to.equal(pm.iterationData.get(\"Patient_LastName\"));\r",
											"});\r",
											"pm.test(\"Check if contactNumber exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('ContactNumber');\r",
											"    pm.expect(jsonData.ContactNumber).to.equal(pm.iterationData.get(\"Patient_ContactNumber\"));\r",
											"});\r",
											"pm.test(\"Check if Email exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Email');\r",
											"    pm.expect(jsonData.Email).to.equal(pm.iterationData.get(\"patient_Email\"));\r",
											"});\r",
											"pm.test(\"Check if Allergy exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('Allergy');\r",
											"    pm.expect(jsonData.Allergy).to.equal(pm.iterationData.get(\"Patient_Allergy\"));\r",
											"});\r",
											"pm.test(\"Check if FoodPreference exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('FoodPreference');\r",
											"    pm.expect(jsonData.FoodPreference).to.equal(pm.iterationData.get(\"Patient_FoodPreference\"));\r",
											"});\r",
											"pm.test(\"Check if CuisineCategory exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('CuisineCategory');\r",
											"    pm.expect(jsonData.CuisineCategory).to.equal(pm.iterationData.get(\"Patient_CuisineCategory\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Check if DateOfBirth exist in JSON response\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('DateOfBirth');\r",
											"    pm.expect(jsonData.DateOfBirth).to.equal(pm.iterationData.get(\"patient_update_dateOfBirth\"));\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{patient_update_dateOfBirth}}\"}\n",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient by Id add new report without vitals",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Vitals key should be present in the response\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.have.property('Vitals');\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"// pm.test(\"Check if fileId exist in JSON response\", function () {\r",
											"//    const fileID = Object.keys(jsonBody.FileMorbidity)[0];\r",
											"//         pm.environment.set(\"fileID\",Â fileID);\r",
											"\r",
											"    \r",
											"// });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": "{{Patient_update_newFile}}"
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/newReports/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"newReports",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient by Id with invalid endpoints Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"pm.test(\"Error message should be 'Not Found'\", function () {\r",
											"    pm.expect(errorMessage).to.equal(\"Not Found\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patie/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patie",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient by Id (unauthorized) Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient add new report with invalid endpoints Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message should be 'Not Found'\", function () {\r",
											"    let errorDetails = jsonData.details.error;\r",
											"    pm.expect(errorDetails).to.equal(\"Not Found\");\r",
											"});\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": []
										},
										{
											"key": "PtInfo",
											"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/newRepor/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"newRepor",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient add new report with no auth Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Error message should be 'Not Found'\", function () {\r",
											"    let errorDetails = jsonData.details.error;\r",
											"    pm.expect(errorDetails).to.equal(\"Not Found\");\r",
											"});\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": []
										},
										{
											"key": "PtInfo",
											"value": "\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/newReports/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"newReports",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "update patient add new report  with vitals",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Vitals key should be present in the response\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.have.property('Vitals');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Vitals key contains expected subfields\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    \r",
											"    pm.expect(jsonData.Vitals).to.exist;\r",
											"    pm.expect(jsonData.Vitals).to.have.property('Weight');\r",
											"    pm.expect(jsonData.Vitals.Weight).to.equal(pm.iterationData(\"patient_Weight\"));\r",
											"     pm.expect(jsonData.Vitals.Height).to.equal(pm.iterationData(\"patient_Height\"));\r",
											"    pm.expect(jsonData.Vitals.Temperature).to.equal(pm.iterationData(\"patient_Temperature\"));\r",
											"    pm.expect(jsonData.Vitals.Sp).to.equal(pm.iterationData('patient_SP'));\r",
											"    pm.expect(jsonData.Vitals.DP).to.equal(pm.iterationData('patient_DP'));\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{ \"FirstName\": \"{{Patient_FirstName}}\",\n\"LastName\": \"{{Patient_LastName}}\",\n\"ContactNumber\": \"{{Patient_ContactNumber}}\",\n\"Email\": \"{{Patient_Email}}\",\n\"Allergy\":\"{{Patient_Allergy}}\",\n\"FoodPreference\": \"{{Patient_FoodPreference}}\",\n\"CuisineCategory\":\"{{Patient_CuisineCategory}}\",\n\"DateOfBirth\": \"{{Patient_DateOfBirth}}\"}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": "{{patient_update_newfile1}}"
										},
										{
											"key": "vitals",
											"value": "{ \"Weight\" : {{patient_Weight}},\n\"Height\" : {{patient_Height}},\n\"Temperature\" :{{patient_Temperature}} ,\n\"SP\" :{{patient_SP}},\n\"DP\" :{{patient_DP}}\n}\n",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/newReports/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"newReports",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "get patient morbidity details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present and correct\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has 'patientId' key\", function () {\r",
											"    pm.expect(jsonData).to.have.property('patientId');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/patient/testReports/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "get patient morbidity details with invalid endpoints",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {",
											"  pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Content-Type is present and correct\", function () {",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/patient/testeports/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"testeports",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "get patient morbidity details with unauthorize",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is within an acceptable range\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"pm.test(\"Check for error message\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error).to.exist;\r",
											"    pm.expect(jsonData.error).to.equal(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Check for timestamp\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.timestamp).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Print response body\", function () {\r",
											"    const responseJson = pm.response.json();\r",
											"    console.log(responseJson);\r",
											"});\r",
											"\r",
											"pm.test(\"Print specific value from JSON response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    console.log(jsonData.timestamp);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/patient/testReports/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "Get all Patients",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response schema is valid\", function () {",
											"",
											"  var schema = {",
											"    type: \"array\",",
											"    items: {",
											"      type: \"object\",",
											"      properties: {",
											"        patientId: { type: \"number\" },",
											"        FirstName: { type: \"string\" },",
											"        LastName: { type: \"string\" },",
											"        ContactNumber: { type: \"string\" },",
											"        Email: { type: \"string\", format: \"email\" },",
											"        Allergy: { type: \"string\" },",
											"        FoodPreference: { type: \"string\" },",
											"        CuisineCategory: { type: \"string\" },",
											"        FileMorbidity: { type: \"object\" },",
											"        FileMorbidityCondition: { type: \"object\" },",
											"        DateOfBirth: { type: \"string\" },",
											"        DieticianId: { type: \"number\" },",
											"        Vitals: { type: \"object\" },",
											"        LastVisitDate: { type: \"string\" }",
											"      },",
											"      required: [\"patientId\", \"FirstName\", \"LastName\", \"ContactNumber\", \"Email\", \"Allergy\", \"FoodPreference\", \"CuisineCategory\", \"FileMorbidity\", \"FileMorbidityCondition\", \"DateOfBirth\", \"DieticianId\", \"Vitals\", \"LastVisitDate\"]",
											"    }",
											"  };",
											"",
											"  var response = pm.response.json();",
											"  pm.expect(tv4.validate(response, schema)).to.be.true;",
											"});",
											"pm.test(\"Response time is less than 200ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"});",
											"  pm.test(\"Response time is less than 500ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Get all Patients",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient",
											"protocol": "https",
											"host": [
												"dietician-july-api-hackathon-80f2590665cc",
												"herokuapp",
												"com"
											],
											"path": [
												"dietician",
												"patient"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722718172&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=ahGtYBw1IlnAvUMuJR8mSjY6IwR9Bwf72jKVHIGqNlI%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722718172&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=ahGtYBw1IlnAvUMuJR8mSjY6IwR9Bwf72jKVHIGqNlI%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sat, 03 Aug 2024 20:49:32 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"patientId\": 33,\n        \"FirstName\": \"malli\",\n        \"LastName\": \"malli\",\n        \"ContactNumber\": \"9867345989\",\n        \"Email\": \"smartdiet1@gmail.com\",\n        \"Allergy\": \"ALMOND\",\n        \"FoodPreference\": \"Jain\",\n        \"CuisineCategory\": \"rajasthani\",\n        \"FileMorbidity\": {\n            \"66ad684d4717cf471aaad175\": {},\n            \"66ad6aa04717cf471aaad179\": {},\n            \"66ad7b894717cf471aaad197\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad37b74717cf471aaad0c3\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad3bb84717cf471aaad0cf\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad65e14717cf471aaad16d\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad7bbe4717cf471aaad199\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad36ce4717cf471aaad0bf\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66aaa9e9e6f5802145ab051c\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad2d234717cf471aaad0b7\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad6c794717cf471aaad17b\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad35584717cf471aaad0bd\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad39404717cf471aaad0cb\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad2a684717cf471aaad0b1\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad2fce4717cf471aaad0bb\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad67a84717cf471aaad173\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66ad67a84717cf471aaad171\": {},\n            \"66ad6c8f4717cf471aaad17d\": {}\n        },\n        \"FileMorbidityCondition\": {\n            \"66ad684d4717cf471aaad175\": \"\",\n            \"66ad6aa04717cf471aaad179\": \"\",\n            \"66ad7b894717cf471aaad197\": \"Prediabetic \\n\",\n            \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n            \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n            \"66ad65e14717cf471aaad16d\": \"Prediabetic \\n\",\n            \"66ad7bbe4717cf471aaad199\": \"Prediabetic \\n\",\n            \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\",\n            \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n            \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n            \"66ad6c794717cf471aaad17b\": \"Prediabetic \\n\",\n            \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n            \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n            \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n            \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n            \"66ad67a84717cf471aaad173\": \"Prediabetic \\n\",\n            \"66ad67a84717cf471aaad171\": \"\",\n            \"66ad6c8f4717cf471aaad17d\": \"\"\n        },\n        \"DateOfBirth\": \"1987-03-14\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66aaa9e9e6f5802145ab051c\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n    },\n    {\n        \"patientId\": 129,\n        \"FirstName\": \"Ram\",\n        \"LastName\": \"Setu\",\n        \"ContactNumber\": \"9009089789\",\n        \"Email\": \"ram@gmail.com\",\n        \"Allergy\": \"Peanut\",\n        \"FoodPreference\": \"NonVeg\",\n        \"CuisineCategory\": \"sindhi\",\n        \"FileMorbidity\": {\n            \"66ab9db93e6c022b073da1f5\": {\n                \"T3\": \"6.3 ng/mL\",\n                \"T4\": \"15.7 Âµg/dL\",\n                \"TSH\": \"0.016 ÂµIU/mL\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66ab9db93e6c022b073da1f5\": \"Thyroid: Hyperthyroidism \\nBlood Pressure: Hypotension \\n\"\n        },\n        \"DateOfBirth\": \"1987-02-14\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66ab9db93e6c022b073da1f5\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-01T14:37:45.435+00:00\"\n    },\n    {\n        \"patientId\": 132,\n        \"FirstName\": \"kristy\",\n        \"LastName\": \"john\",\n        \"ContactNumber\": \"9009089777\",\n        \"Email\": \"john@gmail.com\",\n        \"Allergy\": \"milk\",\n        \"FoodPreference\": \"vegan\",\n        \"CuisineCategory\": \"goan\",\n        \"FileMorbidity\": {\n            \"66aba0e93e6c022b073da203\": {\n                \"T4\": \"1.22 Âµg/dl\",\n                \"TSH\": \"100.0 mIU/L\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66aba0e93e6c022b073da203\": \"Thyroid: Hypothyroidism \\nBlood Pressure: Hypotension \\n\"\n        },\n        \"DateOfBirth\": \"1985-03-17\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66aba0e93e6c022b073da203\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-01T14:51:21.226+00:00\"\n    },\n    {\n        \"patientId\": 135,\n        \"FirstName\": \"tim\",\n        \"LastName\": \"kim\",\n        \"ContactNumber\": \"9029089777\",\n        \"Email\": \"kim@gmail.com\",\n        \"Allergy\": \"pecan\",\n        \"FoodPreference\": \"vegan\",\n        \"CuisineCategory\": \"bengali\",\n        \"FileMorbidity\": {\n            \"66aba3e33e6c022b073da20f\": {\n                \"T3\": \"6.3 ng/mL\",\n                \"T4\": \"15.7 Âµg/dL\",\n                \"TSH\": \"0.016 ÂµIU/mL\"\n            },\n            \"66aba3e33e6c022b073da20b\": {\n                \"T3\": \"6.3 ng/mL\",\n                \"T4\": \"15.7 Âµg/dL\",\n                \"TSH\": \"0.016 ÂµIU/mL\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66aba3e33e6c022b073da20f\": \"Thyroid: Hyperthyroidism \\n\",\n            \"66aba3e33e6c022b073da20b\": \"Thyroid: Hyperthyroidism \\nBlood Pressure: Hypotension \\n\"\n        },\n        \"DateOfBirth\": \"1987-04-27\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66aba3e33e6c022b073da20b\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-01T15:04:03.119+00:00\"\n    },\n    {\n        \"patientId\": 137,\n        \"FirstName\": \"Mary\",\n        \"LastName\": \"Singh\",\n        \"ContactNumber\": \"9005089789\",\n        \"Email\": \"mary@gmail.com\",\n        \"Allergy\": \"PEANUT\",\n        \"FoodPreference\": \"Vegan\",\n        \"CuisineCategory\": \"Indian\",\n        \"FileMorbidity\": {\n            \"66aba7c73e6c022b073da219\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66aba7c73e6c022b073da21b\": {\n                \"T3\": \"6.3 ng/mL\",\n                \"T4\": \"15.7 Âµg/dL\",\n                \"TSH\": \"0.016 ÂµIU/mL\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66aba7c73e6c022b073da219\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n            \"66aba7c73e6c022b073da21b\": \"Thyroid: Hyperthyroidism \\n\"\n        },\n        \"DateOfBirth\": \"1977-02-14\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66aba7c73e6c022b073da219\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-01T15:20:39.153+00:00\"\n    },\n    {\n        \"patientId\": 187,\n        \"FirstName\": \"jimmy\",\n        \"LastName\": \"Sinn\",\n        \"ContactNumber\": \"9005099789\",\n        \"Email\": \"jimmy@gmail.com\",\n        \"Allergy\": \"walnut\",\n        \"FoodPreference\": \"Vegetarian\",\n        \"CuisineCategory\": \"bihari\",\n        \"FileMorbidity\": {\n            \"66abfac03e6c022b073da291\": {\n                \"T3\": \"6.3 ng/mL\",\n                \"T4\": \"15.7 Âµg/dL\",\n                \"TSH\": \"0.016 ÂµIU/mL\"\n            },\n            \"66abfac03e6c022b073da28f\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66abfac03e6c022b073da291\": \"Thyroid: Hyperthyroidism \\n\",\n            \"66abfac03e6c022b073da28f\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\"\n        },\n        \"DateOfBirth\": \"1977-12-14\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66abfac03e6c022b073da28f\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-01T21:14:40.717+00:00\"\n    },\n    {\n        \"patientId\": 191,\n        \"FirstName\": \"sun\",\n        \"LastName\": \"fern\",\n        \"ContactNumber\": \"9075099789\",\n        \"Email\": \"sun@gmail.com\",\n        \"Allergy\": \"pecan\",\n        \"FoodPreference\": \"Vegan\",\n        \"CuisineCategory\": \"gujarati\",\n        \"FileMorbidity\": {\n            \"66abfda13e6c022b073da29f\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66abfda13e6c022b073da2a1\": {\n                \"T3\": \"6.3 ng/mL\",\n                \"T4\": \"15.7 Âµg/dL\",\n                \"TSH\": \"0.016 ÂµIU/mL\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66abfda13e6c022b073da29f\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n            \"66abfda13e6c022b073da2a1\": \"Thyroid: Hyperthyroidism \\n\"\n        },\n        \"DateOfBirth\": \"1977-05-14\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66abfda13e6c022b073da29f\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-01T21:26:57.254+00:00\"\n    },\n    {\n        \"patientId\": 192,\n        \"FirstName\": \"suin\",\n        \"LastName\": \"fern\",\n        \"ContactNumber\": \"9075099788\",\n        \"Email\": \"suin@gmail.com\",\n        \"Allergy\": \"pecan\",\n        \"FoodPreference\": \"Vegan\",\n        \"CuisineCategory\": \"gujarati\",\n        \"FileMorbidity\": {\n            \"66abfe423e6c022b073da2a5\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            },\n            \"66abfe423e6c022b073da2a7\": {\n                \"T3\": \"6.3 ng/mL\",\n                \"T4\": \"15.7 Âµg/dL\",\n                \"TSH\": \"0.016 ÂµIU/mL\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66abfe423e6c022b073da2a5\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n            \"66abfe423e6c022b073da2a7\": \"Thyroid: Hyperthyroidism \\n\"\n        },\n        \"DateOfBirth\": \"1977-06-14\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66abfe423e6c022b073da2a5\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-01T21:29:38.833+00:00\"\n    },\n    {\n        \"patientId\": 323,\n        \"FirstName\": \"malli\",\n        \"LastName\": \"malli\",\n        \"ContactNumber\": \"9867345986\",\n        \"Email\": \"smartdiet@gmail.com\",\n        \"Allergy\": \"soy\",\n        \"FoodPreference\": \"jain\",\n        \"CuisineCategory\": \"indian\",\n        \"FileMorbidity\": {\n            \"66ac85903e6c022b073da4b4\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66ac85903e6c022b073da4b4\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\"\n        },\n        \"DateOfBirth\": \"1986-02-14\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66ac85903e6c022b073da4b4\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-02T07:06:56.854+00:00\"\n    },\n    {\n        \"patientId\": 324,\n        \"FirstName\": \"Talli\",\n        \"LastName\": \"malli\",\n        \"ContactNumber\": \"9867345988\",\n        \"Email\": \"smartdiet@gmail.com\",\n        \"Allergy\": \"soy\",\n        \"FoodPreference\": \"jain\",\n        \"CuisineCategory\": \"indian\",\n        \"FileMorbidity\": {\n            \"66ac862e3e6c022b073da4b6\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66ac862e3e6c022b073da4b6\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\"\n        },\n        \"DateOfBirth\": \"1986-03-14\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66ac862e3e6c022b073da4b6\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-02T07:09:34.890+00:00\"\n    },\n    {\n        \"patientId\": 348,\n        \"FirstName\": \"mall\",\n        \"LastName\": \"mall\",\n        \"ContactNumber\": \"9968345983\",\n        \"Email\": \"smart@gmail.com\",\n        \"Allergy\": \"soy\",\n        \"FoodPreference\": \"jain\",\n        \"CuisineCategory\": \"indian\",\n        \"FileMorbidity\": {\n            \"66acfb454717cf471aaad07c\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66acfb454717cf471aaad07c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\"\n        },\n        \"DateOfBirth\": \"1986-02-24\",\n        \"DieticianId\": 221,\n        \"Vitals\": {\n            \"66acfb454717cf471aaad07c\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-02T15:29:09.780+00:00\"\n    }\n]"
								}
							]
						},
						{
							"name": "Get all Patients with invalid endpoints",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check for error message\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error).to.exist;\r",
											"    pm.expect(jsonData.error).to.equal(\"Not Found\");\r",
											"});\r",
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient\n\n",
									"protocol": "https",
									"host": [
										"dietician-july-api-hackathon-80f2590665cc",
										"herokuapp",
										"com"
									],
									"path": [
										"dietician",
										"patient\n\n"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "Get all Patients with unauthorize",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"content-type\");\r",
											"});\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"pm.test(\"Check error message\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    const errorMessage = jsonData.error;\r",
											"    pm.expect(jsonData.error).to.exist;\r",
											"    pm.expect(jsonData.error).to.equal(errorMessage);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/patient",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "Get all Patients with invalid baseUrl",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Check error message\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    const errorMessage = jsonData.error;\r",
											"    pm.expect(jsonData.error).to.exist;\r",
											"    pm.expect(jsonData.error).to.equal(errorMessage);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/patient\n\n",
									"protocol": "https",
									"host": [
										"dietician-july-api-hackathon-80f2590665cc",
										"herokuapp",
										"com"
									],
									"path": [
										"dietician",
										"patient\n\n"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "Retrieve Patient file by FileId",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is application/json\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Cache-Control is no-cache\", function () {\r",
											"    pm.response.to.have.header(\"Cache-Control\", \"no-cache\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/patient/testReports/viewFile/{{patient_fileID}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"viewFile",
										"{{patient_fileID}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "Retrieve Patient file by FileId invalid endpoints",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Check error message\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    const errorMessage = jsonData.error;\r",
											"    pm.expect(jsonData.error).to.exist;\r",
											"    pm.expect(jsonData.error).to.equal(errorMessage);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/patient/testReports/viewfile/{{patient_fileID}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"viewfile",
										"{{patient_fileID}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "Retrieve Patient file by FileId with unauthorize",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"pm.test(\"Check error message\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    const errorMessage = jsonData.error;\r",
											"    pm.expect(jsonData.error).to.exist;\r",
											"    pm.expect(jsonData.error).to.equal(errorMessage);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/patient/testReports/viewFile/{{patient_fileID}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"viewFile",
										"{{patient_fileID}}"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "Retrieve Patient file by FileId is invaild",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check for error message\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error).to.exist;\r",
											"    pm.expect(jsonData.error).to.equal(\"Not Found\");\r",
											"});\r",
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseURL}}/patient/testReports/viewFile/66ad6c8f4oo7cf471aaad17",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"viewFile",
										"66ad6c8f4oo7cf471aaad17"
									]
								}
							},
							"response": [
								{
									"name": "Create Patient 2 Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "patientInfo",
													"value": "{ \"FirstName\": \"malli\",\n\"LastName\": \"malli\",\n\"ContactNumber\": \"9867345989\",\n\"Email\": \"smartdiet1@gmail.com\",\n\"Allergy\": \"ALMOND\",\n\"FoodPreference\": \"Jain\",\n\"CuisineCategory\":\"rajasthani\",\n\"DateOfBirth\": \"1987-03-14\"\n}",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef4f81e-6866-4e80-b96a-b1a87c11c05d"
												},
												{
													"key": "PtInfo",
													"value": " { \"FirstName\": \"Ram\",\n\"LastName\": \"Setu\",\n\"ContactNumber\": \"9009089789\",\n\"Email\": \"ram@gmail.com\",\n\"Allergy\": \"Peanuts\",\n\"FoodPreference\": \"NonVeg\",\n\"CuisineCategory\":\"sindhi\",\n\"DateOfBirth\": \"1987-02-14\"\n}\n",
													"type": "text",
													"disabled": true
												},
												{
													"key": "file",
													"type": "file",
													"src": "postman-cloud:///1ef50041-b0cf-4520-834f-a4054daded29",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/patient/33\n",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patient",
												"33\n"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722629047&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=8RqX%2BqL%2FJeVJs2s0urHTHFh9ACsKsy25ugRJpKoNrGQ%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 02 Aug 2024 20:04:08 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"patientId\": 33,\n    \"FirstName\": \"malli\",\n    \"LastName\": \"malli\",\n    \"ContactNumber\": \"9867345989\",\n    \"Email\": \"smartdiet1@gmail.com\",\n    \"Allergy\": \"ALMOND\",\n    \"FoodPreference\": \"Jain\",\n    \"CuisineCategory\": \"rajasthani\",\n    \"FileMorbidity\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2d234717cf471aaad0b7\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad35584717cf471aaad0bd\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad39404717cf471aaad0cb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2a684717cf471aaad0b1\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad2fce4717cf471aaad0bb\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad37b74717cf471aaad0c3\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad3bb84717cf471aaad0cf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        },\n        \"66ad36ce4717cf471aaad0bf\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66aaa9e9e6f5802145ab051c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\",\n        \"66ad2d234717cf471aaad0b7\": \"Prediabetic \\n\",\n        \"66ad35584717cf471aaad0bd\": \"Prediabetic \\n\",\n        \"66ad39404717cf471aaad0cb\": \"Prediabetic \\n\",\n        \"66ad2a684717cf471aaad0b1\": \"Prediabetic \\n\",\n        \"66ad2fce4717cf471aaad0bb\": \"Prediabetic \\n\",\n        \"66ad37b74717cf471aaad0c3\": \"Prediabetic \\n\",\n        \"66ad3bb84717cf471aaad0cf\": \"Prediabetic \\n\",\n        \"66ad36ce4717cf471aaad0bf\": \"Prediabetic \\n\"\n    },\n    \"DateOfBirth\": \"1987-03-14\",\n    \"DieticianId\": 221,\n    \"Vitals\": {\n        \"66aaa9e9e6f5802145ab051c\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-07-31T21:17:29.088+00:00\"\n}"
								}
							]
						},
						{
							"name": "Patient Login Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData= pm.response.json();\r",
											"pm.environment.set(\"patientToken\", jsonData.token);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"{{patientPassword}}\",\r\n  \"userLoginEmail\": \"{{patientEmail}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get test report by Patient",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{patientToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/patient/testReports/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"{{patientId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a file by Patient",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{patientToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/patient/testReports/viewFile/{{patient_fileID}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"testReports",
										"viewFile",
										"{{patient_fileID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Patient",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": [
								{
									"name": "Delete patient success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/patient/853",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"patient",
												"853"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722813935&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=zi8qqvVaFInMFQa0iYaJARasdLtsUYeKZ1rHYzFXi2U%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722813935&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=zi8qqvVaFInMFQa0iYaJARasdLtsUYeKZ1rHYzFXi2U%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "text/plain;charset=UTF-8"
										},
										{
											"key": "Content-Length",
											"value": "41"
										},
										{
											"key": "Date",
											"value": "Sun, 04 Aug 2024 23:25:35 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "Patient with Id 853 deleted Successfully!"
								}
							]
						},
						{
							"name": "Delete Patient with invalid Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.get(\"dietToken\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/patient/{{patientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{patientId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Patient with invalid PatientId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Renamed the 'jsonBody' variable to 'responseJSON'\r",
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/patient/{{InvalidpatientId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"patient",
										"{{InvalidpatientId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Patient with invalid URL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", () => {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dietToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{InvalidBaseURL}}/patient/{{patientid}}",
									"host": [
										"{{InvalidBaseURL}}"
									],
									"path": [
										"patient",
										"{{patientid}}"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"\r",
							"const allergies = [ \"Soy\", \"Almond\",  \"Walnut\", \"Pistachio\", \"Sesame\",  \"Pecan\", \"Cashew\",\"Peanuts\",\"Egg\", \"Milk\"];\r",
							"function getRandomItem(array) {\r",
							"    const randomIndex = Math.floor(Math.random() * array.length);\r",
							"    return array[randomIndex];\r",
							"}\r",
							"pm.collectionVariables.set(\"Allergy\", getRandomItem(allergies));\r",
							"\r",
							"const cuisine_category = [ \"indian\", \"south indian\", \"rajasthani\", \"punjabi\", \"bengali\", \"orissa\", \"gujarati\", \"maharashtrian\", \"andhra\", \"kerala\", \"goan\", \"kashmiri\", \"himachali\",\"tamil nadu\", \"karnataka\", \"sindhi\", \"chhattisgarhi\", \"madhya pradesh\", \"assamese\", \"manipuri\", \"tripuri\", \"sikkimese\", \"mizo\", \"arunachali\", \"uttarakhand\", \"haryanvi\", \"awadhi\", \"bihari\", \"uttar pradesh\", \"delhi\", \"north indian\", \"italian\", \"french\", \"arabic\",\"lebanese\", \"thai\", \"mexican\", \"american\" ];\r",
							"\r",
							"function getRandomItem(array) {\r",
							"    const randomIndex = Math.floor(Math.random() * array.length);\r",
							"    return array[randomIndex];\r",
							"}\r",
							"pm.collectionVariables.set(\"CuisineCategory\", getRandomItem(cuisine_category));\r",
							"\r",
							"const Food_Preference = [ \"Vegan\", \"Vegetarian\", \"Jain\", \"Eggitarian\", \"NonVeg\" ];\r",
							"\r",
							"function getRandomItem(array) {\r",
							"    const randomIndex = Math.floor(Math.random() * array.length);\r",
							"    return array[randomIndex];\r",
							"}\r",
							"pm.collectionVariables.set(\"FoodPreference\", getRandomItem(Food_Preference));"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"commonTests = {\r",
							"    validPostRequest: function () {\r",
							"        //Status code\r",
							"        pm.test(\"Status code is 200\", () => {\r",
							"            pm.response.to.have.status(200);\r",
							"        });\r",
							"\r",
							"        pm.test(\"Status code name has string\", () => {\r",
							"            pm.response.to.have.status(\"OK\");\r",
							"        });\r",
							"\r",
							"        //Header \r",
							"        pm.test(\"Content-Type is present\", () => {\r",
							"            pm.response.to.have.header(\"Content-Type\");\r",
							"        });\r",
							"\r",
							"        pm.test(\"Content-Type header is application/json\", () => {\r",
							"            pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql('application/json');\r",
							"        });\r",
							"\r",
							"        //Response time\r",
							"        pm.test(\"Response time is less than 1000ms\", () => {\r",
							"            pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"        });\r",
							"    },\r",
							"    unauthorizedRequest: function () {\r",
							"        //Unauthorized\r",
							"        pm.test(\"Status code is 401\", () => {\r",
							"            pm.response.to.have.status(401);\r",
							"        });\r",
							"\r",
							"        pm.test(\"Status code name has string\", () => {\r",
							"            pm.response.to.have.status(\"Unauthorized\");\r",
							"        });\r",
							"    },\r",
							"    notFoundRequest: function () {\r",
							"        //Invalid URL \r",
							"        pm.test(\"Status code is 404\", () => {\r",
							"            pm.response.to.have.status(404);\r",
							"        });\r",
							"\r",
							"        pm.test(\"Status code name has string\", () => {\r",
							"            pm.response.to.have.status(\"Not Found\");\r",
							"        });\r",
							"    },\r",
							"    invalidInputsRequest: function () {\r",
							"        //Unauthorized\r",
							"        pm.test(\"Status code is 400\", () => {\r",
							"            pm.response.to.have.status(400);\r",
							"        });\r",
							"\r",
							"        pm.test(\"Status code name has string\", () => {\r",
							"            pm.response.to.have.status(\"Bad Request\");\r",
							"        });\r",
							"    }\r",
							"        // const jsonData = pm.response.json();\r",
							"        // console.log(jsonData.FileMorbidity);\r",
							"\r",
							"        // function EmailID(emailField) {\r",
							"        // pm.test(\"Email is in a valid format\", function () {\r",
							"        // const responseData = pm.response.json();\r",
							"        // pm.expect(responseData[emailField]).to.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/, \"Email must be in a valid format\");\r",
							"        // });\r",
							"\r",
							"        // function DateOfBirth(dateField) {\r",
							"        // pm.test(\"DateOfBirth is in a valid date format\", function () {\r",
							"        // const responseData = pm.response.json();\r",
							"        // pm.expect(responseData[dateField]).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);\r",
							"        // });\r",
							"\r",
							"        // function ContactNumber(ContactNumberField) {\r",
							"        // pm.test(\"ContactNumber is in a valid format\", function () {\r",
							"        // const responseData = pm.response.json();\r",
							"        // pm.expect(responseData[ContactNumberField]).to.match(/^\\d{10}$/);\r",
							"        // });\r",
							"\r",
							"\r",
							"        // pm.environment.set(\"Email\", Email.toString());\r",
							"        // pm.environment.set(\"DateOfBirth\", DateOfBirth.toString());\r",
							"        // pm.environment.set(\"ContactNumber\", ContactNumber.toString());\r",
							"\r",
							"        \r",
							"\r",
							"\r",
							"\r",
							"\r",
							"   \r",
							"       // }\r",
							"\r",
							"\r",
							"       // }}\r",
							"\r",
							"}"
						]
					}
				}
			]
		}
	],
	"variable": [
		{
			"key": "{{bearer token}}",
			"value": "\"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJUZWFtMTJAZ21haWwuY29tIiwiaWF0IjoxNzIyNDA5MDYxLCJleHAiOjE3MjI0Mzc4NjF9.qvPZw0DV3L8GCtmI0-iXUgDOz4U4aLvdfEfS26kltULivOnst1OYvAwQ1QcWWOTOvoN0K0qUL5cJq_bMrPj8Mg\","
		},
		{
			"key": "baseUrl",
			"value": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com"
		},
		{
			"key": "Allergy",
			"value": ""
		},
		{
			"key": "CuisineCategory",
			"value": ""
		},
		{
			"key": "FoodPreference",
			"value": ""
		}
	]
}